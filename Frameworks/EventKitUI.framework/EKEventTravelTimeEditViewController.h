/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@class EKCalendarItem, EKEventStore, EKStructuredLocation, EKTravelRouteEstimationController, NSDate, NSIndexPath, NSString, UISwitch, UITableView, UIView;

@interface EKEventTravelTimeEditViewController : EKEditItemViewController <UITableViewDataSource, UITableViewDelegate, EKTravelRouteEstimationControllerDelegate, EKEditItemViewControllerDelegate> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    NSDate *_arrivalDate;
    EKCalendarItem *_calendarItem;
    NSIndexPath *_checkedItem;
    double _customTravelTimeDuration;
    EKStructuredLocation *_destinationStructuredLocation;
    EKEventStore *_eventStore;
    } _initFrame;
    EKStructuredLocation *_originStructuredLocation;
    long long _originalSelectedRoutingMode;
    double _originalSelectedTravelTime;
    EKTravelRouteEstimationController *_routeEstimationControler;
    NSString *_routeEstimationErrorMessage;
    long long _selectedRoutingMode;
    double _selectedTravelTime;
    UIView *_shadowView;
    UISwitch *_switchControl;
    UITableView *_table;
    long long _travelTimeSelectedChoice;
    bool_customTimesGroupIsShowing;
    bool_estimatedRowIsChecked;
    bool_estimationGroupIsShowing;
    bool_externallySetValueGroupIsShowing;
    bool_isAnimatingTableSections;
    bool_isOriginSelectionVisible;
    bool_pendingReloadData;
    bool_suppressErrors;
}

@property(retain) NSDate * arrivalDate;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(retain) EKStructuredLocation * destinationStructuredLocation;
@property(readonly) unsigned long long hash;
@property(retain) EKStructuredLocation * originStructuredLocation;
@property long long selectedRoutingMode;
@property double selectedTravelTime;
@property(readonly) Class superclass;

- (void).cxx_destruct;
- (void)_autoselectFromAvailableChoices;
- (void)_checkItemAtIndexPath:(id)arg1;
- (void)_contentCategorySizeChanged:(id)arg1;
- (unsigned long long)_customTravelTimeSection;
- (id)_errorStringForMapKitErrorCode:(unsigned long long)arg1;
- (unsigned long long)_estimatedTravelTimeSection;
- (unsigned long long)_externallySetValueTravelTimeSection;
- (void)_handleEstimationControllerTravelTimeLookupErrors;
- (void)_handleOriginLocationErrorsWithAlert:(bool)arg1;
- (id)_indexPathForSelectedTravelTime;
- (void)_layoutShadowView;
- (void)_locationsChanged;
- (long long)_numberOfEstimatedTravelTimeResultRows;
- (void)_originLocationButtonWasTapped;
- (id)_routeEstimationControler;
- (void)_setEstimationActive:(bool)arg1;
- (bool)_shouldAutoSelectEstimatedTravelTimeOnLookupCompletion;
- (void)_showRouteEstimationAlert;
- (bool)_showingOptions;
- (bool)_showingOptionsInitialState;
- (id)_stringForOriginLocation;
- (unsigned long long)_toggleSwitchSection;
- (void)_travelTimeActivationSwitchChanged:(id)arg1;
- (void)_updateTableView;
- (void)_updateVisibleSections;
- (id)arrivalDate;
- (id)description;
- (id)destinationStructuredLocation;
- (void)editItemViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (bool)editItemViewControllerCommit:(id)arg1;
- (bool)editItemViewControllerShouldShowDetachAlert;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleProvider:(id)arg2 calendarItem:(id)arg3 eventStore:(id)arg4;
- (void)loadView;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)originStructuredLocation;
- (void)routeEstimationControllerDidBeginOriginLocationLookup:(id)arg1;
- (void)routeEstimationControllerDidBeginTravelTimeLookup:(id)arg1;
- (void)routeEstimationControllerDidFinishOriginLocationLookup:(id)arg1;
- (void)routeEstimationControllerDidFinishTravelTimeLookup:(id)arg1;
- (long long)selectedRoutingMode;
- (double)selectedTravelTime;
- (void)setArrivalDate:(id)arg1;
- (void)setCell:(id)arg1 checked:(bool)arg2;
- (void)setDestinationStructuredLocation:(id)arg1;
- (void)setOriginStructuredLocation:(id)arg1;
- (void)setSelectedRoutingMode:(long long)arg1;
- (void)setSelectedTravelTime:(double)arg1;
- (void)setTravelTimeSelectedChoice:(long long)arg1;
- (bool)setTravelTimeSelectedChoiceEstimatedRowAtIndex:(unsigned long long)arg1;
- (void)setTravelTimeSelectedChoiceToFirstValidEstimatedRow;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (long long)travelTimeSelectedChoice;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end
