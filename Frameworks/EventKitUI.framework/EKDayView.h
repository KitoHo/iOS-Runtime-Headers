/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@class <EKDayViewDataSource>, <EKDayViewDelegate>, EKDayAllDayView, EKDayTimeView, EKDayViewContent, EKDayViewSpringLoadedScrollAnimation, EKEvent, NSArray, NSCalendar, NSDate, NSDateComponents, NSString, NSTimer, UIColor, UIImageView, UIPinchGestureRecognizer, UIScrollView, UITapGestureRecognizer, UIView;

@interface EKDayView : UIView <UIScrollViewDelegate, EKDayAllDayViewDelegate, EKDayViewContentDelegate, EKDayTimeViewDelegate> {
    struct CGSize { 
        double width; 
        double height; 
    struct CGPoint { 
        double x; 
        double y; 
    struct CGPoint { 
        double x; 
        double y; 
    EKDayAllDayView *_allDayView;
    UIView *_bottomLine;
    UIImageView *_bottomVerticalGridExtension;
    NSCalendar *_calendar;
    <EKDayViewDataSource> *_dataSource;
    EKDayViewContent *_dayContent;
    double _dayEnd;
    double _dayStart;
    <EKDayViewDelegate> *_delegate;
    NSDateComponents *_displayDate;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    NSArray *_existingTimedOcurrences;
    double _hourScale;
    NSDate *_lastInspectedOccurrenceOnDate;
    } _lastPinchDistance;
    } _lastPinchPoint1;
    double _nextDSTTransition;
    long long _orientation;
    int _outlineStyle;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    EKDayViewSpringLoadedScrollAnimation *_scrollAnimation;
    } _scrolledToFirstVisibleSecondForSize;
    UIScrollView *_scroller;
    NSTimer *_timeMarkerTimer;
    EKDayTimeView *_timeView;
    UIImageView *_topVerticalGridExtension;
    bool_alignsMidnightToTop;
    bool_allowPinchingHourHeights;
    bool_allowsOccurrenceSelection;
    bool_pinching;
    bool_scrollToOccurrencesOnNextReload;
    bool_scrollbarShowsInside;
    bool_scrollingToOccurrence;
    bool_settingDate;
    bool_shouldEverShowTimeIndicators;
    bool_userScrolling;
    bool_usesVibrantGridDrawing;
}

@property bool alignsMidnightToTop;
@property(readonly) EKDayAllDayView * allDayView;
@property bool allowPinchingHourHeights;
@property bool allowsOccurrenceSelection;
@property bool allowsScrolling;
@property bool animatesTimeMarker;
@property(copy) NSCalendar * calendar;
@property <EKDayViewDataSource> * dataSource;
@property(readonly) double dayEnd;
@property(readonly) double dayStart;
@property(copy,readonly) NSString * debugDescription;
@property <EKDayViewDelegate> * delegate;
@property(copy,readonly) NSString * description;
@property(retain) EKEvent * dimmedOccurrence;
@property(copy) NSDateComponents * displayDate;
@property bool eventsFillGrid;
@property int firstVisibleSecond;
@property(retain) UIColor * gridLineColor;
@property(readonly) unsigned long long hash;
@property double hourScale;
@property struct _NSRange { unsigned long long x1; unsigned long long x2; } hoursToRender;
@property(readonly) double leftContentInset;
@property struct CGPoint { double x1; double x2; } normalizedContentOffset;
@property int occurrenceBackgroundStyle;
@property(retain) UIColor * occurrenceLocationColor;
@property(retain) UIColor * occurrenceTextBackgroundColor;
@property(retain) UIColor * occurrenceTimeColor;
@property(retain) UIColor * occurrenceTitleColor;
@property(readonly) NSArray * occurrenceViews;
@property int outlineStyle;
@property(readonly) double scrollBarOffset;
@property(readonly) double scrollOffset;
@property bool shouldEverShowTimeIndicators;
@property bool showsLeftBorder;
@property bool showsTimeLabel;
@property bool showsTimeLine;
@property bool showsTimeMarker;
@property(readonly) Class superclass;
@property(retain) UIColor * timeViewTextColor;
@property bool usesVibrantGridDrawing;

- (void).cxx_destruct;
- (void)_adjustForDateOrCalendarChange;
- (double)_adjustSecondBackwardForDSTHole:(double)arg1;
- (double)_adjustSecondForwardForDSTHole:(double)arg1;
- (void)_clearVerticalGridExtensionImageCache;
- (void)_createAllDayView;
- (void)_dayViewPinched:(id)arg1;
- (void)_disposeAllDayView;
- (void)_doubleTap:(id)arg1;
- (void)_finishedScrollToSecond;
- (id)_generateVerticalGridExtensionImage;
- (void)_invalidateMarkerTimer;
- (void)_localeChanged;
- (void)_notifyDelegateOfFinishedScrollingToOccurrence;
- (struct CGPoint { double x1; double x2; })_pinchDistanceForGestureRecognizer:(id)arg1;
- (double)_positionOfSecond:(int)arg1;
- (void)_scrollToSecond:(int)arg1 animated:(bool)arg2 whenFinished:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_scrollerRect;
- (int)_secondAtPosition:(double)arg1;
- (bool)_showingAllDaySection;
- (void)_startMarkerTimer;
- (void)_stopScrolling;
- (void)_timeViewTapped:(id)arg1;
- (void)_updateContentForSizeCategoryChange:(id)arg1;
- (double)_verticalOffset;
- (void)addViewToScroller:(id)arg1 isAllDay:(bool)arg2;
- (void)adjustForSignificantTimeChange;
- (void)adjustFrameToSpanToMidnightFromStartDate:(id)arg1;
- (bool)alignsMidnightToTop;
- (double)allDayRegionHeight;
- (void)allDayView:(id)arg1 didSelectEvent:(id)arg2;
- (id)allDayView;
- (void)allDayViewDidLayoutSubviews:(id)arg1;
- (bool)allowPinchingHourHeights;
- (bool)allowsOccurrenceSelection;
- (bool)allowsScrolling;
- (bool)animatesTimeMarker;
- (void)bringEventToFront:(id)arg1;
- (id)calendar;
- (void)configureOccurrenceViewForGestureController:(id)arg1;
- (bool)containsOccurrences;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })currentTimeRectInView:(id)arg1;
- (id)dataSource;
- (double)dateAtPoint:(struct CGPoint { double x1; double x2; })arg1 isAllDay:(bool*)arg2 requireAllDayRegionInsistence:(bool)arg3;
- (double)dateAtPoint:(struct CGPoint { double x1; double x2; })arg1 isAllDay:(bool*)arg2;
- (void)dayAllDayView:(id)arg1 occurrenceViewClicked:(id)arg2;
- (void)dayContentView:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (double)dayEnd;
- (void)dayOccurrenceViewClicked:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (double)dayStart;
- (void)dayViewContent:(id)arg1 didCreateOccurrenceViews:(id)arg2;
- (void)dayViewContent:(id)arg1 didSelectEvent:(id)arg2;
- (void)dayViewContent:(id)arg1 didTapInEmptySpaceOnDay:(double)arg2;
- (void)dayViewContent:(id)arg1 didTapPinnedOccurrence:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)dimmedOccurrence;
- (id)displayDate;
- (bool)eventOccursOnThisDay:(id)arg1;
- (bool)eventsFillGrid;
- (int)firstVisibleSecond;
- (void)firstVisibleSecondChanged;
- (id)gridLineColor;
- (void)highlightHour:(double)arg1;
- (double)highlightedHour;
- (double)hourScale;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })hoursToRender;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 orientation:(long long)arg2 displayDate:(id)arg3 backgroundColor:(id)arg4 opaque:(bool)arg5 scrollbarShowsInside:(bool)arg6;
- (void)insertViewForEvent:(id)arg1 belowViewForOtherEvent:(id)arg2;
- (bool)isAllDayLabelHighlighted;
- (void)layoutSubviews;
- (double)leftContentInset;
- (double)maximumHourScale;
- (double)minimumHourScale;
- (struct CGPoint { double x1; double x2; })normalizedContentOffset;
- (int)occurrenceBackgroundStyle;
- (id)occurrenceLocationColor;
- (void)occurrencePressed:(id)arg1 onDay:(double)arg2;
- (id)occurrenceTextBackgroundColor;
- (id)occurrenceTimeColor;
- (id)occurrenceTitleColor;
- (id)occurrenceViewAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)occurrenceViewForEvent:(id)arg1;
- (id)occurrenceViews;
- (int)outlineStyle;
- (struct CGPoint { double x1; double x2; })pointAtDate:(double)arg1 isAllDay:(bool)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForEvent:(id)arg1;
- (void)relayoutExistingTimedOccurrences;
- (void)reloadData;
- (void)removeFromSuperview;
- (void)resetLastSelectedOccurrencePoint;
- (double)scrollBarOffset;
- (void)scrollEventsIntoViewAnimated:(bool)arg1;
- (double)scrollOffset;
- (void)scrollToDate:(id)arg1 animated:(bool)arg2 whenFinished:(id)arg3;
- (void)scrollToEvent:(id)arg1 animated:(bool)arg2 completionBlock:(id)arg3;
- (bool)scrollTowardPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)selectEvent:(id)arg1;
- (id)selectedEvent;
- (void)setAlignsMidnightToTop:(bool)arg1;
- (void)setAllDayLabelHighlighted:(bool)arg1;
- (void)setAllowPinchingHourHeights:(bool)arg1;
- (void)setAllowsOccurrenceSelection:(bool)arg1;
- (void)setAllowsScrolling:(bool)arg1;
- (void)setAnimatesTimeMarker:(bool)arg1;
- (void)setCalendar:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimmedOccurrence:(id)arg1;
- (void)setDisplayDate:(id)arg1;
- (void)setEventsFillGrid:(bool)arg1;
- (void)setFirstVisibleSecond:(int)arg1;
- (void)setGridLineColor:(id)arg1;
- (void)setHourScale:(double)arg1;
- (void)setHoursToRender:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setNormalizedContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setOccurrenceBackgroundStyle:(int)arg1;
- (void)setOccurrenceLocationColor:(id)arg1;
- (void)setOccurrenceTextBackgroundColor:(id)arg1;
- (void)setOccurrenceTimeColor:(id)arg1;
- (void)setOccurrenceTitleColor:(id)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOutlineStyle:(int)arg1;
- (void)setScrollerYInset:(double)arg1 keepingYPointVisible:(double)arg2;
- (void)setShouldEverShowTimeIndicators:(bool)arg1;
- (void)setShowsLeftBorder:(bool)arg1;
- (void)setShowsTimeLabel:(bool)arg1;
- (void)setShowsTimeLine:(bool)arg1;
- (void)setShowsTimeMarker:(bool)arg1;
- (void)setTimeViewTextColor:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setUsesVibrantGridDrawing:(bool)arg1;
- (bool)shouldEverShowTimeIndicators;
- (bool)showsLeftBorder;
- (bool)showsTimeLabel;
- (bool)showsTimeLine;
- (bool)showsTimeMarker;
- (id)timeViewTextColor;
- (void)updateMarkerPosition;
- (bool)usesVibrantGridDrawing;
- (void)willMoveToSuperview:(id)arg1;
- (double)yPositionPerhapsMatchingAllDayOccurrence:(id)arg1;

@end
