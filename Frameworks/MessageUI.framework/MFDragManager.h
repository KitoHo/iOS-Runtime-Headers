/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MessageUI.framework/MessageUI
 */

@class <MFDragDestination>, <MFDraggableItem>, MFGobblerGestureRecognizer, NSMutableArray, NSMutableDictionary, NSString, NSTimer, UIGestureRecognizer, UIView, UIWindow;

@interface MFDragManager : NSObject <UIGestureRecognizerDelegate> {
    struct CGPoint { 
        double x; 
        double y; 
    struct CGPoint { 
        double x; 
        double y; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    <MFDragDestination> *_currentDestination;
    UIGestureRecognizer *_currentGestureBeingProcessed;
    NSMutableArray *_dragContextValues;
    NSMutableArray *_dragDestinations;
    NSMutableArray *_dragSources;
    UIWindow *_dragWindow;
    <MFDraggableItem> *_draggedItem;
    } _draggedItemOriginalFrame;
    UIView *_draggedItemView;
    NSMutableDictionary *_gestureRecognizersForSource;
    MFGobblerGestureRecognizer *_gobblerGestureRecognizer;
    } _offsetCenterOfDraggedView;
    } _previousGestureLocation;
    NSTimer *_scrollTimer;
    NSMutableDictionary *_sourceForGestureRecognizer;
    double _timeOfLastBigUpdate;
    bool_dragWasSuccessful;
    bool_scrollingForDrag;
}

@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

+ (id)sharedInstance;

- (void)_cleanUpAfterDragCompleted;
- (bool)_gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (void)_handleLongPress:(id)arg1;
- (void)_processGestureUpdate;
- (void)_scrollViewIfNecessary;
- (void)addDragContext:(id)arg1;
- (void)addDragDestination:(id)arg1;
- (void)addDragSource:(id)arg1;
- (void)cancelCurrentDragOperation;
- (void)dealloc;
- (void)enumerateDragContextsUsingBlock:(id)arg1;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)init;
- (void)removeDragContext:(id)arg1;
- (void)removeDragDestination:(id)arg1;
- (void)removeDragSource:(id)arg1;

@end
