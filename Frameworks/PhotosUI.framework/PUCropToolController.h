/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@class CIImage, NSDictionary, NSMutableDictionary, NSString, PLPhotoEditModel, PLPhotoEditRenderer, PUCropAndStraightenView, PUCropAspect, PUCropHandleView, PUCropOverlayView, PUCropToolControllerSpec, PUTiltWheelControl, UIButton, UIImage, UIView;

@interface PUCropToolController : PUPhotoEditToolController <UIGestureRecognizerDelegate, PUCropAndStraightenViewDelegate, UIPopoverPresentationControllerDelegate> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    CIImage *__CIImage;
    NSMutableDictionary *__animationTargetsByKeyPath;
    NSMutableDictionary *__animationsByKeyPath;
    UIButton *__aspectButton;
    unsigned long long __contentViewsHiddenAnimationCount;
    PUCropAspect *__cropAspect;
    UIView *__cropCanvasView;
    NSDictionary *__cropHandleViewsByHandle;
    PUCropOverlayView *__cropOverlayView;
    UIButton *__cropToggleButton;
    NSString *__cropToggleButtonTitle;
    PUCropAndStraightenView *__cropView;
    } __cropViewFrameForLastModelLoad;
    UIImage *__image;
    } __initialHandlePanCropRect;
    NSMutableDictionary *__initialLocationsInHandlesByHandle;
    PLPhotoEditModel *__lastKnownEditModel;
    } __normalizedImageRect;
    } __previewViewInsets;
    PLPhotoEditRenderer *__renderer;
    UIButton *__rotateButton;
    double __rotateSnapshotStartAngle;
    UIView *__rotateSnapshotView;
    unsigned long long __rotatingAnimationCount;
    unsigned long long __rotation;
    PUCropHandleView *__selectedCropHandleView;
    double __straightenAngle;
    } __suggestedCrop;
    double __suggestedStraightenAngle;
    PUTiltWheelControl *__tiltControl;
    } __viewCropRect;
    bool__activeTool;
    bool__contentViewsHidden;
    bool__hasAppliedCropSuggestion;
    bool__hasAutoAppliedCropSuggestion;
    bool__hasRequestedCropSuggestion;
    bool__ignoreTrackingUpdates;
    bool__modelChangeLocal;
    bool__needsImageLoad;
    bool__needsModelLoad;
    bool__wantsPreviewViewHidden;
    bool_trackingTiltControl;
}

@property(setter=_setCIImage:,retain) CIImage * _CIImage;
@property(getter=_isActiveTool,setter=_setActiveTool:) bool _activeTool;
@property(setter=_setAnimationTargetsByKeyPath:,retain) NSMutableDictionary * _animationTargetsByKeyPath;
@property(setter=_setAnimationsByKeyPath:,retain) NSMutableDictionary * _animationsByKeyPath;
@property(setter=_setAspectButton:,retain) UIButton * _aspectButton;
@property(setter=_setContentViewsHidden:) bool _contentViewsHidden;
@property(setter=_setContentViewsHiddenAnimationCount:) unsigned long long _contentViewsHiddenAnimationCount;
@property(setter=_setCropAspect:,retain) PUCropAspect * _cropAspect;
@property(setter=_setCropCanvasView:,retain) UIView * _cropCanvasView;
@property(setter=_setCropHandleViewsByHandle:,retain) NSDictionary * _cropHandleViewsByHandle;
@property(setter=_setCropOverlayView:,retain) PUCropOverlayView * _cropOverlayView;
@property(setter=_setCropToggleButton:,retain) UIButton * _cropToggleButton;
@property(setter=_setCropToggleButtonTitle:,copy) NSString * _cropToggleButtonTitle;
@property(setter=_setCropView:,retain) PUCropAndStraightenView * _cropView;
@property(setter=_setCropViewFrameForLastModelLoad:) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _cropViewFrameForLastModelLoad;
@property(setter=_setHasAppliedCropSuggestion:) bool _hasAppliedCropSuggestion;
@property(setter=_setHasAutoAppliedCropSuggestion:) bool _hasAutoAppliedCropSuggestion;
@property(setter=_setHasRequestedCropSuggestion:) bool _hasRequestedCropSuggestion;
@property(setter=_setIgnoreTrackingUpdates:) bool _ignoreTrackingUpdates;
@property(setter=_setImage:,retain) UIImage * _image;
@property(setter=_setInitialHandlePanCropRect:) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _initialHandlePanCropRect;
@property(setter=_setInitialLocationsInHandlesByHandle:,retain) NSMutableDictionary * _initialLocationsInHandlesByHandle;
@property(setter=_setLastKnownEditModel:,retain) PLPhotoEditModel * _lastKnownEditModel;
@property(getter=_isModelChangeLocal,setter=_setModelChangeLocal:) bool _modelChangeLocal;
@property(setter=_setNeedsImageLoad:) bool _needsImageLoad;
@property(setter=_setNeedsModelLoad:) bool _needsModelLoad;
@property(setter=_setNormalizedImageRect:) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _normalizedImageRect;
@property(setter=_setPreviewViewInsets:) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } _previewViewInsets;
@property(setter=_setRenderer:,retain) PLPhotoEditRenderer * _renderer;
@property(setter=_setRotateButton:,retain) UIButton * _rotateButton;
@property(setter=_setRotateSnapshotStartAngle:) double _rotateSnapshotStartAngle;
@property(setter=_setRotateSnapshotView:,retain) UIView * _rotateSnapshotView;
@property(setter=_setRotatingAnimationCount:) unsigned long long _rotatingAnimationCount;
@property(setter=_setRotation:) unsigned long long _rotation;
@property(setter=_setSelectedCropHandleView:,retain) PUCropHandleView * _selectedCropHandleView;
@property(setter=_setStraightenAngle:) double _straightenAngle;
@property(setter=_setSuggestedCrop:) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _suggestedCrop;
@property(setter=_setSuggestedStraightenAngle:) double _suggestedStraightenAngle;
@property(setter=_setTiltControl:,retain) PUTiltWheelControl * _tiltControl;
@property(setter=_setViewCropRect:) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _viewCropRect;
@property(setter=_setWantsPreviewViewHidden:) bool _wantsPreviewViewHidden;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned long long hash;
@property(readonly) PUCropToolControllerSpec * spec;
@property(readonly) Class superclass;
@property(getter=_isTrackingTitlControl,setter=_setTrackingTiltControl:) bool trackingTiltControl;

- (void).cxx_destruct;
- (id)_CIImage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_addHeight:(double)arg1 toRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 anchorTop:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_addWidth:(double)arg1 toRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 anchorLeft:(bool)arg3;
- (id)_animateValueFromValue:(double)arg1 toValue:(double)arg2 interpolation:(id)arg3 completion:(id)arg4;
- (id)_animationForKeyPath:(id)arg1;
- (id)_animationTargetForKeyPath:(id)arg1;
- (id)_animationTargetsByKeyPath;
- (id)_animationsByKeyPath;
- (struct CGVector { double x1; double x2; })_applyAspectOfCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toHandleMovement:(struct CGVector { double x1; double x2; })arg2;
- (void)_applyCropSuggestion;
- (id)_aspectButton;
- (void)_aspectButtonTapped:(id)arg1;
- (void)_autoApplyCropSuggestionIfNeeded;
- (void)_autoRecomposeCropRect;
- (void)_cancelAnimationForKeyPath:(id)arg1;
- (void)_cancelDelayedRecomposeCropRect;
- (bool)_contentViewsHidden;
- (unsigned long long)_contentViewsHiddenAnimationCount;
- (struct CGVector { double x1; double x2; })_correctInputVector:(struct CGVector { double x1; double x2; })arg1 forHandle:(unsigned long long)arg2 onCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 lockDirection:(bool)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_correctRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withAspect:(double)arg2;
- (id)_cropAspect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_cropCanvasFrame;
- (id)_cropCanvasView;
- (id)_cropHandleViewsByHandle;
- (id)_cropOverlayView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_cropRectForCurrentAspectRatio;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_cropRectFromPanningHandle:(unsigned long long)arg1 byAmount:(struct CGVector { double x1; double x2; })arg2;
- (id)_cropToggleButton;
- (id)_cropToggleButtonTitle;
- (void)_cropToggleTapped:(id)arg1;
- (id)_cropView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_cropViewFrameForLastModelLoad;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_defaultCropRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_defaultNormalizedCropRect;
- (double)_defaultRotation;
- (double)_defaultStraightenAngle;
- (struct CGVector { double x1; double x2; })_deltaMaskForHandle:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_denormalizeImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_handleCropHandlePan:(id)arg1;
- (void)_handleTouchingGesture:(id)arg1;
- (bool)_hasAppliedCropSuggestion;
- (bool)_hasAutoAppliedCropSuggestion;
- (bool)_hasConstraintsForKey:(id)arg1;
- (bool)_hasCropSuggestion;
- (bool)_hasRequestedCropSuggestion;
- (void)_hideGrid;
- (void)_hideGridDelayed;
- (void)_hideMaskedContent;
- (void)_hideMaskedContentDelayed;
- (bool)_ignoreTrackingUpdates;
- (id)_image;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_initialHandlePanCropRect;
- (id)_initialLocationsInHandlesByHandle;
- (void)_installRenderedImageAndDisplayIfNeeded;
- (void)_invalidateConstraintsForKey:(id)arg1;
- (bool)_isActiveTool;
- (bool)_isModelChangeLocal;
- (bool)_isTrackingTitlControl;
- (id)_lastKnownEditModel;
- (void)_loadCropSuggestionIfNeeded;
- (void)_loadImageIfNeeded;
- (void)_loadStateFromModel;
- (bool)_needsImageLoad;
- (bool)_needsModelLoad;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_normalizeImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_normalizedImageRect;
- (void)_performLocalModelChanges:(id)arg1;
- (struct CGPoint { double x1; double x2; })_pointForHandle:(unsigned long long)arg1 onCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (struct CGPoint { double x1; double x2; })_pointForHandle:(unsigned long long)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_previewViewInsets;
- (void)_recomposeCropRectAnimated:(bool)arg1;
- (void)_recomposeCropRectDelayed;
- (id)_renderer;
- (void)_resetAllValuesAnimated:(bool)arg1;
- (id)_rotateButton;
- (void)_rotateButtonTapped:(id)arg1;
- (double)_rotateSnapshotStartAngle;
- (id)_rotateSnapshotView;
- (unsigned long long)_rotatingAnimationCount;
- (unsigned long long)_rotation;
- (unsigned long long)_rotationAfterRotation:(unsigned long long)arg1;
- (id)_selectedCropHandleView;
- (void)_setActiveTool:(bool)arg1;
- (void)_setAnimation:(id)arg1 forKeyPath:(id)arg2;
- (void)_setAnimationTarget:(id)arg1 forKeyPath:(id)arg2;
- (void)_setAnimationTargetsByKeyPath:(id)arg1;
- (void)_setAnimationsByKeyPath:(id)arg1;
- (void)_setAspectButton:(id)arg1;
- (void)_setCIImage:(id)arg1;
- (void)_setContentViewsHidden:(bool)arg1 animated:(bool)arg2 completion:(id)arg3;
- (void)_setContentViewsHidden:(bool)arg1 animated:(bool)arg2;
- (void)_setContentViewsHidden:(bool)arg1;
- (void)_setContentViewsHiddenAnimationCount:(unsigned long long)arg1;
- (void)_setCropAspect:(id)arg1 animated:(bool)arg2;
- (void)_setCropAspect:(id)arg1;
- (void)_setCropCanvasView:(id)arg1;
- (void)_setCropHandleViewsByHandle:(id)arg1;
- (void)_setCropOverlayView:(id)arg1;
- (void)_setCropToggleButton:(id)arg1;
- (void)_setCropToggleButtonTitle:(id)arg1;
- (void)_setCropView:(id)arg1;
- (void)_setCropViewFrameForLastModelLoad:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setHasAppliedCropSuggestion:(bool)arg1;
- (void)_setHasAutoAppliedCropSuggestion:(bool)arg1;
- (void)_setHasRequestedCropSuggestion:(bool)arg1;
- (void)_setIgnoreTrackingUpdates:(bool)arg1;
- (void)_setImage:(id)arg1;
- (void)_setInitialHandlePanCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setInitialLocationsInHandlesByHandle:(id)arg1;
- (void)_setLastKnownEditModel:(id)arg1;
- (void)_setModelChangeLocal:(bool)arg1;
- (void)_setNeedsImageLoad:(bool)arg1;
- (void)_setNeedsModelLoad:(bool)arg1;
- (void)_setNormalizedImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setPreviewViewInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)_setRenderer:(id)arg1;
- (void)_setRotateButton:(id)arg1;
- (void)_setRotateSnapshotStartAngle:(double)arg1;
- (void)_setRotateSnapshotView:(id)arg1;
- (void)_setRotatingAnimationCount:(unsigned long long)arg1;
- (void)_setRotation:(unsigned long long)arg1 animated:(bool)arg2;
- (void)_setRotation:(unsigned long long)arg1;
- (void)_setSelectedCropHandleView:(id)arg1;
- (void)_setStraightenAngle:(double)arg1 animated:(bool)arg2;
- (void)_setStraightenAngle:(double)arg1;
- (void)_setSuggestedCrop:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setSuggestedStraightenAngle:(double)arg1;
- (void)_setTiltControl:(id)arg1;
- (void)_setTrackingTiltControl:(bool)arg1;
- (void)_setViewCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 normalizedImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 animated:(bool)arg3;
- (void)_setViewCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 normalizedImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_setViewCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setWantsPreviewViewHidden:(bool)arg1;
- (void)_showGridAndCancelDelayedHide;
- (void)_showMaskedContentAndCancelDelayedHide;
- (double)_straightenAngle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_suggestedCrop;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_suggestedCropRectForImageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)_suggestedStraightenAngle;
- (id)_tiltControl;
- (void)_tiltControlChanged:(id)arg1;
- (int)_tiltControlOrientationForLayoutOrientation:(long long)arg1;
- (void)_toggleCrop;
- (void)_updateCropActionButtonConstraintsIfNeeded;
- (void)_updateCropActionButtons;
- (void)_updateCropCanvasConstraintsIfNeeded;
- (void)_updateCropToggleButton;
- (void)_updateCropToggleConstraintsIfNeeded;
- (void)_updateCropViewsForInteraction;
- (void)_updatePreviewViewInsets;
- (void)_updateTiltControlColor;
- (void)_updateTiltWheelConstraintsIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_viewCropRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_viewCropToMatchPreview;
- (bool)_wantsPreviewViewHidden;
- (void)animateBecomingActiveTool;
- (void)animateResigningActiveTool;
- (bool)canResetToDefaultValue;
- (void)cropAndStraightenViewDidEndTracking:(id)arg1;
- (void)cropAndStraightenViewDidTrack:(id)arg1;
- (void)cropAndStraightenViewWillBeginTracking:(id)arg1;
- (void)didBecomeActiveTool;
- (void)didResignActiveTool;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)localizedName;
- (id)localizedResetToolActionTitle;
- (void)photoEditModelDidChange;
- (void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 inView:(inout id*)arg3;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })preferredPreviewViewInsets;
- (void)resetToDefaultValueAnimated:(bool)arg1;
- (id)selectedToolbarIcon;
- (void)setLayoutOrientation:(long long)arg1 withTransitionCoordinator:(id)arg2;
- (id)toolbarIcon;
- (void)updateViewConstraints;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (bool)wantsDefaultPreviewView;
- (void)willBecomeActiveTool;
- (void)willResignActiveTool;

@end
