/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@class <NSObject>, MPAVController, NSDictionary, NSString, RadioStation;

@interface MPQueueFeeder : NSObject <MPAVPlaylistFeeder> {
    unsigned long long _activeShuffleType;
    MPAVController *_avController;
    struct __CFSet { } *_itemsWithReferencesToClear;
    struct __CFDictionary { } *_nextStartTimes;
    unsigned long long _repeatType;
    id _representedObject;
    unsigned long long _shuffleType;
    bool_deallocating;
    bool_fullScreenPlaybackQueue;
    bool_isSourceChangeInProgress;
    bool_wantsAirPlayVideo;
}

@property MPAVController * AVController;
@property unsigned long long activeShuffleType;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property bool fullScreenPlaybackQueue;
@property(readonly) unsigned long long hash;
@property bool isSourceChangeInProgress;
@property(readonly) Class itemClass;
@property(readonly) unsigned long long itemCount;
@property(readonly) int playbackMode;
@property(readonly) bool playerPreparesItemsForPlaybackAsynchronously;
@property(readonly) NSDictionary * preferredLanguages;
@property(readonly) unsigned long long realRepeatType;
@property(readonly) unsigned long long realShuffleType;
@property unsigned long long repeatType;
@property(retain) <NSObject> * representedObject;
@property unsigned long long shuffleType;
@property(readonly) RadioStation * station;
@property(readonly) Class superclass;
@property(readonly) bool trackChangesCanEndPlayback;
@property(readonly) bool userCanChangeShuffleAndRepeatType;
@property(readonly) bool wantsAirPlayVideo;

+ (void)restoreAVControllerPlaybackQueue:(id)arg1 fromUnarchiver:(id)arg2 feederClass:(Class)arg3;

- (void).cxx_destruct;
- (id)AVController;
- (bool)_canPurgeNextStartTimes;
- (void)_fixNextStartTimesByInsertingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_fixNextStartTimesByRemovingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (unsigned long long)activeShuffleType;
- (void)addReferenceToItem:(id)arg1;
- (void)archiveAVControllerPlaybackQueue:(id)arg1 toArchiver:(id)arg2;
- (void)assumeOwnershipOfItems:(id)arg1;
- (void)beginSourceChange;
- (bool)canSeek;
- (bool)canSkipItem:(id)arg1;
- (bool)canSkipToPreviousItem;
- (void)clearReferencesToItem:(id)arg1;
- (void)commitSourceChangeWithStartQueueIndex:(unsigned long long)arg1;
- (void)contentInvalidated;
- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned long long)arg1;
- (void)contentsDidChangeByRemovingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)controller:(id)arg1 willChangePlaybackIndexBy:(long long)arg2 deltaType:(int)arg3 ignoreElapsedTime:(bool)arg4 allowSkippingUnskippableContent:(bool)arg5;
- (id)copyRawItemAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)errorResolverForItem:(id)arg1;
- (bool)fullScreenPlaybackQueue;
- (bool)hasItemForIndex:(unsigned long long)arg1;
- (bool)hasValidItemAtIndex:(unsigned long long)arg1;
- (unsigned long long)initialPlaybackQueueDepthForStartingIndex:(unsigned long long)arg1;
- (void)invalidateQueueCaches;
- (bool)isRadioQueueFeeder;
- (bool)isSourceChangeInProgress;
- (Class)itemClass;
- (unsigned long long)itemCount;
- (id)itemForIndex:(unsigned long long)arg1;
- (unsigned long long)itemTypeForIndex:(unsigned long long)arg1;
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3;
- (id)localizedPositionInPlaylistString:(id)arg1;
- (id)pathAtIndex:(unsigned long long)arg1;
- (id)playbackInfoAtIndex:(unsigned long long)arg1;
- (int)playbackMode;
- (bool)playerPreparesItemsForPlaybackAsynchronously;
- (id)preferredLanguages;
- (unsigned long long)realRepeatType;
- (unsigned long long)realShuffleType;
- (bool)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(bool)arg2;
- (bool)reloadWithDataSource:(id)arg1;
- (unsigned long long)repeatType;
- (id)representedObject;
- (void)restoreAVControllerPlaybackQueue:(id)arg1 fromUnarchiver:(id)arg2;
- (void)setAVController:(id)arg1;
- (void)setActiveShuffleType:(unsigned long long)arg1;
- (void)setFullScreenPlaybackQueue:(bool)arg1;
- (void)setIsSourceChangeInProgress:(bool)arg1;
- (void)setNextStartTime:(double)arg1 forIndex:(unsigned long long)arg2;
- (void)setRepeatType:(unsigned long long)arg1;
- (void)setRepresentedObject:(id)arg1;
- (void)setShuffleType:(unsigned long long)arg1;
- (bool)shouldBeginPlaybackOfItem:(id)arg1 error:(id*)arg2;
- (bool)shouldReloadForChangeFromNetworkType:(long long)arg1 toNetworkType:(long long)arg2;
- (void)shuffleItemsWithAnchor:(unsigned long long*)arg1;
- (unsigned long long)shuffleType;
- (struct { long long x1; long long x2; double x3; })skipLimit;
- (id)station;
- (bool)trackChangesCanEndPlayback;
- (bool)userCanChangeShuffleAndRepeatType;
- (bool)wantsAirPlayVideo;

@end
