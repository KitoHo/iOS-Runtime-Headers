/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@class NSMutableArray, UIImage;

@interface MKStarRatingView : UIView {
    UIImage *_emptyStarHighlightedImage;
    UIImage *_emptyStarImage;
    UIImage *_fullStarHighlightedImage;
    UIImage *_fullStarImage;
    UIImage *_halfStarHighlightedImage;
    UIImage *_halfStarImage;
    long long _numLevels;
    long long _numReviews;
    double _padding;
    double _rating;
    NSMutableArray *_ratingViews;
    bool_highlighted;
}

@property(retain) UIImage * emptyStarHighlightedImage;
@property(retain) UIImage * emptyStarImage;
@property(retain) UIImage * fullStarHighlightedImage;
@property(retain) UIImage * fullStarImage;
@property(retain) UIImage * halfStarHighlightedImage;
@property(retain) UIImage * halfStarImage;
@property(getter=isHighlighted) bool highlighted;
@property long long numberOfRatingLevels;
@property double rating;

- (void).cxx_destruct;
- (void)_layoutStarViewsCreatingIfNeeded:(bool)arg1;
- (void)_setStarStyle:(long long)arg1;
- (void)commonInit;
- (void)didMoveToWindow;
- (id)emptyStarHighlightedImage;
- (id)emptyStarImage;
- (id)fullStarHighlightedImage;
- (id)fullStarImage;
- (id)halfStarHighlightedImage;
- (id)halfStarImage;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithStyle:(long long)arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isHighlighted;
- (void)layoutSubviews;
- (long long)numberOfRatingLevels;
- (double)rating;
- (void)setEmptyStarHighlightedImage:(id)arg1;
- (void)setEmptyStarImage:(id)arg1;
- (void)setFullStarHighlightedImage:(id)arg1;
- (void)setFullStarImage:(id)arg1;
- (void)setHalfStarHighlightedImage:(id)arg1;
- (void)setHalfStarImage:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setNumberOfRatingLevels:(long long)arg1;
- (void)setPadding:(double)arg1;
- (void)setRating:(double)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;

@end
