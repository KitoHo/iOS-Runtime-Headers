/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSString, UIColor, UIImage;

@interface UITextInputTraits : NSObject <UITextInputTraits, UITextInputTraits_Private, NSCopying> {
    unsigned int keyboardType : 8;
    unsigned int keyboardAppearance : 8;
    long long autocapitalizationType;
    NSString *autocorrectionContext;
    long long autocorrectionType;
    boolacceptsEmoji;
    boolacceptsFloatingKeyboard;
    boolacceptsSplitKeyboard;
    boolcontentsIsSingleValue;
    booldeferBecomingResponder;
    booldisablePrediction;
    booldisplaySecureTextUsingPlainText;
    boolenablesReturnKeyAutomatically;
    boolenablesReturnKeyOnNonWhiteSpaceContent;
    boolforceEnableDictation;
    boolisSingleLineDocument;
    boollearnsCorrections;
    boolreturnKeyGoesToNextResponder;
    boolsecureTextEntry;
    boolsuppressReturnKeyStyling;
    booluseInterfaceLanguageForLocalization;
    int emptyContentReturnKeyType;
    UIColor *insertionPointColor;
    unsigned long long insertionPointWidth;
    NSString *responseContext;
    long long returnKeyType;
    UIColor *selectionBarColor;
    UIImage *selectionDragDotImage;
    UIColor *selectionHighlightColor;
    int shortcutConversionType;
    long long spellCheckingType;
    int textLoupeVisibility;
    int textSelectionBehavior;
    id textSuggestionDelegate;
    struct __CFCharacterSet { } *textTrimmingSet;
}

@property bool acceptsEmoji;
@property bool acceptsFloatingKeyboard;
@property bool acceptsSplitKeyboard;
@property long long autocapitalizationType;
@property(copy) NSString * autocorrectionContext;
@property long long autocorrectionType;
@property bool contentsIsSingleValue;
@property(copy,readonly) NSString * debugDescription;
@property bool deferBecomingResponder;
@property(copy,readonly) NSString * description;
@property bool disablePrediction;
@property bool displaySecureTextUsingPlainText;
@property int emptyContentReturnKeyType;
@property bool enablesReturnKeyAutomatically;
@property bool enablesReturnKeyOnNonWhiteSpaceContent;
@property bool forceEnableDictation;
@property(readonly) unsigned long long hash;
@property(retain) UIColor * insertionPointColor;
@property unsigned long long insertionPointWidth;
@property bool isSingleLineDocument;
@property long long keyboardAppearance;
@property long long keyboardType;
@property bool learnsCorrections;
@property(copy) NSString * responseContext;
@property bool returnKeyGoesToNextResponder;
@property long long returnKeyType;
@property(getter=isSecureTextEntry) bool secureTextEntry;
@property(retain) UIColor * selectionBarColor;
@property(retain) UIImage * selectionDragDotImage;
@property(retain) UIColor * selectionHighlightColor;
@property int shortcutConversionType;
@property long long spellCheckingType;
@property(readonly) Class superclass;
@property bool suppressReturnKeyStyling;
@property int textLoupeVisibility;
@property int textSelectionBehavior;
@property id textSuggestionDelegate;
@property struct __CFCharacterSet { }* textTrimmingSet;
@property bool useInterfaceLanguageForLocalization;

+ (long long)accessibleAppearanceForAppearance:(long long)arg1;
+ (id)defaultTextInputTraits;
+ (bool)keyboardTypeRequiresASCIICapable:(long long)arg1;
+ (id)traitsByAdoptingTraits:(id)arg1;

- (void)_setColorsToMatchTintColor:(id)arg1;
- (bool)acceptsEmoji;
- (bool)acceptsFloatingKeyboard;
- (bool)acceptsSplitKeyboard;
- (long long)autocapitalizationType;
- (id)autocorrectionContext;
- (long long)autocorrectionType;
- (bool)contentsIsSingleValue;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (bool)deferBecomingResponder;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)disablePrediction;
- (bool)displaySecureTextUsingPlainText;
- (int)emptyContentReturnKeyType;
- (bool)enablesReturnKeyAutomatically;
- (bool)enablesReturnKeyOnNonWhiteSpaceContent;
- (bool)forceEnableDictation;
- (id)init;
- (id)insertionPointColor;
- (unsigned long long)insertionPointWidth;
- (bool)isEqual:(id)arg1;
- (bool)isSecureTextEntry;
- (bool)isSingleLineDocument;
- (long long)keyboardAppearance;
- (long long)keyboardType;
- (bool)learnsCorrections;
- (bool)publicTraitsMatchTraits:(id)arg1;
- (id)responseContext;
- (bool)returnKeyGoesToNextResponder;
- (long long)returnKeyType;
- (id)selectionBarColor;
- (id)selectionDragDotImage;
- (id)selectionHighlightColor;
- (void)setAcceptsEmoji:(bool)arg1;
- (void)setAcceptsFloatingKeyboard:(bool)arg1;
- (void)setAcceptsSplitKeyboard:(bool)arg1;
- (void)setAutocapitalizationType:(long long)arg1;
- (void)setAutocorrectionContext:(id)arg1;
- (void)setAutocorrectionType:(long long)arg1;
- (void)setContentsIsSingleValue:(bool)arg1;
- (void)setDeferBecomingResponder:(bool)arg1;
- (void)setDisablePrediction:(bool)arg1;
- (void)setDisplaySecureTextUsingPlainText:(bool)arg1;
- (void)setEmptyContentReturnKeyType:(int)arg1;
- (void)setEnablesReturnKeyAutomatically:(bool)arg1;
- (void)setEnablesReturnKeyOnNonWhiteSpaceContent:(bool)arg1;
- (void)setForceEnableDictation:(bool)arg1;
- (void)setInsertionPointColor:(id)arg1;
- (void)setInsertionPointWidth:(unsigned long long)arg1;
- (void)setIsSingleLineDocument:(bool)arg1;
- (void)setKeyboardAppearance:(long long)arg1;
- (void)setKeyboardType:(long long)arg1;
- (void)setLearnsCorrections:(bool)arg1;
- (void)setResponseContext:(id)arg1;
- (void)setReturnKeyGoesToNextResponder:(bool)arg1;
- (void)setReturnKeyType:(long long)arg1;
- (void)setSecureTextEntry:(bool)arg1;
- (void)setSelectionBarColor:(id)arg1;
- (void)setSelectionDragDotImage:(id)arg1;
- (void)setSelectionHighlightColor:(id)arg1;
- (void)setShortcutConversionType:(int)arg1;
- (void)setSpellCheckingType:(long long)arg1;
- (void)setSuppressReturnKeyStyling:(bool)arg1;
- (void)setTextLoupeVisibility:(int)arg1;
- (void)setTextSelectionBehavior:(int)arg1;
- (void)setTextSuggestionDelegate:(id)arg1;
- (void)setTextTrimmingSet:(struct __CFCharacterSet { }*)arg1;
- (void)setToDefaultValues;
- (void)setToSecureValues;
- (void)setUseInterfaceLanguageForLocalization:(bool)arg1;
- (int)shortcutConversionType;
- (long long)spellCheckingType;
- (bool)suppressReturnKeyStyling;
- (void)takeTraitsFrom:(id)arg1;
- (int)textLoupeVisibility;
- (int)textSelectionBehavior;
- (id)textSuggestionDelegate;
- (struct __CFCharacterSet { }*)textTrimmingSet;
- (bool)useInterfaceLanguageForLocalization;

@end
