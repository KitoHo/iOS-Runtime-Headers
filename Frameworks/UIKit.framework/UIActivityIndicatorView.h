/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSArray, NSString, UIColor, UIImageView;

@interface UIActivityIndicatorView : UIView <NSCoding> {
    struct CGSize { 
        double width; 
        double height; 
    long long _activityIndicatorViewStyle;
    long long _actualActivityIndicatorViewStyle;
    NSString *_artBackupKeyString;
    UIColor *_color;
    double _duration;
    double _innerRadius;
    UIImageView *_internalView;
    UIColor *_shadowColor;
    } _shadowOffset;
    double _spinningDuration;
    long long _spokeCount;
    long long _spokeFrameRatio;
    NSArray *_spokeImages;
    double _width;
    bool_animating;
    bool_clockWise;
    bool_hasShadow;
    bool_hidesWhenStopped;
    bool_spinning;
    bool_useArtwork;
    bool_useOutlineShadow;
}

@property long long activityIndicatorViewStyle;
@property(readonly) NSString * artBackupKeyString;
@property bool clockWise;
@property(retain) UIColor * color;
@property bool hasShadow;
@property bool hidesWhenStopped;
@property double innerRadius;
@property(readonly) UIImageView * internalView;
@property(retain) UIColor * shadowColor;
@property struct CGSize { double x1; double x2; } shadowOffset;
@property bool spinning;
@property double spinningDuration;
@property long long spokeCount;
@property long long spokeFrameRatio;
@property(readonly) NSArray * spokeImages;
@property bool useArtwork;
@property bool useOutlineShadow;
@property double width;

+ (bool)_isModernStyle:(long long)arg1;
+ (id)_loadResourcesForStyle:(long long)arg1;
+ (struct CGSize { double x1; double x2; })defaultSizeForStyle:(long long)arg1;
+ (struct CGSize { double x1; double x2; })size;

- (double)_alphaValueForStep:(long long)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (id)_artBackupKey;
- (bool)_canCustomize;
- (bool)_canCustomizeStyle:(long long)arg1;
- (void)_commonInit;
- (bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (long long)_customStyleForStyle:(long long)arg1;
- (id)_defaulColorForStyle:(long long)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_feedTheGear;
- (id)_generateImages;
- (id)_generateModernImagesForImages:(id)arg1;
- (bool)_hasCustomColor;
- (id)_imageForStep:(long long)arg1;
- (struct CGSize { double x1; double x2; })_intrinsicSizeWithinSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)_isArtWorkBased;
- (bool)_isModern;
- (id)_layoutInfosForStyle:(long long)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_removeAllAnimations:(bool)arg1;
- (void)_setUpAnimation;
- (bool)_shouldGoBackToBaseStyle;
- (bool)_shouldGoToCustomStyle;
- (double)_spokeLengthForGearWidth:(double)arg1;
- (double)_spokeWidthForGearWidth:(double)arg1;
- (id)_styleNameForStyle:(long long)arg1;
- (void)_tearDownAnimation;
- (void)_updateInternalViewFrameWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)_widthForGearWidth:(double)arg1;
- (long long)activityIndicatorViewStyle;
- (id)artBackupKey;
- (id)artBackupKeyString;
- (bool)clockWise;
- (id)color;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)generateImages;
- (bool)hasShadow;
- (bool)hidesWhenStopped;
- (id)initWithActivityIndicatorStyle:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)innerRadius;
- (id)internalView;
- (bool)isAnimating;
- (bool)isElementAccessibilityExposedToInterfaceBuilder;
- (bool)isHighlighted;
- (void)setActivityIndicatorViewStyle:(long long)arg1;
- (void)setAnimating:(bool)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setClockWise:(bool)arg1;
- (void)setColor:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHasShadow:(bool)arg1;
- (void)setHidesWhenStopped:(bool)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setInnerRadius:(double)arg1;
- (void)setShadowColor:(id)arg1;
- (void)setShadowOffset:(struct CGSize { double x1; double x2; })arg1;
- (void)setSpinning:(bool)arg1;
- (void)setSpinningDuration:(double)arg1;
- (void)setSpokeCount:(long long)arg1;
- (void)setSpokeFrameRatio:(long long)arg1;
- (void)setStyle:(long long)arg1;
- (void)setUseArtwork:(bool)arg1;
- (void)setUseOutlineShadow:(bool)arg1;
- (void)setWidth:(double)arg1;
- (id)shadowColor;
- (struct CGSize { double x1; double x2; })shadowOffset;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (bool)spinning;
- (double)spinningDuration;
- (long long)spokeCount;
- (long long)spokeFrameRatio;
- (id)spokeImages;
- (void)startAnimating;
- (void)startAnimation;
- (void)stopAnimating;
- (void)stopAnimation;
- (bool)useArtwork;
- (bool)useOutlineShadow;
- (double)width;

@end
