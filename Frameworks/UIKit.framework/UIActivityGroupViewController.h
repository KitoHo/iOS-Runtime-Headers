/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class <UIActivityGroupViewControllerDelegate>, NSArray, NSDictionary, NSIndexPath, NSString, UILongPressGestureRecognizer, _UIActivityUserDefaults, _UIUserDefaultsActivity;

@interface UIActivityGroupViewController : UICollectionViewController <_UIActivityGroupViewDelegateFlowLayout, UIGestureRecognizerDelegate> {
    struct CGPoint { 
        double x; 
        double y; 
    NSArray *_activities;
    long long _activityCategory;
    NSDictionary *_customActivityTitles;
    <UIActivityGroupViewControllerDelegate> *_delegate;
    UILongPressGestureRecognizer *_editingGestureRecognizer;
    NSIndexPath *_indexPathForMenuActivity;
    } _initialDraggingLocation;
    _UIActivityUserDefaults *_userDefaults;
    _UIUserDefaultsActivity *_userDefaultsActivity;
    NSArray *_visibleActivities;
    bool_activityIndexDidChangeWhileDragging;
    bool_allowsUserCustomization;
    bool_darkStyleOnLegacyApp;
    bool_embedded;
    bool_hasActivities;
    bool_picker;
}

@property(copy) NSArray * activities;
@property long long activityCategory;
@property bool activityIndexDidChangeWhileDragging;
@property bool allowsUserCustomization;
@property(copy) NSDictionary * customActivityTitles;
@property bool darkStyleOnLegacyApp;
@property(copy,readonly) NSString * debugDescription;
@property <UIActivityGroupViewControllerDelegate> * delegate;
@property(copy,readonly) NSString * description;
@property(retain) UILongPressGestureRecognizer * editingGestureRecognizer;
@property(getter=isEmbedded) bool embedded;
@property bool hasActivities;
@property(readonly) unsigned long long hash;
@property(copy) NSIndexPath * indexPathForMenuActivity;
@property struct CGPoint { double x1; double x2; } initialDraggingLocation;
@property(getter=isPicker) bool picker;
@property(readonly) Class superclass;
@property(retain) _UIActivityUserDefaults * userDefaults;
@property(retain) _UIUserDefaultsActivity * userDefaultsActivity;
@property(copy) NSArray * visibleActivities;

- (struct CGSize { double x1; double x2; })_preferredCellSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_preferredSectionInset;
- (void)_setActivities:(id)arg1 animated:(bool)arg2;
- (void)_setVisibleActivities:(id)arg1 animated:(bool)arg2;
- (void)_updateVisibleActivitiesAnimated:(bool)arg1;
- (id)activities;
- (long long)activityCategory;
- (id)activityForItemAtIndexPath:(id)arg1;
- (id)activityGroupViewLayout;
- (bool)activityIndexDidChangeWhileDragging;
- (void)activityUserDefaultsDidChange:(id)arg1;
- (bool)allowsUserCustomization;
- (bool)canBecomeFirstResponder;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (id)collectionView:(id)arg1 layout:(id)arg2 moveItemAtIndexPath:(id)arg3 toIndexPath:(id)arg4;
- (id)collectionView:(id)arg1 layout:(id)arg2 needsContainerViewForDraggingItemAtIndexPath:(id)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)customActivityTitles;
- (bool)darkStyleOnLegacyApp;
- (void)dealloc;
- (id)delegate;
- (id)editingGestureRecognizer;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleEditingGesture:(id)arg1;
- (bool)hasActivities;
- (void)hideActivity:(id)arg1;
- (void)hideItemAtIndexPath:(id)arg1;
- (void)ignoreUserDefaultsChangesWhileUsingBlock:(id)arg1;
- (id)indexPathForMenuActivity;
- (id)initWithActivityCategory:(long long)arg1 userDefaults:(id)arg2 userDefaultsIdentifier:(id)arg3;
- (id)initWithActivityCategory:(long long)arg1 userDefaults:(id)arg2;
- (struct CGPoint { double x1; double x2; })initialDraggingLocation;
- (bool)isEmbedded;
- (bool)isPicker;
- (void)registerForActivityUserDefaultsChanges;
- (void)reloadItemForActivityOfTypeIfNeeded:(id)arg1;
- (void)renameActivity:(id)arg1;
- (void)setActivities:(id)arg1 animated:(bool)arg2;
- (void)setActivities:(id)arg1;
- (void)setActivityCategory:(long long)arg1;
- (void)setActivityIndexDidChangeWhileDragging:(bool)arg1;
- (void)setAllowsUserCustomization:(bool)arg1;
- (void)setCustomActivityTitles:(id)arg1;
- (void)setDarkStyleOnLegacyApp:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setEditingGestureRecognizer:(id)arg1;
- (void)setEmbedded:(bool)arg1;
- (void)setHasActivities:(bool)arg1;
- (void)setIndexPathForMenuActivity:(id)arg1;
- (void)setInitialDraggingLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPicker:(bool)arg1;
- (void)setUserDefaults:(id)arg1;
- (void)setUserDefaultsActivity:(id)arg1;
- (void)setVisibleActivities:(id)arg1;
- (id)targetIndexPathForMoveFromRowAtIndexPath:(id)arg1 toProposedIndexPath:(id)arg2;
- (void)unregisterForActivityUserDefaultsChanges;
- (id)userDefaults;
- (id)userDefaultsActivity;
- (void)viewDidLoad;
- (id)visibleActivities;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;

@end
