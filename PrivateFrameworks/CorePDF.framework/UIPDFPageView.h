/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

@class <NSObject><UIPDFPageViewDelegate>, CALayer, NSMutableArray, UIActivityIndicatorView, UIColor, UIImage, UIPDFAnnotationController, UIPDFDocument, UIPDFPage, UIPDFPageContentDelegate, UIPDFSearchHighlightsController, UIPDFSelectionController, UIPDFViewTouchHandler;

@interface UIPDFPageView : UIView {
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    UIActivityIndicatorView *_activityIndicator;
    UIPDFAnnotationController *_annotationController;
    UIImage *_backgroundImage;
    unsigned long long _backgroundScheduleCount;
    CALayer *_backingLayer;
    UIColor *_backingLayerColor;
    double _cachedScale;
    UIPDFPageContentDelegate *_contentDelegate;
    CALayer *_contentLayer;
    } _cropBox;
    <NSObject><UIPDFPageViewDelegate> *_delegate;
    UIPDFDocument *_document;
    CALayer *_effectsLayer;
    struct CGColor { } *_highLightColor;
    NSMutableArray *_highlights;
    int _lock;
    double _margin;
    UIPDFPage *_page;
    unsigned long long _pageIndex;
    } _pageToViewTransform;
    UIPDFSearchHighlightsController *_searchHighlightController;
    NSMutableArray *_searchHiglightLayers;
    UIPDFSelectionController *_selectionController;
    UIPDFViewTouchHandler *_touchHandler;
    } _viewToPageTransform;
    bool_allowHighlighting;
    bool_allowSelection;
    bool_allowTwoFingerSelection;
    bool_animateSetFrame;
    bool_backgroundIsFullResolution;
    bool_backgroundIsScheduled;
    bool_boundsChanged;
    bool_scalePageOnDraw;
    bool_showActivityIndicator;
    bool_showLinkAnnotationUnderline;
    bool_showTextAnnotations;
    bool_useBackingLayer;
    bool_useTiledContent;
    boolshowAnnotations;
    } zoomRect;
}

@property bool allowHighlighting;
@property bool allowMenu;
@property bool allowSelection;
@property bool allowTwoFingerSelection;
@property bool animateSetFrame;
@property(readonly) UIPDFAnnotationController * annotationController;
@property(retain) UIImage * backgroundImage;
@property(retain) UIColor * backingLayerColor;
@property(readonly) CALayer * contentLayer;
@property <NSObject><UIPDFPageViewDelegate> * delegate;
@property(retain,readonly) UIPDFDocument * document;
@property(readonly) CALayer * effectsLayer;
@property(readonly) struct CGColor { }* highLightColor;
@property double margin;
@property UIPDFPage * page;
@property(readonly) unsigned long long pageIndex;
@property UIPDFSelectionController * selectionController;
@property bool showActivityIndicator;
@property bool showAnnotations;
@property bool showLinkAnnotationUnderline;
@property bool showTextAnnotations;
@property bool useBackingLayer;

- (struct CGPDFDictionary { }*)_annotForPoint:(struct CGPoint { double x1; double x2; })arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (void)addLayers:(bool)arg1;
- (void)addPage:(id)arg1;
- (void)addWidgetToSelection;
- (bool)allowHighlighting;
- (bool)allowMenu;
- (bool)allowSelection;
- (bool)allowTwoFingerSelection;
- (bool)animateSetFrame;
- (id)annotationController;
- (id)backgroundImage;
- (id)backingLayerColor;
- (void)clearSearchHighlights;
- (void)clearSelection;
- (id)contentLayer;
- (struct CGPoint { double x1; double x2; })convertPointFromPDFPageSpace:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPointToPDFPageSpace:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectFromPDFPageSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToPDFPageSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (id)delegate;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)didScroll:(id)arg1;
- (void)displayContent;
- (id)document;
- (void)doubleTapAt:(struct CGPoint { double x1; double x2; })arg1;
- (void)drawAnnotations:(struct CGContext { }*)arg1;
- (id)effectsLayer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })fitRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })fitWidth:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 atVertical:(double)arg2;
- (bool)hasSearchHighlights;
- (void)hideSelection;
- (struct CGColor { }*)highLightColor;
- (void)highlightSearchSelection:(id)arg1 animated:(bool)arg2;
- (void)ignoreTouches:(bool)arg1;
- (id)init;
- (id)initWithPage:(id)arg1 tiledContent:(bool)arg2;
- (id)initWithPage:(id)arg1;
- (void)layoutSubviews;
- (void)layoutTextEffects;
- (double)margin;
- (id)page;
- (unsigned long long)pageIndex;
- (id)receiveBackgroundImage:(id)arg1 info:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectangleOfInterestAt:(struct CGPoint { double x1; double x2; })arg1 kind:(int*)arg2;
- (void)removeBackingLayer;
- (void)scheduleBackgroundImage;
- (id)searchHighlightSelectionAt:(struct CGPoint { double x1; double x2; })arg1;
- (id)selectionController;
- (void)setAllowHighlighting:(bool)arg1;
- (void)setAllowMenu:(bool)arg1;
- (void)setAllowSelection:(bool)arg1;
- (void)setAllowTwoFingerSelection:(bool)arg1;
- (void)setAnimateSetFrame:(bool)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setBackingLayerColor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDrawingSurfaceLayer:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setMargin:(double)arg1;
- (void)setNeedsDisplay;
- (void)setPage:(id)arg1;
- (void)setSelectionController:(id)arg1;
- (void)setSelectionNeedsDisplay;
- (void)setShowActivityIndicator:(bool)arg1;
- (void)setShowAnnotations:(bool)arg1;
- (void)setShowLinkAnnotationUnderline:(bool)arg1;
- (void)setShowTextAnnotations:(bool)arg1;
- (void)setTransforms;
- (void)setUseBackingLayer:(bool)arg1;
- (bool)showActivityIndicator;
- (bool)showAnnotations;
- (void)showContent;
- (bool)showLinkAnnotationUnderline;
- (void)showSelection;
- (bool)showTextAnnotations;
- (void)singleTapAt:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)stopActivityIndicator;
- (void)suspendInstantTouchHighlighting;
- (void)twoFingerDoubleTapAt:(struct CGPoint { double x1; double x2; })arg1;
- (bool)useBackingLayer;
- (bool)willDoSomethingWithTap:(struct CGPoint { double x1; double x2; })arg1;
- (void)willMoveToSuperview:(id)arg1;

@end
