/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MusicUI.framework/MusicUI
 */

@class MPUEmphasizedText, MusicMediaOfferButtonState, NSString, UIImage;

@interface MusicMediaTableViewCell : MusicTableViewCell {
    MusicMediaOfferButtonState *_offerButtonState;
}

@property(retain) UIImage * artworkImage;
@property struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentBoundsEdgeInsets;
@property(copy) MPUEmphasizedText * detailEmphasizedText;
@property(copy) NSString * detailText;
@property(getter=isDisplayingAsDisabled) bool displayAsDisabled;
@property(getter=isExplicitTrack) bool explicitTrack;
@property(copy) id offerButtonActionHandler;
@property(retain) MusicMediaOfferButtonState * offerButtonState;
@property(copy) NSString * placeholderSubtitleText;
@property(copy) NSString * placeholderTitleText;
@property long long playbackState;
@property(retain) UIImage * rightAccessoryHighlightedImage;
@property(retain) UIImage * rightAccessoryImage;
@property bool showsArtworkImage;
@property(copy) MPUEmphasizedText * subtitleEmphasizedText;
@property(copy) NSString * subtitleText;
@property(copy) MPUEmphasizedText * titleEmphasizedText;
@property(copy) NSString * titleText;

+ (struct CGSize { double x1; double x2; })artworkSize;
+ (Class)contentViewClass;

- (void).cxx_destruct;
- (id)_mediaCellContentView;
- (id)artworkImage;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentBoundsEdgeInsets;
- (id)detailEmphasizedText;
- (id)detailText;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (bool)isDisplayingAsDisabled;
- (bool)isEditing;
- (bool)isExplicitTrack;
- (id)offerButtonActionHandler;
- (id)offerButtonState;
- (id)placeholderSubtitleText;
- (id)placeholderTitleText;
- (long long)playbackState;
- (id)rightAccessoryHighlightedImage;
- (id)rightAccessoryImage;
- (void)setArtworkImage:(id)arg1 animated:(bool)arg2;
- (void)setArtworkImage:(id)arg1;
- (void)setContentBoundsEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDetailEmphasizedText:(id)arg1;
- (void)setDetailText:(id)arg1;
- (void)setDisplayAsDisabled:(bool)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setExplicitTrack:(bool)arg1;
- (void)setHighlighted:(bool)arg1 animated:(bool)arg2;
- (void)setOfferButtonActionHandler:(id)arg1;
- (void)setOfferButtonState:(id)arg1 animated:(bool)arg2;
- (void)setOfferButtonState:(id)arg1;
- (void)setPlaceholderSubtitleText:(id)arg1;
- (void)setPlaceholderTitleText:(id)arg1;
- (void)setPlaybackState:(long long)arg1;
- (void)setRightAccessoryHighlightedImage:(id)arg1;
- (void)setRightAccessoryImage:(id)arg1;
- (void)setSelected:(bool)arg1 animated:(bool)arg2;
- (void)setShowsArtworkImage:(bool)arg1;
- (void)setSubtitleEmphasizedText:(id)arg1;
- (void)setSubtitleText:(id)arg1;
- (void)setTitleEmphasizedText:(id)arg1;
- (void)setTitleText:(id)arg1;
- (bool)showsArtworkImage;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)subtitleEmphasizedText;
- (id)subtitleText;
- (id)titleEmphasizedText;
- (id)titleText;

@end
