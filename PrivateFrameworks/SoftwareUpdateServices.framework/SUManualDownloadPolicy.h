/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
 */

@interface SUManualDownloadPolicy : SUDefaultDownloadPolicy {
    Class _fakeClass;
    bool_autoDownloadAllowableForCellular;
    bool_downloadAllowableForCellular2G;
    bool_downloadAllowableForCellular;
    bool_downloadAllowableForCellularRoaming;
    bool_downloadAllowableForWiFi;
    bool_downloadFreeForCellular;
    bool_downloadable;
    bool_hasEnoughDiskSpace;
    bool_powerRequired;
}

@property(getter=isDownloadAllowableForCellular2G) bool downloadAllowableForCellular2G;
@property(getter=isDownloadAllowableForCellular) bool downloadAllowableForCellular;
@property(getter=isDownloadAllowableForCellularRoaming) bool downloadAllowableForCellularRoaming;
@property(getter=isDownloadAllowableForWiFi) bool downloadAllowableForWiFi;
@property(getter=isDownloadFreeForCellular) bool downloadFreeForCellular;
@property(getter=isDownloadable) bool downloadable;
@property(retain) Class fakeClass;
@property(getter=hasEnoughDiskSpace) bool hasEnoughDiskSpace;
@property(getter=isPowerRequired) bool powerRequired;

- (Class)class;
- (Class)fakeClass;
- (bool)hasEnoughDiskSpace;
- (id)init;
- (bool)isDownloadAllowableForCellular2G;
- (bool)isDownloadAllowableForCellular;
- (bool)isDownloadAllowableForCellularRoaming;
- (bool)isDownloadAllowableForWiFi;
- (bool)isDownloadFreeForCellular;
- (bool)isDownloadable;
- (bool)isPowerRequired;
- (void)setDownloadAllowableForCellular2G:(bool)arg1;
- (void)setDownloadAllowableForCellular:(bool)arg1;
- (void)setDownloadAllowableForCellularRoaming:(bool)arg1;
- (void)setDownloadAllowableForWiFi:(bool)arg1;
- (void)setDownloadFreeForCellular:(bool)arg1;
- (void)setDownloadable:(bool)arg1;
- (void)setFakeClass:(Class)arg1;
- (void)setHasEnoughDiskSpace:(bool)arg1;
- (void)setPowerRequired:(bool)arg1;
- (bool)superIsDownloadable;

@end
