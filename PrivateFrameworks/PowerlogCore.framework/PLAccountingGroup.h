/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore
 */

@class NSArray, NSString;

@interface PLAccountingGroup : PLOperator <PLQLAccountingGroupProtocol> {
    struct _PLTimeIntervalRange { 
        double location; 
        double length; 
    NSString *_accountingGroupName;
    short _accountingGroupType;
    NSArray *_eventCacheResults;
    } _eventCacheTimeRange;
    bool_eventCacheOn;
}

@property(retain,readonly) NSString * accountingGroupName;
@property(readonly) short accountingGroupType;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property bool eventCacheOn;
@property(retain) NSArray * eventCacheResults;
@property struct _PLTimeIntervalRange { double x1; double x2; } eventCacheTimeRange;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

+ (id)accountingGroupFromAGName:(id)arg1;
+ (id)entryEventNoneDefinitionAccountingGroup;
+ (id)entryEventNoneDefinitions;
+ (id)getAccountingGroupEntryKey;

- (void).cxx_destruct;
- (id)accountingGroupName;
- (short)accountingGroupType;
- (void)addAccountingEvent:(id)arg1 withStartDate:(id)arg2 withStopDate:(id)arg3 withWeight:(double)arg4;
- (void)addEventToEvents:(id)arg1 withIdentifier:(id)arg2 withStartDate:(id)arg3 withStopDate:(id)arg4 withWeight:(double)arg5;
- (void)batchAddAccountingEvents:(id)arg1;
- (void)cacheEventsForTimeInterval:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (void)clearEventCache;
- (void)closeAllOpenEventAtTime:(id)arg1 withForceClose:(bool)arg2;
- (void)closeLastOpenEventAtTime:(id)arg1;
- (bool)eventCacheOn;
- (id)eventCacheResults;
- (struct _PLTimeIntervalRange { double x1; double x2; })eventCacheTimeRange;
- (id)getEventsInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (id)getLastOpenSnapshot;
- (id)getLastOpenSnapshotForIdentifier:(id)arg1 forEntryKey:(id)arg2;
- (id)getLastSnapshot;
- (void)initOperatorDependancies;
- (id)initWithName:(id)arg1 withAccountingGroupType:(short)arg2;
- (void)logEventCacheStats:(id)arg1;
- (double)safeTimeForAccounting;
- (void)setEventCacheOn:(bool)arg1;
- (void)setEventCacheResults:(id)arg1;
- (void)setEventCacheTimeRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (double)timeOfLastEndedSnapshot;
- (double)timeOfLastSnapshot;
- (bool)useCachedEventsForTimeInterval:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;

@end
