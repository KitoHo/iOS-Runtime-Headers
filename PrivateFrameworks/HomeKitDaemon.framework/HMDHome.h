/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@class HMDAccessoryManager, HMDHomeManager, HMDRoom, HMMessageDispatcher, NSMutableArray, NSObject<OS_dispatch_queue>, NSString, NSUUID;

@interface HMDHome : NSObject <HMDAccessoryManagerDelegate, HMMessageReceiver, NSSecureCoding> {
    NSMutableArray *_accessories;
    HMDAccessoryManager *_accessoryManager;
    NSMutableArray *_actionSets;
    NSString *_administratorName;
    long long _configurationVersion;
    HMDHomeManager *_homeManager;
    long long _lastKnownReachableAccessoryCount;
    long long _lastKnownReachableIPAccessoryCount;
    HMMessageDispatcher *_msgDispatcher;
    NSString *_name;
    HMDRoom *_roomForEntireHome;
    NSMutableArray *_rooms;
    NSMutableArray *_serviceGroups;
    NSMutableArray *_services;
    NSMutableArray *_triggers;
    NSMutableArray *_users;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableArray *_zones;
}

@property(retain) NSMutableArray * accessories;
@property(retain) HMDAccessoryManager * accessoryManager;
@property(retain) NSMutableArray * actionSets;
@property(retain) NSString * administratorName;
@property long long configurationVersion;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned long long hash;
@property HMDHomeManager * homeManager;
@property long long lastKnownReachableAccessoryCount;
@property long long lastKnownReachableIPAccessoryCount;
@property(readonly) NSObject<OS_dispatch_queue> * messageReceiveQueue;
@property(readonly) NSUUID * messageTargetUUID;
@property(retain) HMMessageDispatcher * msgDispatcher;
@property(retain) NSString * name;
@property(retain) HMDRoom * roomForEntireHome;
@property(retain) NSMutableArray * rooms;
@property(retain) NSMutableArray * serviceGroups;
@property(retain) NSMutableArray * services;
@property(readonly) Class superclass;
@property(retain) NSMutableArray * triggers;
@property(retain) NSMutableArray * users;
@property(readonly) NSUUID * uuid;
@property(retain) NSObject<OS_dispatch_queue> * workQueue;
@property(retain) NSMutableArray * zones;

+ (bool)isObjectContainedInHome:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_addAccessory:(id)arg1 configurationApp:(id)arg2;
- (void)_addAdditionalUser:(id)arg1 toAccessories:(id)arg2;
- (void)_addAllUsersToAccessories:(id)arg1;
- (void)_addNewAccessories:(id)arg1 message:(id)arg2;
- (void)_addPairingsForAccessories:(id)arg1 controllerName:(id)arg2 controllerPublicKey:(id)arg3;
- (void)_addUser:(id)arg1 userPrivilege:(unsigned long long)arg2 confirm:(bool)arg3 message:(id)arg4;
- (void)_checkRemoteAccess;
- (void)_handleAddAccessory:(id)arg1;
- (void)_handleAddActionSet:(id)arg1;
- (void)_handleAddRoom:(id)arg1;
- (void)_handleAddServiceGroup:(id)arg1;
- (void)_handleAddTimerTrigger:(id)arg1;
- (void)_handleAddTrigger:(id)arg1;
- (void)_handleAddUser:(id)arg1;
- (void)_handleAddZone:(id)arg1;
- (void)_handleExecuteActionSet:(id)arg1;
- (void)_handleMultipleCharacteristicRead:(id)arg1;
- (void)_handleMultipleCharacteristicWrite:(id)arg1;
- (void)_handlePrepareExecuteActionSet:(id)arg1;
- (void)_handlePrepareMultipleCharacteristicWrite:(id)arg1;
- (void)_handleQueryUserPrivilege:(id)arg1;
- (void)_handleRemoveAccessories:(id)arg1;
- (void)_handleRemoveAccessory:(id)arg1;
- (void)_handleRemoveActionSet:(id)arg1;
- (void)_handleRemoveRoom:(id)arg1;
- (void)_handleRemoveServiceGroup:(id)arg1;
- (void)_handleRemoveTrigger:(id)arg1;
- (void)_handleRemoveUser:(id)arg1;
- (void)_handleRemoveZone:(id)arg1;
- (void)_handleRename:(id)arg1;
- (void)_handleUnblock:(id)arg1;
- (void)_notifyChangedCharacteristics:(id)arg1 identifier:(id)arg2 withCompletionHandler:(id)arg3;
- (void)_notifyChangedCharacteristics:(id)arg1;
- (void)_performAddPairingForUser:(id)arg1 destination:(id)arg2 remotePeer:(bool)arg3 userPrivilege:(unsigned long long)arg4 controllerInfo:(id)arg5 identifier:(id)arg6 responseHandler:(id)arg7;
- (void)_reachabilityChangedForAccessory:(id)arg1 reachable:(bool)arg2;
- (void)_readCharacteristicValues:(id)arg1 identifier:(id)arg2 withCompletionHandler:(id)arg3;
- (void)_registerForMessages;
- (void)_remoteAccessEnabled:(bool)arg1;
- (void)_removeAccessories:(id)arg1 message:(id)arg2;
- (void)_removeAccessoryWithUUID:(id)arg1 message:(id)arg2;
- (void)_removeAdditionalUser:(id)arg1 fromAccessory:(id)arg2;
- (void)_removeAllAccessoriesWithCompletionHandler:(id)arg1 queue:(id)arg2;
- (void)_removeAllUsersFromAccessory:(id)arg1;
- (void)_removeCharacteristic:(id)arg1;
- (void)_removePairingsForAccessories:(id)arg1 controllerName:(id)arg2 controllerPublicKey:(id)arg3;
- (void)_removeService:(id)arg1;
- (void)_removeUser:(id)arg1 message:(id)arg2;
- (void)_sendInviteRequestForUser:(id)arg1 userPrivilege:(unsigned long long)arg2 confirm:(bool)arg3 message:(id)arg4;
- (void)_writeCharacteristicValues:(id)arg1 identifier:(id)arg2 withCompletionHandler:(id)arg3;
- (id)accessories;
- (void)accessoryManager:(id)arg1 didAddPairedAccessories:(id)arg2 toBridgeAccessory:(id)arg3;
- (void)accessoryManager:(id)arg1 didRemovePairedAccessories:(id)arg2 fromBridgeAccessory:(id)arg3;
- (id)accessoryManager;
- (id)accessoryWithName:(id)arg1;
- (id)accessoryWithUUID:(id)arg1;
- (id)actionSetWithName:(id)arg1;
- (id)actionSetWithUUID:(id)arg1;
- (id)actionSets;
- (void)addAccessoryToCollection:(id)arg1;
- (id)addName:(id)arg1;
- (id)administratorName;
- (void)checkReachabilityAndSpinRemoteAccess;
- (void)checkTimerTriggers;
- (long long)configurationVersion;
- (void)configure:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)fixupReplacementAccessories:(id)arg1 commonAccessories:(id)arg2 idsDataSync:(bool)arg3;
- (void)handleBackgroundTaskAgentJob:(id)arg1;
- (id)homeManager;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 uuid:(id)arg2 entireRoomUUID:(id)arg3 administratorName:(id)arg4 homeManager:(id)arg5;
- (void)invalidate;
- (long long)lastKnownReachableAccessoryCount;
- (long long)lastKnownReachableIPAccessoryCount;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)msgDispatcher;
- (id)name;
- (void)notifyChangedCharacteristics:(id)arg1;
- (void)notifyNewRemotePeersFound:(bool)arg1 remoteUsersRemoved:(id)arg2;
- (void)notifySyncDataChanged;
- (void)performAddPairingForRemoteAccessPoint:(id)arg1 destination:(id)arg2 controllerInfo:(id)arg3 responseHandler:(id)arg4;
- (void)reEvaluateTriggers;
- (void)reachabilityChangedForAccessory:(id)arg1 reachable:(bool)arg2;
- (long long)reachableAccessories;
- (long long)reachableIPAccessories;
- (void)remoteAccessEnabled:(bool)arg1;
- (void)removeAllAccessoriesWithCompletionHandler:(id)arg1 queue:(id)arg2;
- (void)removeCharacteristic:(id)arg1;
- (id)removeName:(id)arg1;
- (void)removeService:(id)arg1;
- (id)replaceName:(id)arg1 withNewName:(id)arg2;
- (id)roomForEntireHome;
- (id)roomWithName:(id)arg1;
- (id)roomWithUUID:(id)arg1;
- (id)rooms;
- (void)saveWithReason:(id)arg1 information:(id)arg2 postSyncNotification:(bool)arg3;
- (void)saveWithReason:(id)arg1 postSyncNotification:(bool)arg2;
- (id)serviceGroupWithName:(id)arg1;
- (id)serviceGroupWithUUID:(id)arg1;
- (id)serviceGroups;
- (id)services;
- (void)setAccessories:(id)arg1;
- (void)setAccessoryManager:(id)arg1;
- (void)setActionSets:(id)arg1;
- (void)setAdministratorName:(id)arg1;
- (void)setConfigurationVersion:(long long)arg1;
- (void)setHomeManager:(id)arg1;
- (void)setLastKnownReachableAccessoryCount:(long long)arg1;
- (void)setLastKnownReachableIPAccessoryCount:(long long)arg1;
- (void)setMsgDispatcher:(id)arg1;
- (void)setName:(id)arg1;
- (void)setRoomForEntireHome:(id)arg1;
- (void)setRooms:(id)arg1;
- (void)setServiceGroups:(id)arg1;
- (void)setServices:(id)arg1;
- (void)setTriggers:(id)arg1;
- (void)setUsers:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (void)setZones:(id)arg1;
- (void)takeOwnershipOfTriggers:(id)arg1 triggersToReactivate:(id)arg2;
- (id)thisAdminUser;
- (id)triggerWithName:(id)arg1;
- (id)triggerWithUUID:(id)arg1;
- (id)triggers;
- (id)users;
- (id)uuid;
- (id)workQueue;
- (void)writeCharacteristicValues:(id)arg1 withCompletionHandler:(id)arg2;
- (id)writeRequestTuplesFromMessage:(id)arg1;
- (id)zoneWithName:(id)arg1;
- (id)zoneWithUUID:(id)arg1;
- (id)zones;

@end
