/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FTServices.framework/FTServices
 */

@class NSDictionary, NSString;

@interface FTDeviceSupport : NSObject {
    int _carrierBundleSupported;
    int _iMessageAllowedToken;
    NSString *_number;
    long long _performanceClass;
    bool_accountModificationRestricted;
    bool_blockPost;
    bool_commCenterDead;
    bool_faceTimeBlocked;
    bool_iMessageBlocked;
    bool_mmsConfigured;
    bool_shouldUseSIMState;
    bool_simBecameNotReady;
    bool_simInserted;
    bool_supportsBackCamera;
    bool_supportsCellularData;
    bool_supportsFT;
    bool_supportsFTA;
    bool_supportsFrontCamera;
    bool_supportsHandoff;
    bool_supportsMMS;
    bool_supportsNonWiFiFaceTime;
    bool_supportsSMS;
    bool_supportsTethering;
    bool_supportsWLAN;
    bool_supportsWiFi;
    bool_supportsiMessage;
}

@property(readonly) NSDictionary * CTNetworkInformation;
@property(readonly) bool SIMInserted;
@property(readonly) bool accountModificationRestricted;
@property(readonly) bool callingAvailable;
@property(readonly) bool callingBlocked;
@property(readonly) bool callingSupported;
@property(readonly) bool commCenterDead;
@property(readonly) bool conferencingAllowed;
@property(readonly) bool conferencingBlocked;
@property(readonly) bool conferencingEnabled;
@property(readonly) NSString * deviceColor;
@property(readonly) NSString * deviceIDPrefix;
@property(readonly) NSString * deviceInformationString;
@property(readonly) NSString * deviceName;
@property(readonly) long long deviceType;
@property(readonly) NSString * deviceTypeIDPrefix;
@property(readonly) NSString * enclosureColor;
@property(readonly) bool faceTimeAvailable;
@property(readonly) bool faceTimeBlocked;
@property(readonly) bool faceTimeSupported;
@property(readonly) bool iMessageAvailable;
@property(readonly) bool iMessageBlocked;
@property(readonly) bool iMessageSupported;
@property(readonly) bool identityServicesSupported;
@property(readonly) bool isC2KEquipment;
@property(readonly) bool isTelephonyDevice;
@property(readonly) bool madridAvailable;
@property(readonly) bool madridBlocked;
@property(readonly) bool madridSupported;
@property(readonly) bool mmsConfigured;
@property(readonly) NSString * model;
@property(readonly) bool nonWifiCallingAvailable;
@property(readonly) bool nonWifiFaceTimeAvailable;
@property(readonly) long long performanceClass;
@property(readonly) NSString * productBuildVersion;
@property(readonly) NSString * productName;
@property(readonly) NSString * productVersion;
@property(readonly) bool registrationSupported;
@property(readonly) bool supportsAppleIDIdentification;
@property(readonly) bool supportsBackFacingCamera;
@property(readonly) bool supportsCellularData;
@property(readonly) bool supportsFrontFacingCamera;
@property(readonly) bool supportsHandoff;
@property(readonly) bool supportsMMS;
@property(readonly) bool supportsNonWiFiCalling;
@property(readonly) bool supportsNonWiFiFaceTime;
@property(readonly) bool supportsSMS;
@property(readonly) bool supportsSMSIdentification;
@property(readonly) bool supportsSimultaneousVoiceAndDataRightNow;
@property(readonly) bool supportsTethering;
@property(readonly) bool supportsWLAN;
@property(readonly) bool supportsWiFi;
@property(readonly) NSString * telephoneNumber;
@property(readonly) NSDictionary * telephonyCapabilities;
@property(readonly) NSString * userAgentString;
@property(readonly) bool wantsBreakBeforeMake;

+ (id)sharedInstance;

- (id)CTNetworkInformation;
- (bool)SIMInserted;
- (void)_carrierChanged;
- (void)_commCenterAlive;
- (void)_handlePhoneNumberRegistrationStateChanged:(id)arg1;
- (void)_handleTechnologyChange:(id)arg1;
- (void)_lockdownStateChanged:(id)arg1;
- (void)_operatorChanged;
- (void)_registerForCapabilityNotifications;
- (void)_registerForCarrierNotifications;
- (void)_registerForCommCenterReadyNotifications;
- (void)_registerForCoreTelephonyNotifications;
- (void)_registerForInternalCoreTelephonyNotifications;
- (void)_registerForLockdownNotifications;
- (void)_registerForManagedConfigurationNotifications;
- (void)_simStatusChanged:(id)arg1;
- (void)_unregisterForCarrierNotifications;
- (void)_unregisterForCommCenterReadyNotifications;
- (void)_unregisterForCoreTelephonyNotifications;
- (void)_unregisterForManagedConfigurationNotifications;
- (void)_updateCapabilities;
- (void)_updateManagedConfigurationSettings;
- (void)_watchNotifyTokens;
- (bool)accountModificationRestricted;
- (bool)callingAvailable;
- (bool)callingBlocked;
- (bool)callingSupported;
- (void)carrierSettingsChanged:(id)arg1;
- (bool)commCenterDead;
- (bool)conferencingAllowed;
- (bool)conferencingBlocked;
- (bool)conferencingEnabled;
- (void)dealloc;
- (id)deviceColor;
- (id)deviceIDPrefix;
- (id)deviceInformationString;
- (id)deviceName;
- (long long)deviceType;
- (id)deviceTypeIDPrefix;
- (id)enclosureColor;
- (bool)faceTimeAvailable;
- (bool)faceTimeBlocked;
- (bool)faceTimeSupported;
- (bool)iMessageAvailable;
- (bool)iMessageBlocked;
- (bool)iMessageSupported;
- (bool)identityServicesSupported;
- (id)init;
- (bool)isC2KEquipment;
- (bool)isTelephonyDevice;
- (bool)madridAvailable;
- (bool)madridBlocked;
- (bool)madridSupported;
- (bool)mmsConfigured;
- (id)model;
- (bool)nonWifiCallingAvailable;
- (bool)nonWifiFaceTimeAvailable;
- (long long)performanceClass;
- (id)productBuildVersion;
- (id)productName;
- (id)productVersion;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(id)arg1 userInfo:(id)arg2;
- (bool)registrationSupported;
- (bool)supportsAppleIDIdentification;
- (bool)supportsBackFacingCamera;
- (bool)supportsCellularData;
- (bool)supportsFrontFacingCamera;
- (bool)supportsHandoff;
- (bool)supportsMMS;
- (bool)supportsNonWiFiCalling;
- (bool)supportsNonWiFiFaceTime;
- (bool)supportsSMS;
- (bool)supportsSMSIdentification;
- (bool)supportsSimultaneousVoiceAndDataRightNow;
- (bool)supportsTethering;
- (bool)supportsWLAN;
- (bool)supportsWiFi;
- (id)telephoneNumber;
- (id)telephonyCapabilities;
- (id)userAgentString;
- (bool)wantsBreakBeforeMake;

@end
