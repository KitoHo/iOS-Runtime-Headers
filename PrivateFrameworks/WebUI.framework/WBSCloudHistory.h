/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebUI.framework/WebUI
 */

@class <NSObject>, NSObject<OS_dispatch_queue>, NSString, NSTimer, WBSCloudHistorySyncThrottler;

@interface WBSCloudHistory : NSObject <WBSCloudHistorySyncThrottlerDataStore> {
    struct unique_ptr<SafariShared::SuddenTerminationDisabler, std::__1::default_delete<SafariShared::SuddenTerminationDisabler> > { 
        struct __compressed_pair<SafariShared::SuddenTerminationDisabler *, std::__1::default_delete<SafariShared::SuddenTerminationDisabler> > { 
            struct SuddenTerminationDisabler {} *__first_; 
        } __ptr_; 
    struct unique_ptr<SafariShared::SuddenTerminationDisabler, std::__1::default_delete<SafariShared::SuddenTerminationDisabler> > { 
        struct __compressed_pair<SafariShared::SuddenTerminationDisabler *, std::__1::default_delete<SafariShared::SuddenTerminationDisabler> > { 
            struct SuddenTerminationDisabler {} *__first_; 
        } __ptr_; 
    NSObject<OS_dispatch_queue> *_cloudHistoryQueue;
    } _fetchOperationSuddenTerminationDisabler;
    <NSObject> *_historyWasLoadedObserver;
    unsigned long long _numberOfDevicesInSyncCircle;
    NSTimer *_saveChangesLaterTimer;
    WBSCloudHistorySyncThrottler *_saveChangesThrottler;
    } _saveOperationSuddenTerminationDisabler;
    bool_cloudHistoryEnabled;
    bool_fetchChangesWhenHistoryLoads;
    bool_removedHistoryItemsArePendingSave;
    bool_saveChangesWhenHistoryLoads;
}

@property(getter=isCloudHistoryEnabled) bool cloudHistoryEnabled;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned long long hash;
@property unsigned long long numberOfDevicesInSyncCircle;
@property(readonly) Class superclass;

+ (id)sharedCloudHistory;

- (id).cxx_construct;
- (void).cxx_destruct;
- (double)_backoffTimeIntervalFromError:(id)arg1;
- (void)_cloudHistoryConfigurationChanged:(id)arg1;
- (long long)_estimatedPriorityForPotentialSaveAttempt;
- (void)_fetchAndMergeChangesWithServerChangeTokenData:(id)arg1 intoHistory:(id)arg2;
- (void)_fetchChangesWhenHistoryLoads;
- (void)_historyItemsWereRemoved:(id)arg1;
- (void)_historyWasLoaded:(id)arg1;
- (void)_postSaveChangesAttemptCompletedNotificationWithAllPendingDataSaved:(bool)arg1;
- (long long)_priorityForSaveWithVisits:(id)arg1 tombstones:(id)arg2 bypassingThrottler:(bool)arg3;
- (void)_registerForHistoryWasLoadedNotificationIfNecessary;
- (long long)_resultFromError:(id)arg1;
- (void)_saveChangesAfterDeterminingNumberOfDevicesInSyncCircle:(id)arg1;
- (void)_saveChangesLaterTimerFired:(id)arg1;
- (void)_saveChangesToCloudHistoryStoreBypassingThrottler:(bool)arg1;
- (void)_saveChangesWhenHistoryLoads;
- (void)_saveVisits:(id)arg1 tombstones:(id)arg2 toCloudHistoryBypassingThrottler:(bool)arg3 withCallback:(id)arg4;
- (void)_scheduleSaveChangesLaterTimerWithInterval:(double)arg1;
- (void)_updateSaveChangesThrottlingPolicy;
- (id)currentSaveChangesThrottlerPolicyString;
- (id)dateOfNextPermittedSaveChangesAttempt;
- (void)dealloc;
- (void)fetchAndMergeChanges;
- (id)init;
- (bool)isCloudHistoryEnabled;
- (unsigned long long)numberOfDevicesInSyncCircle;
- (id)recordOfPastOperationsForThrottler:(id)arg1;
- (void)saveChangesToCloudHistoryStore;
- (void)saveChangesToCloudHistoryStoreBypassingThrottler;
- (void)setCloudHistoryEnabled:(bool)arg1;
- (void)setNumberOfDevicesInSyncCircle:(unsigned long long)arg1;
- (void)setRecordOfPastOperations:(id)arg1 forThrottler:(id)arg2;

@end
