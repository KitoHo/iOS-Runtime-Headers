/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterPrivateUI.framework/GameCenterPrivateUI
 */

@class NSString;

@interface GKSupplementaryViewMetrics : NSObject <NSCopying> {
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    long long _animateWithSection;
    SEL _configurator;
    double _desiredHeight;
    double _desiredWidth;
    } _globalSectionRange;
    NSString *_kind;
    Class _reusableViewClass;
    id _target;
    bool_hidden;
    bool_shouldPin;
    bool_shouldPinGlobal;
    bool_shouldUseGlobalIndexing;
}

@property long long animateWithSection;
@property SEL configurator;
@property double desiredHeight;
@property double desiredWidth;
@property struct _NSRange { unsigned long long x1; unsigned long long x2; } globalSectionRange;
@property(getter=isHidden) bool hidden;
@property(retain) NSString * kind;
@property Class reusableViewClass;
@property bool shouldPin;
@property bool shouldPinGlobal;
@property bool shouldUseGlobalIndexing;
@property id target;

+ (id)supplementaryMetrics;

- (long long)animateWithSection;
- (SEL)configurator;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (double)desiredHeight;
- (double)desiredWidth;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })globalSectionRange;
- (id)init;
- (bool)isHidden;
- (id)kind;
- (id)localDescription;
- (Class)reusableViewClass;
- (void)setAnimateWithSection:(long long)arg1;
- (void)setConfigurator:(SEL)arg1;
- (void)setDesiredHeight:(double)arg1;
- (void)setDesiredWidth:(double)arg1;
- (void)setGlobalSectionRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setHidden:(bool)arg1;
- (void)setKind:(id)arg1;
- (void)setReusableViewClass:(Class)arg1;
- (void)setShouldPin:(bool)arg1;
- (void)setShouldPinGlobal:(bool)arg1;
- (void)setShouldUseGlobalIndexing:(bool)arg1;
- (void)setTarget:(id)arg1;
- (bool)shouldPin;
- (bool)shouldPinGlobal;
- (bool)shouldUseGlobalIndexing;
- (struct CGSize { double x1; double x2; })sizeForCollectionView:(id)arg1;
- (id)target;

@end
