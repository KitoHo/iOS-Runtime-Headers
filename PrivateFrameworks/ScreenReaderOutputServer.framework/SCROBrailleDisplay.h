/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ScreenReaderOutputServer.framework/ScreenReaderOutputServer
 */

@class <SCROBrailleDisplayCommandDispatcherProtocol>, <SCROBrailleDisplayDelegate>, <SCROBrailleDriverProtocol>, <SCROIOElementProtocol>, NSData, NSLock, NSMutableArray, NSMutableString, NSString, SCROBrailleEventDispatcher, SCROBrailleLine;

@interface SCROBrailleDisplay : NSObject <SCROBrailleDisplayCommandDispatcherDelegate> {
    struct { 
        NSData *realData; 
        NSData *virtualData; 
        NSData *aggregatedData; 
        int virtualAlignment; 
        long long masterStatusCellIndex; 
    struct { 
        double quietSince; 
        double busySince; 
        double nextWillMemorizeNotificationTime; 
        double memorizeNextKeyImmediatelyTimeout; 
        boolprepareToMemorizeNextKey; 
        boolrequestPrepareToMemorizeNextKey; 
        boolmemorizeNextKeyImmediately; 
        boolwillMemorizeNow; 
        boolisQuiet; 
        boolnewDown; 
        struct __CFArray {} *currentChord; 
        struct __CFSet {} *downKeys; 
        unsigned int routerEvent; 
        boolcurrentBrailleChordContainsSpacebar; 
        boolspacebarIsDown; 
        boolskipBrailleKeyboardKeyTranslation; 
        struct __CFArray {} *currentBrailleChord; 
        struct __CFSet {} *downBrailleDots; 
        unsigned int currentBrailleModifiers; 
        unsigned int downBrailleModifiers; 
        NSMutableString *brailleString; 
        struct _NSRange { 
            unsigned long long location; 
            unsigned long long length; 
        } brailleStringSelectionRange; 
        boolbrailleStringNeedsUpdate; 
        NSMutableArray *brailleStringModifiers; 
        double lastBrailleChordPosted; 
        double brailleCharExponentialMovingAverage; 
        double brailleTranslationTimeout; 
    struct __CFRunLoopTimer { } *_blinkerEventTimer;
    <SCROBrailleDriverProtocol> *_brailleDriver;
    int _brailleInputMode;
    SCROBrailleLine *_brailleLine;
    <SCROBrailleDisplayCommandDispatcherProtocol> *_commandDispatcher;
    NSLock *_contentLock;
    int _contractionMode;
    <SCROBrailleDisplayDelegate> *_delegate;
    NSString *_driverIdentifier;
    NSString *_driverModelIdentifier;
    SCROBrailleEventDispatcher *_eventDispatcher;
    } _input;
    SCROBrailleLine *_inputBrailleLine;
    int _inputContractionMode;
    struct __CFRunLoopTimer { } *_inputEventTimer;
    <SCROIOElementProtocol> *_ioElement;
    long long _mainSize;
    struct __CFRunLoop { } *_runLoop;
    } _status;
    long long _statusSize;
    bool_automaticBrailleTranslationEnabled;
    bool_blinkingEnabled;
    bool_delegateWantsDisplayCallback;
    bool_inputAllowed;
    bool_inputEightDot;
    bool_inputEnabled;
    bool_isInBrailleEntryMode;
    bool_isValid;
    bool_needsUpdating;
    bool_postsKeyboardEvents;
    bool_shouldBatchUpdates;
    bool_showEightDot;
}

@property bool automaticBrailleTranslationEnabled;
@property(copy,readonly) NSString * debugDescription;
@property bool delegateWantsDisplayCallback;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned long long hash;
@property bool inputAllowed;
@property int inputContractionMode;
@property bool inputEightDot;
@property(readonly) Class superclass;

+ (bool)brailleDriverClassIsValid:(Class)arg1;
+ (id)displayWithIOElement:(id)arg1 driverIdentifier:(id)arg2 delegate:(id)arg3;

- (void)_aggregatedStatusHandler:(id)arg1;
- (void)_appendTranslatedBrailleStringEventsToArray:(struct __CFArray {}**)arg1;
- (void)_blinkerEventHandler;
- (void)_bulkStatusAttributesHandler:(id)arg1;
- (void)_configurationChangeHandler;
- (void)_configurationChangeNotification:(id)arg1;
- (void)_delayedConfigurationChangeNotification;
- (void)_delayedDisplayLoad;
- (void)_delayedSleepNotification:(id)arg1;
- (void)_delayedUnloadNotification;
- (bool)_hasBrailleChord;
- (bool)_hasKeyChord;
- (bool)_hasPressedBrailleKeys;
- (id)_initWithDriver:(id)arg1 driverIdentifier:(id)arg2 ioElement:(id)arg3 delegate:(id)arg4;
- (void)_inputEventHandler;
- (bool)_isMemorizingKeys;
- (id)_newBrailleKeyForCurrentBrailleChord;
- (id)_newBrailleKeyForCurrentKeyChord;
- (id)_newBrailleKeyboardKeyForText:(id)arg1 modifiers:(unsigned int)arg2;
- (void)_panHandler:(id)arg1;
- (void)_processKeyEvents:(id)arg1;
- (void)_runThread;
- (void)_setBatchUpdates:(id)arg1;
- (void)_setBrailleFormatter:(id)arg1;
- (void)_setBrailleFormatterHandler:(id)arg1;
- (void)_setBrailleInputFormatter:(id)arg1;
- (void)_setDelegateWantsDisplayCallbackHandler:(id)arg1;
- (void)_setIsInBrailleEntryMode:(bool)arg1;
- (void)_simulateKeypressHandler:(id)arg1;
- (void)_sleepNotification:(id)arg1;
- (void)_statusDisplayHandler:(id)arg1;
- (id)_statusStringWithDictionary:(id)arg1;
- (void)_stopMemorization;
- (void)_translateBrailleStringAndPostEvent;
- (void)_unloadHandler;
- (void)_unloadNotification:(id)arg1;
- (void)_updateBrailleInputFormatter;
- (void)_updateDisplay;
- (id)aggregatedStatus;
- (bool)automaticBrailleTranslationEnabled;
- (void)beginUpdates;
- (id)brailleInputManager;
- (id)configuration;
- (void)dealloc;
- (bool)delegateWantsDisplayCallback;
- (id)driverIdentifier;
- (id)driverModelIdentifier;
- (void)endUpdates;
- (void)handleCommandDeleteForDispatcher:(id)arg1;
- (void)handleCommandEscapeForDispatcher:(id)arg1;
- (void)handleCommandForwardDeleteForDispatcher:(id)arg1;
- (void)handleCommandMoveLeftForDispatcher:(id)arg1;
- (void)handleCommandMoveRightForDispatcher:(id)arg1;
- (void)handleCommandPanLeftForDispatcher:(id)arg1;
- (void)handleCommandPanRightForDispatcher:(id)arg1;
- (void)handleCommandRouterKeyEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandToggleContractedBrailleEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandToggleEightDotBrailleEvent:(id)arg1 forDispatcher:(id)arg2;
- (void)handleCommandTranslateForDispatcher:(id)arg1;
- (void)handleEvent:(id)arg1;
- (void)handleUnsupportedKeyEvent:(id)arg1 forDispatcher:(id)arg2;
- (bool)inputAllowed;
- (int)inputContractionMode;
- (bool)inputEightDot;
- (void)invalidate;
- (id)ioElement;
- (bool)isLoaded;
- (bool)isValid;
- (id)lineDescriptor;
- (long long)mainSize;
- (long long)masterStatusCellIndex;
- (void)panLeft;
- (void)panRight;
- (id)realStatus;
- (void)setAggregatedStatus:(id)arg1;
- (void)setAutomaticBrailleTranslationEnabled:(bool)arg1;
- (void)setBrailleFormatter:(id)arg1;
- (void)setDelegateWantsDisplayCallback:(bool)arg1;
- (void)setInputAllowed:(bool)arg1;
- (void)setInputContractionMode:(int)arg1;
- (void)setInputEightDot:(bool)arg1;
- (void)setMasterStatusCellIndex:(long long)arg1;
- (void)setPrepareToMemorizeNextKey:(bool)arg1 immediate:(bool)arg2;
- (void)setStatusAttributesWithMasterCellIndex:(long long)arg1 virtualAlignment:(int)arg2;
- (void)setVirtualStatusAlignment:(int)arg1;
- (void)simulateKeypress:(id)arg1;
- (long long)statusSize;
- (int)token;
- (long long)tokenForRouterIndex:(long long)arg1 location:(long long*)arg2 appToken:(id*)arg3;
- (id)virtualStatus;
- (int)virtualStatusAlignment;

@end
