/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@class NSDate, NSString;

@interface VKTrafficIncident : NSObject <NSCopying> {
    struct VKPoint { 
        double x; 
        double y; 
        double z; 
    struct PolylineCoordinate { 
        unsigned int index; 
        float offset; 
    struct { 
        double latitude; 
        double longitude; 
    NSString *_crossStreet;
    NSDate *_endDate;
    NSString *_info;
    NSDate *_lastUpdatedDate;
    } _location;
    float _maxZoom;
    float _minZoom;
    } _routeOffset;
    unsigned int _routeOffsetInMeters;
    long long _routeRelevance;
    long long _significance;
    NSDate *_startDate;
    NSString *_street;
    NSString *_subtitle;
    NSString *_title;
    long long _type;
    unsigned long long _uniqueID;
    NSString *_uniqueString;
    } _worldPoint;
    bool_isNotForDisplay;
    bool_isOnSelectedRoute;
}

@property(readonly) NSString * crossStreet;
@property(readonly) NSDate * endDate;
@property(readonly) NSString * info;
@property(readonly) bool isNotForDisplay;
@property bool isOnSelectedRoute;
@property(readonly) NSDate * lastUpdatedDate;
@property(readonly) float maxZoom;
@property(readonly) float minZoom;
@property struct PolylineCoordinate { unsigned int x1; float x2; } routeOffset;
@property unsigned int routeOffsetInMeters;
@property long long routeRelevance;
@property(readonly) long long significance;
@property(readonly) NSDate * startDate;
@property(readonly) NSString * street;
@property(copy,readonly) NSString * subtitle;
@property(copy,readonly) NSString * title;
@property(readonly) long long type;
@property(readonly) unsigned long long uniqueID;
@property(readonly) NSString * uniqueString;
@property(readonly) struct VKPoint { double x1; double x2; double x3; } worldPoint;

- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)crossStreet;
- (void)dealloc;
- (id)endDate;
- (bool)hasSameIdentifier:(id)arg1;
- (id)info;
- (id)initWithIncident:(id)arg1 vertices:(struct { long long x1; long long x2; }*)arg2 tileRect:(struct { double x1; double x2; double x3; double x4; })arg3 tileSize:(double)arg4;
- (id)initWithIncidentData:(const struct Incident { struct GeoCoordinates { struct Longitude { unsigned int x_1_2_1; } x_1_1_1; struct Latitude { unsigned int x_2_2_1; } x_1_1_2; } x1; struct String { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; struct String { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; int x4; struct String { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_5_1_1; } x5; struct String { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_6_1_1; } x6; long long x7; long long x8; long long x9; long long x10; int x11; unsigned char x12; boolx13; int x14; unsigned char x15; unsigned char x16; }*)arg1 worldPoint:(struct VKPoint { double x1; double x2; double x3; }*)arg2;
- (id)initWithRouteIncident:(id)arg1 routeRelevance:(long long)arg2;
- (bool)isNotForDisplay;
- (bool)isOnSelectedRoute;
- (id)lastUpdatedDate;
- (float)maxZoom;
- (float)minZoom;
- (struct PolylineCoordinate { unsigned int x1; float x2; })routeOffset;
- (unsigned int)routeOffsetInMeters;
- (long long)routeRelevance;
- (void)setIsOnSelectedRoute:(bool)arg1;
- (void)setRouteOffset:(struct PolylineCoordinate { unsigned int x1; float x2; })arg1;
- (void)setRouteOffsetInMeters:(unsigned int)arg1;
- (void)setRouteRelevance:(long long)arg1;
- (long long)significance;
- (id)startDate;
- (id)street;
- (id)subtitle;
- (id)title;
- (long long)type;
- (unsigned long long)uniqueID;
- (id)uniqueString;
- (struct VKPoint { double x1; double x2; double x3; })worldPoint;

@end
