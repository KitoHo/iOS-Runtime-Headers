/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@class NSArray, NSString;

@interface WebEvent : NSObject {
    struct CGPoint { 
        double x; 
        double y; 
    int _characterSet;
    NSString *_characters;
    NSString *_charactersIgnoringModifiers;
    float _deltaX;
    float _deltaY;
    float _gestureRotation;
    float _gestureScale;
    unsigned short _keyCode;
    unsigned long long _keyboardFlags;
    } _locationInWindow;
    unsigned int _modifierFlags;
    double _timestamp;
    unsigned int _touchCount;
    NSArray *_touchIdentifiers;
    NSArray *_touchLocations;
    NSArray *_touchPhases;
    int _type;
    bool_isGesture;
    bool_keyRepeating;
    bool_popupVariant;
    bool_tabKey;
    bool_wasHandled;
}

@property(readonly) int characterSet;
@property(retain,readonly) NSString * characters;
@property(retain,readonly) NSString * charactersIgnoringModifiers;
@property(readonly) float deltaX;
@property(readonly) float deltaY;
@property(readonly) float gestureRotation;
@property(readonly) float gestureScale;
@property(readonly) bool isGesture;
@property(readonly) unsigned short keyCode;
@property(getter=isKeyRepeating,readonly) bool keyRepeating;
@property(readonly) unsigned long long keyboardFlags;
@property(readonly) struct CGPoint { double x1; double x2; } locationInWindow;
@property(readonly) unsigned int modifierFlags;
@property(getter=isPopupVariant,readonly) bool popupVariant;
@property(getter=isTabKey,readonly) bool tabKey;
@property(readonly) double timestamp;
@property(readonly) unsigned int touchCount;
@property(retain,readonly) NSArray * touchIdentifiers;
@property(retain,readonly) NSArray * touchLocations;
@property(retain,readonly) NSArray * touchPhases;
@property(readonly) int type;
@property bool wasHandled;

- (id).cxx_construct;
- (id)_characterSetDescription;
- (id)_eventDescription;
- (id)_modiferFlagsDescription;
- (id)_touchIdentifiersDescription;
- (id)_touchLocationsDescription:(id)arg1;
- (id)_touchPhaseDescription:(int)arg1;
- (id)_touchPhasesDescription;
- (id)_typeDescription;
- (int)characterSet;
- (id)characters;
- (id)charactersIgnoringModifiers;
- (void)dealloc;
- (float)deltaX;
- (float)deltaY;
- (id)description;
- (float)gestureRotation;
- (float)gestureScale;
- (id)initWithKeyEventType:(int)arg1 timeStamp:(double)arg2 characters:(id)arg3 charactersIgnoringModifiers:(id)arg4 modifiers:(unsigned int)arg5 isRepeating:(bool)arg6 isPopupVariant:(bool)arg7 keyCode:(unsigned short)arg8 isTabKey:(bool)arg9 characterSet:(int)arg10;
- (id)initWithKeyEventType:(int)arg1 timeStamp:(double)arg2 characters:(id)arg3 charactersIgnoringModifiers:(id)arg4 modifiers:(unsigned int)arg5 isRepeating:(bool)arg6 withFlags:(unsigned long long)arg7 keyCode:(unsigned short)arg8 isTabKey:(bool)arg9 characterSet:(int)arg10;
- (id)initWithMouseEventType:(int)arg1 timeStamp:(double)arg2 location:(struct CGPoint { double x1; double x2; })arg3;
- (id)initWithScrollWheelEventWithTimeStamp:(double)arg1 location:(struct CGPoint { double x1; double x2; })arg2 deltaX:(float)arg3 deltaY:(float)arg4;
- (id)initWithTouchEventType:(int)arg1 timeStamp:(double)arg2 location:(struct CGPoint { double x1; double x2; })arg3 modifiers:(unsigned int)arg4 touchCount:(unsigned int)arg5 touchLocations:(id)arg6 touchIdentifiers:(id)arg7 touchPhases:(id)arg8 isGesture:(bool)arg9 gestureScale:(float)arg10 gestureRotation:(float)arg11;
- (bool)isGesture;
- (bool)isKeyRepeating;
- (bool)isPopupVariant;
- (bool)isTabKey;
- (unsigned short)keyCode;
- (unsigned long long)keyboardFlags;
- (struct CGPoint { double x1; double x2; })locationInWindow;
- (unsigned int)modifierFlags;
- (void)setWasHandled:(bool)arg1;
- (double)timestamp;
- (unsigned int)touchCount;
- (id)touchIdentifiers;
- (id)touchLocations;
- (id)touchPhases;
- (int)type;
- (bool)wasHandled;

@end
