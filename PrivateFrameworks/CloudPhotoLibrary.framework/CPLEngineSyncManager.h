/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class <CPLEngineStoreUserIdentifier>, <CPLEngineTransportSetupTask>, CPLBackgroundDownloadsTask, CPLBackgroundUploadsTask, CPLEngineLibrary, CPLEngineSyncEmergencyTask, CPLGetAssetCountsTask, CPLMinglePulledChangesTask, CPLPlatformObject, CPLPullFromTransportTask, CPLPushToTransportTask, NSError, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface CPLEngineSyncManager : NSObject <CPLEngineSyncEmergencyTaskDelegate, CPLPushToTransportTaskDelegate, CPLPullFromTransportTaskDelegate, CPLMinglePulledChangesTaskDelegate, CPLBackgroundUploadsTaskDelegate, CPLBackgroundDownloadsTaskDelegate, CPLAbstractObject, CPLEngineComponent> {
    NSMutableArray *_archivedManagementTasks;
    CPLBackgroundDownloadsTask *_backgroundDownloadsTask;
    CPLBackgroundUploadsTask *_backgroundUploadsTask;
    id _closingCompletionHandler;
    NSMutableDictionary *_completionHandlerPerTaskIdentifier;
    CPLEngineLibrary *_engineLibrary;
    CPLGetAssetCountsTask *_getAssetCountsTask;
    NSError *_lastError;
    NSMutableArray *_lastErrors;
    NSObject<OS_dispatch_queue> *_lock;
    CPLEngineSyncEmergencyTask *_managementTask;
    CPLMinglePulledChangesTask *_mingleTask;
    CPLPlatformObject *_platformObject;
    CPLPullFromTransportTask *_pullTask;
    CPLPushToTransportTask *_pushTask;
    NSMutableArray *_setupBarriers;
    <CPLEngineTransportSetupTask> *_setupTask;
    unsigned long long _shouldRestartSessionFromState;
    unsigned long long _state;
    <CPLEngineStoreUserIdentifier> *_transportUserIdentifier;
    bool_foreground;
    bool_hasTransactionForSyncSession;
    bool_setupIsDone;
    bool_shouldTryToMingleImmediately;
}

@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) CPLEngineLibrary * engineLibrary;
@property(readonly) unsigned long long hash;
@property(readonly) CPLPlatformObject * platformObject;
@property bool shouldTryToMingleImmediately;
@property(setter=_setState:) unsigned long long state;
@property(readonly) Class superclass;

+ (id)descriptionForState:(unsigned long long)arg1;
+ (id)platformImplementationProtocol;
+ (id)shortDescriptionForState:(unsigned long long)arg1;

- (void).cxx_destruct;
- (void)_advanceToNextStateLocked;
- (void)_cancelAllTasksForBackgroundDownloads;
- (void)_cancelAllTasksForBackgroundUploads;
- (void)_cancelAllTasksForGetAssetCounts;
- (void)_cancelAllTasksForManagement;
- (void)_cancelAllTasksForPull;
- (void)_cancelAllTasksForPush;
- (void)_cancelAllTasksForSetup;
- (void)_cancelAllTasksLocked;
- (id)_descriptionForBackgroundDownloadsTasks;
- (id)_descriptionForBackgroundUploadsTasks;
- (id)_descriptionForCurrentState;
- (id)_descriptionForGetAssetCountsTasks;
- (id)_descriptionForLaunchedTasks;
- (id)_descriptionForManagementTasks;
- (id)_descriptionForPullTasks;
- (id)_descriptionForPushTasks;
- (id)_descriptionForSetupTasks;
- (bool)_didFinishBackgroundDownloadsTask:(id)arg1 withError:(id)arg2 shouldStop:(bool*)arg3;
- (bool)_didFinishBackgroundUploadsTask:(id)arg1 withError:(id)arg2 shouldStop:(bool*)arg3;
- (bool)_didFinishGetAssetCountsTask:(id)arg1 withError:(id)arg2 shouldStop:(bool*)arg3;
- (bool)_didFinishManagementTask:(id)arg1 withError:(id)arg2 shouldStop:(bool*)arg3;
- (bool)_didFinishPullTask:(id)arg1 withError:(id)arg2 shouldStop:(bool*)arg3;
- (bool)_didFinishPushTask:(id)arg1 withError:(id)arg2 shouldStop:(bool*)arg3;
- (bool)_didFinishSetupTaskWithError:(id)arg1 shouldStop:(bool*)arg2;
- (bool)_launchManagementTask;
- (bool)_launchNecessaryTasksForBackgroundDownloads;
- (bool)_launchNecessaryTasksForBackgroundUploads;
- (bool)_launchNecessaryTasksForCurrentStateLocked;
- (bool)_launchNecessaryTasksForGetAssetCounts;
- (bool)_launchNecessaryTasksForPull;
- (bool)_launchNecessaryTasksForPush;
- (bool)_launchSetupTask;
- (void)_loadManagementTasks;
- (void)_moveAllTasksToBackgroundLocked;
- (void)_notifyEndOfSyncSession;
- (bool)_prepareAndLaunchSyncTask:(id*)arg1;
- (float)_progressForBackgroundDownloadsTask:(id)arg1 progress:(float)arg2;
- (float)_progressForBackgroundUploadsTask:(id)arg1 progress:(float)arg2;
- (float)_progressForGetAssetCountsTask:(id)arg1 progress:(float)arg2;
- (float)_progressForPullTask:(id)arg1 progress:(float)arg2;
- (float)_progressForPushTask:(id)arg1 progress:(float)arg2;
- (void)_resetErrorForSyncSession;
- (void)_restartSyncSessionFromStateLocked:(unsigned long long)arg1 cancelIfNecessary:(bool)arg2;
- (void)_saveManagementTasks;
- (void)_setErrorForSyncSession:(id)arg1;
- (void)_setState:(unsigned long long)arg1;
- (void)addSetupBarrier:(id)arg1;
- (void)beginClientWork:(id)arg1;
- (void)cancelCurrentSyncSession;
- (void)closeAndDeactivate:(bool)arg1 completionHandler:(id)arg2;
- (id)componentName;
- (void)endClientWork:(id)arg1;
- (id)engineLibrary;
- (void)getStatusDictionaryWithCompletionHandler:(id)arg1;
- (void)getStatusWithCompletionHandler:(id)arg1;
- (id)initWithEngineLibrary:(id)arg1;
- (void)kickOffSyncSession;
- (void)openWithCompletionHandler:(id)arg1;
- (id)platformObject;
- (void)resetTransportUserIdentifierAndRestartSync:(bool)arg1;
- (void)setShouldTryToMingleImmediately:(bool)arg1;
- (void)setSyncSessionShouldBeForeground:(bool)arg1;
- (bool)shouldTryToMingleImmediately;
- (void)startEmergencyTask:(id)arg1 withCompletionHandler:(id)arg2;
- (void)startSyncSessionWithMinimalPhase:(unsigned long long)arg1;
- (unsigned long long)state;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)task:(id)arg1 didProgress:(float)arg2;
- (id)task:(id)arg1 wantsToDownloadBatchesFromSyncAnchor:(id)arg2 completionHandler:(id)arg3;
- (id)task:(id)arg1 wantsToPushBatch:(id)arg2 continuationBlock:(id)arg3;

@end
