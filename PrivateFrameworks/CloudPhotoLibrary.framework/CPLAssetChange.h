/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary
 */

@class CLLocation, CPLAdjustments, NSArray, NSDate, NSString;

@interface CPLAssetChange : CPLItemChange {
    NSDate *_addedDate;
    CPLAdjustments *_adjustments;
    NSDate *_assetDate;
    unsigned long long _assetHDRType;
    unsigned long long _assetSubtype;
    unsigned long long _burstFlags;
    NSString *_burstIdentifier;
    NSString *_caption;
    NSString *_collectionIdentifier;
    NSString *_collectionName;
    long long _duration;
    NSString *_extendedDescription;
    NSArray *_keywords;
    NSDate *_lastSharedDate;
    CLLocation *_location;
    NSString *_masterIdentifier;
    NSString *_momentIdentifier;
    NSString *_momentName;
    long long _orientation;
    unsigned long long _originalChoice;
    NSArray *_resources;
    NSString *_timeZoneName;
    bool_favorite;
    bool_hidden;
}

@property(copy) NSDate * addedDate;
@property(retain) CPLAdjustments * adjustments;
@property(copy) NSDate * assetDate;
@property unsigned long long assetHDRType;
@property unsigned long long assetSubtype;
@property unsigned long long burstFlags;
@property(copy) NSString * burstIdentifier;
@property(copy) NSString * caption;
@property(copy) NSString * collectionIdentifier;
@property(copy) NSString * collectionName;
@property long long duration;
@property(copy) NSString * extendedDescription;
@property(getter=isFavorite) bool favorite;
@property(getter=isHidden) bool hidden;
@property(copy) NSArray * keywords;
@property(copy) NSDate * lastSharedDate;
@property(retain) CLLocation * location;
@property(copy) NSString * masterIdentifier;
@property(copy) NSString * momentIdentifier;
@property(copy) NSString * momentName;
@property long long orientation;
@property unsigned long long originalChoice;
@property(copy) NSArray * resources;
@property(copy) NSString * timeZoneName;

- (void).cxx_destruct;
- (bool)addExpandedChangesToChangeBatch:(id)arg1 andApplyToClientCache:(id)arg2 error:(id*)arg3;
- (id)addedDate;
- (id)adjustments;
- (id)assetDate;
- (unsigned long long)assetHDRType;
- (unsigned long long)assetSubtype;
- (void)awakeFromStorage;
- (unsigned long long)burstFlags;
- (id)burstIdentifier;
- (id)caption;
- (id)checkDefaultValueBlockForPropertyWithSelector:(SEL)arg1;
- (id)collectionIdentifier;
- (id)collectionName;
- (id)compactedChangeWithRelatedChanges:(id)arg1 isOnlyChange:(bool)arg2 usingClientCache:(id)arg3;
- (long long)dequeueOrder;
- (long long)duration;
- (id)extendedDescription;
- (id)identifiersForMapping;
- (id)init;
- (bool)isFavorite;
- (bool)isHidden;
- (id)keywords;
- (id)lastSharedDate;
- (id)location;
- (id)masterIdentifier;
- (id)momentIdentifier;
- (id)momentName;
- (long long)orientation;
- (unsigned long long)originalChoice;
- (void)prepareForStorage;
- (id)propertiesDescription;
- (id)propertiesForChangeType:(unsigned long long)arg1;
- (id)proposedCloudIdentifierWithError:(id*)arg1;
- (id)relatedIdentifier;
- (id)resources;
- (void)setAddedDate:(id)arg1;
- (void)setAdjustments:(id)arg1;
- (void)setAssetDate:(id)arg1;
- (void)setAssetHDRType:(unsigned long long)arg1;
- (void)setAssetSubtype:(unsigned long long)arg1;
- (void)setBurstFlags:(unsigned long long)arg1;
- (void)setBurstIdentifier:(id)arg1;
- (void)setCaption:(id)arg1;
- (void)setCollectionIdentifier:(id)arg1;
- (void)setCollectionName:(id)arg1;
- (void)setDuration:(long long)arg1;
- (void)setExtendedDescription:(id)arg1;
- (void)setFavorite:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setKeywords:(id)arg1;
- (void)setLastSharedDate:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setMasterIdentifier:(id)arg1;
- (void)setMomentIdentifier:(id)arg1;
- (void)setMomentName:(id)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOriginalChoice:(unsigned long long)arg1;
- (void)setRelatedIdentifier:(id)arg1;
- (void)setResources:(id)arg1;
- (void)setTimeZoneName:(id)arg1;
- (bool)supportsResources;
- (id)timeZoneName;
- (id)translateToClientChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (id)translateToCloudChangeUsingIDMapping:(id)arg1 error:(id*)arg2;

@end
