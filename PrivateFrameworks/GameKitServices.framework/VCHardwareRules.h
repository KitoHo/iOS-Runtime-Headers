/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

@class NSMutableArray, NSMutableDictionary, NSString;

@interface VCHardwareRules : NSObject {
    booldecodeHiDef;
    boolencodeHiDef;
    int decodeScore;
    int encodeScore;
    NSString *machineName;
    NSMutableDictionary *supportedDecodingRules;
    NSMutableDictionary *supportedEncodingRules;
    NSMutableArray *supportedPayloads;
}

@property(readonly) bool decodeHiDef;
@property(readonly) int decodeScore;
@property(readonly) bool encodeHiDef;
@property(readonly) int encodeScore;
@property(readonly) NSString * machineName;
@property(readonly) NSMutableArray * supportedPayloads;

+ (id)VCHardwareRulesSingleton;

- (void)calculateDecodingScore;
- (void)calculateEncodingScore;
- (bool)canDoHiDefDecoding;
- (bool)canDoHiDefEncoding;
- (void)createSupportedPayloads;
- (void)createSupportedRuleSets;
- (void)dealloc;
- (bool)decodeHiDef;
- (int)decodeScore;
- (bool)encodeHiDef;
- (int)encodeScore;
- (id)filterRules:(id)arg1 byBitrateRule:(id)arg2;
- (float)getBestDecodingFrameRateForFrameWidth:(int)arg1 frameHeight:(int)arg2;
- (void)getBestDecodingFrameWidth:(int*)arg1 frameHeight:(int*)arg2 frameRate:(float*)arg3;
- (float)getBestEncodingFrameRateForFrameWidth:(int)arg1 frameHeight:(int)arg2;
- (void)getBestEncodingFrameWidth:(int*)arg1 frameHeight:(int*)arg2 frameRate:(float*)arg3;
- (bool)getBestFrameWidth:(int*)arg1 frameHeight:(int*)arg2 frameRate:(float*)arg3 isEncoding:(bool)arg4 forAspectRatio:(double)arg5 forPayload:(int)arg6;
- (bool)getBestFrameWidth:(int*)arg1 frameHeight:(int*)arg2 frameRate:(float*)arg3 isEncoding:(bool)arg4 forAspectRatio:(double)arg5;
- (void)getBestFrameWidth:(int*)arg1 frameHeight:(int*)arg2 frameRate:(float*)arg3 isEncoding:(bool)arg4;
- (float)getBestFramerateForFrameWidth:(int)arg1 frameHeight:(int)arg2 isEncoding:(bool)arg3 forPayload:(int)arg4;
- (float)getBestFramerateForFrameWidth:(int)arg1 frameHeight:(int)arg2 isEncoding:(bool)arg3;
- (void)getBestPreviewFrameWidth:(int*)arg1 frameHeight:(int*)arg2 frameRate:(float*)arg3;
- (int)getCPUFamilyType;
- (id)getCPUTypeStringForMachineType:(int)arg1;
- (int)getHardwareScore;
- (int)getScoreFromHardwareInfo:(id)arg1 cpuFamily:(int)arg2 frequency:(int)arg3 numProcs:(int)arg4;
- (id)init;
- (bool)isGVAEncoderAvailable;
- (bool)isHiDefCapapable;
- (bool)isMacBookAirModel;
- (bool)isMachineNewerThanSandybridge:(int)arg1;
- (id)machineName;
- (void)resetEncodingRulesForCamera:(unsigned int)arg1;
- (void)setPreferredVideoRules;
- (id)supportedDecodingRulesForBitrate:(id)arg1 andPayload:(int)arg2;
- (id)supportedDecodingRulesFromDictionaryForPayload:(int)arg1;
- (id)supportedDecodingSizesForBitrate:(id)arg1 andPayload:(int)arg2;
- (id)supportedDecodingSizesFromDictionaryForPayload:(int)arg1;
- (id)supportedEncodingRulesForBitrate:(id)arg1 andPayload:(int)arg2;
- (id)supportedEncodingRulesFromDictionaryForPayload:(int)arg1;
- (id)supportedEncodingSizesForBitrate:(id)arg1 andPayload:(int)arg2;
- (id)supportedEncodingSizesFromDictionaryForPayload:(int)arg1;
- (id)supportedPayloads;
- (bool)useSoftFramerateSwitching;

@end
