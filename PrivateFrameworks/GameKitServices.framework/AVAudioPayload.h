/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

@class NSArray;

@interface AVAudioPayload : NSObject {
    unsigned int bitrate;
    unsigned int blockSize;
    boolcanBundle;
    boolcanSetBitrate;
    boolforcingBitrate;
    boolshouldLimitMaxPacketSize;
    boolshouldReset;
    booluseSBR;
    unsigned int bundleHeaderBytes;
    unsigned int encodedBytesPerFrame;
    struct SoundDec_t { struct AudioStreamBasicDescription { double x_1_1_1; unsigned int x_1_1_2; unsigned int x_1_1_3; unsigned int x_1_1_4; unsigned int x_1_1_5; unsigned int x_1_1_6; unsigned int x_1_1_7; unsigned int x_1_1_8; unsigned int x_1_1_9; } x1; struct AudioStreamBasicDescription { double x_2_1_1; unsigned int x_2_1_2; unsigned int x_2_1_3; unsigned int x_2_1_4; unsigned int x_2_1_5; unsigned int x_2_1_6; unsigned int x_2_1_7; unsigned int x_2_1_8; unsigned int x_2_1_9; } x2; int x3; int x4; struct OpaqueAudioConverter {} *x5; char *x6; int x7; struct AudioStreamPacketDescription { long long x_8_1_1; unsigned int x_8_1_2; unsigned int x_8_1_3; } x8; char *x9; int x10; int x11; int x12; int x13; unsigned char x14; int x15; int x16; unsigned int x17; unsigned int x18; } *encoder;
    int format;
    int payload;
    unsigned int sampleRate;
    unsigned int samplesPerFrame;
    NSArray *supportedBitrates;
}

@property(readonly) unsigned int bitrate;
@property(readonly) unsigned int blockSize;
@property(readonly) unsigned int bundleHeaderBytes;
@property(readonly) bool canBundle;
@property(readonly) unsigned int encodedBytesPerFrame;
@property(readonly) int payload;
@property(readonly) unsigned int sampleRate;
@property(readonly) unsigned int samplesPerFrame;
@property(readonly) NSArray * supportedBitrates;
@property(readonly) bool useCookie;
@property bool useSBR;

+ (bool)isPayloadSupported:(int)arg1;

- (unsigned int)aacBitrate;
- (unsigned int)bitrate;
- (unsigned int)blockSize;
- (unsigned int)bundleHeaderBytes;
- (bool)canBundle;
- (bool)createEncoderWithInternalFormat:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; }*)arg1;
- (void)createSupportedBitrates;
- (void)createSupportedBitratesForAACELD;
- (void)createSupportedBitratesForOpus;
- (void)dealloc;
- (int)encodeAudio:(void*)arg1 numInputBytes:(int)arg2 outputBytes:(void*)arg3 numOutputBytes:(int)arg4;
- (unsigned int)encodedBytesPerFrame;
- (unsigned int)flags;
- (bool)getMagicCookie:(char *)arg1 withLength:(unsigned int*)arg2;
- (id)initWithPayload:(int)arg1 blockSize:(unsigned int)arg2;
- (int)payload;
- (float)qualityForBitRate:(unsigned int)arg1;
- (void)resetEncoder;
- (unsigned int)sampleRate;
- (unsigned int)samplesPerFrame;
- (bool)setBitrate:(unsigned int)arg1;
- (void)setInternalSampleRate:(unsigned int)arg1;
- (void)setUseSBR:(bool)arg1;
- (bool)setupEncodeProperties;
- (bool)setupInputProperties;
- (id)supportedBitrates;
- (bool)useCookie;
- (bool)useSBR;

@end
