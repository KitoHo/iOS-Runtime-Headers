/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class <WebCaretChangeListener>, <WebDeviceOrientationProvider>, <WebFormDelegate>, <WebGeolocationProvider>, <WebNotificationProvider>, NSMutableSet, NSString, NSURL, WAKWindow, WebFixedPositionContent, WebIndicateLayer, WebInspector, WebNodeHighlight, WebPreferences, WebVideoFullscreenController;

@interface WebViewPrivate : NSObject {
    struct RefPtr<WebViewGroup> { 
        struct WebViewGroup {} *m_ptr; 
    struct String { 
        struct RefPtr<WTF::StringImpl> { 
            struct StringImpl {} *m_ptr; 
        } m_impl; 
    struct WebResourceDelegateImplementationCache { 
        int (*didCancelAuthenticationChallengeFunc)(); 
        int (*didReceiveAuthenticationChallengeFunc)(); 
        int (*canAuthenticateAgainstProtectionSpaceFunc)(); 
        int (*connectionPropertiesFunc)(); 
        int (*webThreadDidFinishLoadingFromDataSourceFunc)(); 
        int (*webThreadDidFailLoadingWithErrorFromDataSourceFunc)(); 
        int (*webThreadIdentifierForRequestFunc)(); 
        int (*webThreadDidLoadResourceFromMemoryCacheFunc)(); 
        int (*webThreadWillSendRequestFunc)(); 
        int (*webThreadDidReceiveResponseFunc)(); 
        int (*webThreadDidReceiveContentLengthFunc)(); 
        int (*webThreadWillCacheResponseFunc)(); 
        int (*identifierForRequestFunc)(); 
        int (*willSendRequestFunc)(); 
        int (*didReceiveResponseFunc)(); 
        int (*didReceiveContentLengthFunc)(); 
        int (*didFinishLoadingFromDataSourceFunc)(); 
        int (*didFailLoadingWithErrorFromDataSourceFunc)(); 
        int (*didLoadResourceFromMemoryCacheFunc)(); 
        int (*willCacheResponseFunc)(); 
        int (*plugInFailedWithErrorFunc)(); 
        int (*shouldUseCredentialStorageFunc)(); 
        int (*shouldPaintBrokenImageForURLFunc)(); 
    struct WebFrameLoadDelegateImplementationCache { 
        int (*didCreateJavaScriptContextForFrameFunc)(); 
        int (*didClearWindowObjectForFrameFunc)(); 
        int (*didClearWindowObjectForFrameInScriptWorldFunc)(); 
        int (*didClearInspectorWindowObjectForFrameFunc)(); 
        int (*windowScriptObjectAvailableFunc)(); 
        int (*didHandleOnloadEventsForFrameFunc)(); 
        int (*didReceiveServerRedirectForProvisionalLoadForFrameFunc)(); 
        int (*didCancelClientRedirectForFrameFunc)(); 
        int (*willPerformClientRedirectToURLDelayFireDateForFrameFunc)(); 
        int (*didChangeLocationWithinPageForFrameFunc)(); 
        int (*didPushStateWithinPageForFrameFunc)(); 
        int (*didReplaceStateWithinPageForFrameFunc)(); 
        int (*didPopStateWithinPageForFrameFunc)(); 
        int (*willCloseFrameFunc)(); 
        int (*didStartProvisionalLoadForFrameFunc)(); 
        int (*didReceiveTitleForFrameFunc)(); 
        int (*didCommitLoadForFrameFunc)(); 
        int (*didFailProvisionalLoadWithErrorForFrameFunc)(); 
        int (*didFailLoadWithErrorForFrameFunc)(); 
        int (*didFinishLoadForFrameFunc)(); 
        int (*didFirstLayoutInFrameFunc)(); 
        int (*didFirstVisuallyNonEmptyLayoutInFrameFunc)(); 
        int (*didLayoutFunc)(); 
        int (*didReceiveIconForFrameFunc)(); 
        int (*didFinishDocumentLoadForFrameFunc)(); 
        int (*didDisplayInsecureContentFunc)(); 
        int (*didRunInsecureContentFunc)(); 
        int (*didDetectXSSFunc)(); 
        int (*didRemoveFrameFromHierarchyFunc)(); 
        int (*webThreadDidLayoutFunc)(); 
    struct WebScriptDebugDelegateImplementationCache { 
        booldidParseSourceExpectsBaseLineNumber; 
        boolexceptionWasRaisedExpectsHasHandlerFlag; 
        int (*didParseSourceFunc)(); 
        int (*failedToParseSourceFunc)(); 
        int (*exceptionWasRaisedFunc)(); 
    struct WebHistoryDelegateImplementationCache { 
        int (*navigatedFunc)(); 
        int (*clientRedirectFunc)(); 
        int (*serverRedirectFunc)(); 
        int (*deprecatedSetTitleFunc)(); 
        int (*setTitleFunc)(); 
        int (*populateVisitedLinksFunc)(); 
    struct CGSize { 
        double width; 
        double height; 
    struct Mutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } m_mutex; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id> > > { 
        struct HashTable<unsigned long, WTF::KeyValuePair<unsigned long, WTF::RetainPtr<id> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long, WTF::RetainPtr<id> > >, WTF::IntHash<unsigned long>, WTF::HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id> > >::KeyValuePairTraits, WTF::HashTraits<unsigned long> > { 
            struct KeyValuePair<unsigned long, WTF::RetainPtr<id> > {} *m_table; 
            int m_tableSize; 
            int m_tableSizeMask; 
            int m_keyCount; 
            int m_deletedCount; 
        } m_impl; 
    struct RefPtr<LayerFlushController> { 
        struct LayerFlushController {} *m_ptr; 
    struct CGSize { 
        double width; 
        double height; 
    struct RefPtr<WebCore::HistoryItem> { 
        struct HistoryItem {} *m_ptr; 
    struct RetainPtr<NSData> { 
        void *m_ptr; 
    id UIDelegate;
    id UIDelegateForwarder;
    id UIKitDelegate;
    id UIKitDelegateForwarder;
    id WebMailDelegate;
    <WebCaretChangeListener> *_caretChangeListener;
    NSMutableSet *_caretChangeListeners;
    WebFixedPositionContent *_fixedPositionContent;
    <WebGeolocationProvider> *_geolocationProvider;
    } _globalHistoryItem;
    int _keyboardUIMode;
    <WebNotificationProvider> *_notificationProvider;
    NSString *applicationNameForUserAgent;
    struct CGColor { } *backgroundColor;
    bool_didPerformFirstNavigation;
    bool_keyboardUIModeAccessed;
    boolallowsMessaging;
    boolallowsUndo;
    boolbecomingFirstResponder;
    boolbecomingFirstResponderFromOutside;
    boolclosed;
    boolclosing;
    booldrawsBackground;
    boolhasSpellCheckerDocumentTag;
    boolincludesFlattenedCompositingLayersWhenDrawingToBitmap;
    boolinteractiveFormValidationEnabled;
    boolisStopping;
    boolmainFrameDocumentReady;
    boolmainViewIsScrollingOrZooming;
    boolneedsOneShotDrawingSynchronization;
    boolpostsAcceleratedCompositingNotifications;
    boolshouldCloseWithWindow;
    boolshouldUpdateWhileOffscreen;
    booltabKeyCyclesThroughElementsChanged;
    booluseSiteSpecificSpoofing;
    booluserAgentOverridden;
    boolusesPageCache;
    boolzoomsTextOnly;
    WebNodeHighlight *currentNodeHighlight;
    float customDeviceScaleFactor;
    int didDrawTiles;
    id downloadDelegate;
    id editingDelegate;
    id editingDelegateForwarder;
    } fixedLayoutSize;
    <WebFormDelegate> *formDelegate;
    id formDelegateForwarder;
    id frameLoadDelegate;
    id frameLoadDelegateForwarder;
    } frameLoadDelegateImplementations;
    WebVideoFullscreenController *fullscreenController;
    } group;
    id historyDelegate;
    } historyDelegateImplementations;
    WAKWindow *hostWindow;
    } identifierMap;
    WebIndicateLayer *indicateLayer;
    WebInspector *inspector;
    } lastLayoutSize;
    } layerFlushController;
    <WebDeviceOrientationProvider> *m_deviceOrientationProvider;
    NSString *mediaStyle;
    void *observationInfo;
    struct Page { } *page;
    } pendingFixedPositionLayoutRect;
    } pendingFixedPositionLayoutRectMutex;
    id policyDelegate;
    id policyDelegateForwarder;
    WebPreferences *preferences;
    int programmaticFocusCount;
    } resourceLoadDelegateImplementations;
    id resourceProgressDelegate;
    id resourceProgressDelegateForwarder;
    id scriptDebugDelegate;
    } scriptDebugDelegateImplementations;
    } sourceApplicationAuditData;
    long long spellCheckerDocumentTag;
    } userAgent;
    NSURL *userStyleSheetLocation;
    int validationMessageTimerMagnification;
    float zoomMultiplier;
}

+ (void)initialize;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;
- (void)finalize;
- (id)init;

@end
