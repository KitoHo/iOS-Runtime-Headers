/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Parsec.framework/Parsec
 */

@class <PRSSessionController>, NSMutableData, NSString, NSURLSessionDataTask;

@interface PRSRealQueryTask : PRSQueryTask <PRSParsecDataHandler> {
    NSMutableData *_collectedData;
    NSURLSessionDataTask *_dataTask;
    <PRSSessionController> *_factory;
    NSString *_queryString;
    double _scaleFactor;
    double _startTime;
    bool_allowLocation;
    bool_doCache;
    bool_doResume;
    bool_failed;
}

@property bool allowLocation;
@property(retain) NSMutableData * collectedData;
@property(retain) NSURLSessionDataTask * dataTask;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property bool doCache;
@property bool doResume;
@property <PRSSessionController> * factory;
@property bool failed;
@property(readonly) unsigned long long hash;
@property(retain) NSString * queryString;
@property double scaleFactor;
@property double startTime;
@property(readonly) Class superclass;

+ (id)existingQueryForString:(id)arg1 scaleFactor:(double)arg2 webSearch:(bool)arg3 handler:(id)arg4;

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)_processSearchResponseOnClientQueue:(id)arg1;
- (bool)allowLocation;
- (void)cancel;
- (id)collectedData;
- (id)dataTask;
- (bool)doCache;
- (bool)doResume;
- (id)factory;
- (bool)failed;
- (id)initWithSession:(id)arg1 handler:(id)arg2 factory:(id)arg3 queue:(id)arg4 scaleFactor:(double)arg5 allowLocation:(bool)arg6 feedback:(id)arg7;
- (id)queryString;
- (void)resume;
- (double)scaleFactor;
- (void)setAllowLocation:(bool)arg1;
- (void)setCollectedData:(id)arg1;
- (void)setDataTask:(id)arg1;
- (void)setDoCache:(bool)arg1;
- (void)setDoResume:(bool)arg1;
- (void)setFactory:(id)arg1;
- (void)setFailed:(bool)arg1;
- (void)setQueryString:(id)arg1;
- (void)setScaleFactor:(double)arg1;
- (void)setStartTime:(double)arg1;
- (double)startTime;
- (void)triggerQuery:(bool)arg1;

@end
