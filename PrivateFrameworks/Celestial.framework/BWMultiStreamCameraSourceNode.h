/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@class BWDeferredMetadataCache, BWFigVideoCaptureDevice, BWNodeOutput, NSArray, NSDictionary, NSMutableArray, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSString;

@interface BWMultiStreamCameraSourceNode : BWSourceNode <BWFigCameraSourceNode> {
    struct { 
        int width; 
        int height; 
    struct { 
        int width; 
        int height; 
    struct { 
        int width; 
        int height; 
    struct { 
        int width; 
        int height; 
    struct CGSize { 
        double width; 
        double height; 
    struct BWStreamOutputStorage { 
        boolready; 
        boolenabled; 
        BWNodeOutput *nodeOutput; 
        struct opaqueCMSimpleQueue {} *simpleQueue; 
        NSObject<OS_dispatch_queue> *bufferServicingQueue; 
        struct opaqueCMFormatDescription {} *cachedFormatDescription; 
        int frameCount; 
    float _aeMaxGain;
    BWFigVideoCaptureDevice *_captureDevice;
    int _clientSpecifiedFormatIndex;
    } _cropAspectRatio;
    BWDeferredMetadataCache *_deferredMetadataCache;
    BWNodeOutput *_detectedFacesOutput;
    NSDictionary *_detectedFacesOutputConfiguration;
    NSMutableArray *_detectedFacesRingBuffer;
    struct OpaqueFigSimpleMutex { } *_detectedFacesRingBufferMutex;
    float _lastRequestedZoomFactor;
    float _maxFrameRate;
    float _maxISPZoomFactor;
    int _maxIntegrationTimeOverride;
    float _minFrameRate;
    int _motionAttachmentsSource;
    } _outputsStorage[4];
    } _overscanPercentage;
    } _preferredPreviewDimensions;
    BWNodeOutput *_previewOutput;
    NSString *_previewOutputID;
    int _resolvedFormatIndex;
    } _sensorCropDimensions;
    BWNodeOutput *_stillImageOutput;
    struct OpaqueFigCaptureStream { } *_stream;
    NSObject<OS_dispatch_queue> *_streamEventDispatchQueue;
    NSObject<OS_dispatch_group> *_streamEventNotificationGroup;
    int _streamFormatIndex;
    NSArray *_supportedFormats;
    } _videoCaptureDimensions;
    BWNodeOutput *_videoCaptureOutput;
    unsigned int _videoPixelFormat;
    bool_chromaNoiseReductionEnabled;
    bool_deferMetadataCreation;
    bool_detectedFacesOutputEnabled;
    bool_discardUnstableSphereVideoFrames;
    bool_highResStillImageCaptureEnabled;
    bool_previewOutputEnabled;
    bool_resolvedFormatIndexUpToDate;
    bool_stillImageOutputEnabled;
    bool_temporalNoiseReductionEnabled;
    bool_videoCaptureOutputEnabled;
    bool_videoStabilizationEnabled;
}

@property(readonly) BWFigVideoCaptureDevice * captureDevice;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) BWNodeOutput * detectedFacesOutput;
@property(readonly) unsigned long long hash;
@property(readonly) BWNodeOutput * previewOutput;
@property(readonly) BWNodeOutput * stillImageOutput;
@property(readonly) Class superclass;
@property(readonly) BWNodeOutput * videoCaptureOutput;

+ (id)cameraSourceNodeWithCaptureDevice:(id)arg1;
+ (void)initialize;

- (int)_bringStreamUpToDate;
- (void)_enableOutputs;
- (void)_flushOutRemainingBuffers;
- (id)_initWithCaptureDevice:(id)arg1;
- (float)_ispAppliedZoomFactorFromSampleBufferMetadataDictionary:(id)arg1 outputIndex:(int)arg2;
- (void)_markEndOfLiveOutput;
- (void)_registerForStreamNotifications;
- (void)_registerStreamOutputHandlers;
- (void)_serviceZoomForPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (bool)_shouldEnableStreamCaptureOutput;
- (bool)_shouldEnableStreamPreviewOutput;
- (void)_unregisterFromStreamNotifications;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_updateDigitalZoomForOutputIndex:(int)arg1 sampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2;
- (int)_updateFormatIndex;
- (float)_updateMaxIspZoomFactor;
- (void)_updateMetadataConfigurations;
- (int)_updateOutputConfigurations;
- (void)_updatePreviewOutputID;
- (void)_updateStreamOutputToNodeOutputMapping;
- (float)aeMaxGain;
- (id)captureDevice;
- (bool)chromaNoiseReductionEnabled;
- (struct OpaqueCMClock { }*)clock;
- (id)colorInfoForOutput:(id)arg1;
- (struct { int x1; int x2; })cropAspectRatio;
- (void)dealloc;
- (id)detectedFacesOutput;
- (id)detectedFacesOutputConfiguration;
- (bool)detectedFacesOutputEnabled;
- (bool)discardUnstableSphereVideoFrames;
- (int)formatIndex;
- (bool)hasNonLiveConfigurationChanges;
- (bool)highResStillImageCaptureEnabled;
- (void)makeCurrentConfigurationLive;
- (float)maxFrameRate;
- (int)maxIntegrationTimeOverride;
- (float)minFrameRate;
- (int)motionAttachmentsSource;
- (id)nodeSubType;
- (struct CGSize { double x1; double x2; })overscanPercentage;
- (struct { int x1; int x2; })preferredPreviewDimensions;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (id)previewOutput;
- (bool)previewOutputEnabled;
- (struct { int x1; int x2; })sensorCropDimensions;
- (void)setAeMaxGain:(float)arg1;
- (void)setChromaNoiseReductionEnabled:(bool)arg1;
- (void)setCropAspectRatio:(struct { int x1; int x2; })arg1;
- (void)setDetectedFacesOutputConfiguration:(id)arg1;
- (void)setDetectedFacesOutputEnabled:(bool)arg1;
- (void)setDiscardUnstableSphereVideoFrames:(bool)arg1;
- (void)setFormatIndex:(int)arg1;
- (void)setHighResStillImageCaptureEnabled:(bool)arg1;
- (void)setMaxFrameRate:(float)arg1;
- (void)setMaxIntegrationTimeOverride:(int)arg1;
- (void)setMinFrameRate:(float)arg1;
- (void)setMotionAttachmentsSource:(int)arg1;
- (void)setOverscanPercentage:(struct CGSize { double x1; double x2; })arg1;
- (void)setPreferredPreviewDimensions:(struct { int x1; int x2; })arg1;
- (void)setPreviewOutputEnabled:(bool)arg1;
- (void)setSensorCropDimensions:(struct { int x1; int x2; })arg1;
- (void)setStillImageOutputEnabled:(bool)arg1;
- (void)setTemporalNoiseReductionEnabled:(bool)arg1;
- (void)setVideoCaptureDimensions:(struct { int x1; int x2; })arg1;
- (void)setVideoCaptureOutputEnabled:(bool)arg1;
- (void)setVideoPixelFormat:(unsigned int)arg1;
- (void)setVideoStabilizationEnabled:(bool)arg1;
- (bool)start:(id*)arg1;
- (id)stillImageOutput;
- (bool)stillImageOutputEnabled;
- (bool)stop:(id*)arg1;
- (bool)temporalNoiseReductionEnabled;
- (void)updateOutputRequirements;
- (struct { int x1; int x2; })videoCaptureDimensions;
- (id)videoCaptureOutput;
- (bool)videoCaptureOutputEnabled;
- (unsigned int)videoPixelFormat;
- (bool)videoStabilizationEnabled;

@end
