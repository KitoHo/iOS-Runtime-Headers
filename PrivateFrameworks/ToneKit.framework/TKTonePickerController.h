/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ToneKit.framework/ToneKit
 */

@class <TKTonePickerControllerDelegate>, AVController, NSArray, NSIndexPath, NSMutableArray, NSString, TKTonePickerItem, TLSound, TLToneManager;

@interface TKTonePickerController : NSObject {
    NSString *_accountIdentifier;
    int _alertType;
    NSMutableArray *_cachedClassicAlertTonePickerItems;
    NSMutableArray *_cachedClassicRingtonePickerItems;
    NSMutableArray *_cachedPickerRowItems;
    NSMutableArray *_cachedPickerSectionItems;
    NSArray *_classicAlertToneIdentifiers;
    NSArray *_classicRingtoneIdentifiers;
    NSString *_defaultToneIdentifier;
    <TKTonePickerControllerDelegate> *_delegate;
    NSString *_noneString;
    TLSound *_playingPreviewSound;
    unsigned long long _selectedClassicAlertToneIndex;
    unsigned long long _selectedClassicRingtoneIndex;
    NSIndexPath *_selectedToneIndexPath;
    NSString *_selectedVibrationIdentifier;
    AVController *_storedAVController;
    NSMutableArray *_toneGroupLists;
    NSMutableArray *_toneGroupNames;
    TLToneManager *_toneManager;
    unsigned long long _toneTypes;
    bool_behavesAsRingtonePicker;
    bool_defaultToneIdentifierWasExplicitlySet;
    bool_mediaAtTop;
    bool_noneAtTop;
    bool_selectedToneWasExplicitlySetToDefaultTone;
    bool_shouldCachePickerItems;
    bool_showsDefault;
    bool_showsNone;
    bool_showsNothingSelected;
    bool_showsToneStore;
    bool_showsVibrations;
    bool_startedInterruption;
}

@property(readonly) NSString * _alertTonesPlistName;
@property(setter=_setAlertType:) int _alertType;
@property(setter=_setBehavesAsRingtonePicker:) bool _behavesAsRingtonePicker;
@property(setter=_setCachedClassicAlertTonePickerItems:,retain) NSMutableArray * _cachedClassicAlertTonePickerItems;
@property(setter=_setCachedClassicRingtonePickerItems:,retain) NSMutableArray * _cachedClassicRingtonePickerItems;
@property(setter=_setCachedPickerRowItems:,retain) NSMutableArray * _cachedPickerRowItems;
@property(setter=_setCachedPickerSectionItems:,retain) NSMutableArray * _cachedPickerSectionItems;
@property(setter=_setClassicAlertToneIdentifiers:,retain) NSArray * _classicAlertToneIdentifiers;
@property(setter=_setClassicRingtoneIdentifiers:,retain) NSArray * _classicRingtoneIdentifiers;
@property(setter=_setDefaultToneIdentifier:,copy) NSString * _defaultToneIdentifier;
@property(setter=_setDefaultToneIdentifierWasExplicitlySet:) bool _defaultToneIdentifierWasExplicitlySet;
@property(readonly) NSIndexPath * _indexPathForDefaultGroup;
@property(readonly) NSIndexPath * _indexPathForFirstToneGroup;
@property(readonly) NSIndexPath * _indexPathForMediaGroup;
@property(readonly) NSIndexPath * _indexPathForNone;
@property(readonly) NSIndexPath * _indexPathForToneStoreGroup;
@property(readonly) NSIndexPath * _indexPathForVibrationGroup;
@property(setter=_setNoneString:,copy) NSString * _noneString;
@property(setter=_setPlayingPreviewSound:,retain) TLSound * _playingPreviewSound;
@property(readonly) NSString * _ringtonesPlistName;
@property(setter=_setSelectedClassicAlertToneIndex:) unsigned long long _selectedClassicAlertToneIndex;
@property(setter=_setSelectedClassicRingtoneIndex:) unsigned long long _selectedClassicRingtoneIndex;
@property(setter=_setSelectedToneIndexPath:,retain) NSIndexPath * _selectedToneIndexPath;
@property(setter=_setSelectedToneWasExplicitlySetToDefaultTone:) bool _selectedToneWasExplicitlySetToDefaultTone;
@property(setter=_setSelectedVibrationIdentifier:,copy) NSString * _selectedVibrationIdentifier;
@property(setter=_setShouldCachePickerItems:) bool _shouldCachePickerItems;
@property(setter=_setShowsDefault:) bool _showsDefault;
@property(setter=_setShowsNone:) bool _showsNone;
@property(setter=_setShowsNothingSelected:) bool _showsNothingSelected;
@property(setter=_setShowsToneStore:) bool _showsToneStore;
@property(setter=_setShowsVibrations:) bool _showsVibrations;
@property(setter=_setStartedInterruption:) bool _startedInterruption;
@property(setter=_setStoredAVController:,retain) AVController * _storedAVController;
@property(setter=_setToneGroupLists:,retain) NSMutableArray * _toneGroupLists;
@property(setter=_setToneGroupNames:,retain) NSMutableArray * _toneGroupNames;
@property(setter=_setToneManager:,retain) TLToneManager * _toneManager;
@property(setter=_setToneTypes:) unsigned long long _toneTypes;
@property(readonly) TKTonePickerItem * _topLevelSelectedTonePickerItem;
@property(copy) NSString * accountIdentifier;
@property(readonly) int alertType;
@property(readonly) bool canShowStore;
@property(copy) NSString * defaultToneIdentifier;
@property <TKTonePickerControllerDelegate> * delegate;
@property(readonly) NSIndexPath * indexPathForSelectedTone;
@property(getter=isMediaAtTop) bool mediaAtTop;
@property(getter=isNoneAtTop) bool noneAtTop;
@property(copy) NSString * noneString;
@property(copy) NSString * selectedToneIdentifier;
@property(readonly) TKTonePickerItem * selectedTonePickerItem;
@property(copy) NSString * selectedVibrationIdentifier;
@property bool showsDefault;
@property bool showsNone;
@property bool showsNothingSelected;
@property bool showsToneStore;
@property bool showsVibrations;

- (void)_addRingtonesInDirectory:(id)arg1 toArray:(id)arg2 fileExtension:(id)arg3;
- (id)_alertTonesPlistName;
- (int)_alertType;
- (id)_annotatedNameForToneIdentifier:(id)arg1;
- (id)_avController;
- (bool)_behavesAsRingtonePicker;
- (bool)_cachePickerRowItem:(id)arg1 atIndex:(long long)arg2 inSectionForItem:(id)arg3;
- (bool)_cachePickerRowItem:(id)arg1 forSection:(long long)arg2;
- (bool)_cacheToneClassicsPickerItem:(id)arg1 forIndex:(long long)arg2 headerKind:(unsigned long long)arg3;
- (id)_cachedClassicAlertTonePickerItems;
- (id)_cachedClassicRingtonePickerItems;
- (id)_cachedPickerItemForSection:(long long)arg1;
- (id)_cachedPickerRowItemAtIndex:(long long)arg1 inSectionForItem:(id)arg2;
- (id)_cachedPickerRowItems;
- (id)_cachedPickerSectionItems;
- (id)_cachedToneClassicsPickerItemForIndex:(long long)arg1 headerKind:(unsigned long long)arg2;
- (id)_classicAlertToneIdentifiers;
- (id)_classicRingtoneIdentifiers;
- (id)_defaultToneIdentifier;
- (bool)_defaultToneIdentifierWasExplicitlySet;
- (void)_didReloadTones;
- (void)_didSelectMediaItemWithIdentifier:(id)arg1;
- (bool)_didSelectToneClassicsPickerItem:(id)arg1;
- (void)_didSelectToneWithIdentifier:(id)arg1;
- (void)_didUpdateCheckedStatus:(bool)arg1 ofPickerItemForRowAtIndexPath:(id)arg2;
- (void)_didUpdateCheckedStatus:(bool)arg1 ofToneClassicsPickerItem:(id)arg2;
- (void)_didUpdateDetailText:(id)arg1 ofPickerItemForRowAtIndexPath:(id)arg2;
- (void)_goToStore;
- (void)_handleItemPlaybackDidEndWithAVController:(id)arg1;
- (id)_identifierAtIndexPath:(id)arg1 isMediaItem:(bool*)arg2;
- (id)_identifierOfMediaItemAtIndex:(unsigned long long)arg1;
- (id)_identifierOfSelectedClassicAlertTone;
- (id)_identifierOfSelectedClassicRingtone;
- (id)_identifierOfToneAtIndexPath:(id)arg1;
- (unsigned long long)_indexOfMediaItemWithIdentifier:(id)arg1;
- (id)_indexPathForDefaultGroup;
- (id)_indexPathForFirstToneGroup;
- (id)_indexPathForMediaGroup;
- (id)_indexPathForNone;
- (id)_indexPathForToneStoreGroup;
- (id)_indexPathForToneWithIdentifier:(id)arg1;
- (id)_indexPathForVibrationGroup;
- (void)_invalidatePickerItemCaches;
- (bool)_isDefaultGroupAtIndexPath:(id)arg1;
- (bool)_isDividerAtIndexPath:(id)arg1;
- (bool)_isMediaAtTop;
- (bool)_isMediaGroupAtIndexPath:(id)arg1;
- (bool)_isNoneGroupAtIndexPath:(id)arg1;
- (bool)_isToneStoreGroupAtIndexPath:(id)arg1;
- (bool)_isVibrationGroupAtIndexPath:(id)arg1;
- (id)_loadAlertTonesFromPlist;
- (id)_loadRingtonesFromPlist;
- (id)_loadTonesFromPlistNamed:(id)arg1;
- (unsigned long long)_mediaItemsCount;
- (id)_nameOfVibrationWithIdentifier:(id)arg1;
- (id)_noneString;
- (id)_pickerRowItemAtIndex:(long long)arg1 inSectionForItem:(id)arg2;
- (void)_playToneWithIdentifier:(id)arg1;
- (id)_playingPreviewSound;
- (void)_registerForItemPlaybackDidEndNotificationWithCurrentAVController;
- (void)_registerForUserGeneratedVibrationsDidChangeNotification;
- (void)_reloadMediaItems;
- (void)_reloadTones;
- (void)_reloadTonesForExternalChange:(bool)arg1;
- (void)_resetSelectedClassicAlertToneIndex;
- (void)_resetSelectedClassicRingtoneIndex;
- (void)_resetSelectedVibrationIdentifier;
- (id)_ringtonesPlistName;
- (unsigned long long)_selectedClassicAlertToneIndex;
- (unsigned long long)_selectedClassicRingtoneIndex;
- (id)_selectedIdentifier:(bool*)arg1;
- (id)_selectedToneIndexPath;
- (bool)_selectedToneWasExplicitlySetToDefaultTone;
- (id)_selectedVibrationIdentifier;
- (void)_setAlertType:(int)arg1;
- (void)_setBehavesAsRingtonePicker:(bool)arg1;
- (void)_setCachedClassicAlertTonePickerItems:(id)arg1;
- (void)_setCachedClassicRingtonePickerItems:(id)arg1;
- (void)_setCachedPickerRowItems:(id)arg1;
- (void)_setCachedPickerSectionItems:(id)arg1;
- (void)_setClassicAlertToneIdentifiers:(id)arg1;
- (void)_setClassicRingtoneIdentifiers:(id)arg1;
- (void)_setDefaultToneIdentifier:(id)arg1;
- (void)_setDefaultToneIdentifierWasExplicitlySet:(bool)arg1;
- (void)_setNoneString:(id)arg1;
- (void)_setPlayingPreviewSound:(id)arg1;
- (void)_setSelectedClassicAlertToneIndex:(unsigned long long)arg1;
- (void)_setSelectedClassicRingtoneIndex:(unsigned long long)arg1;
- (void)_setSelectedToneIdentifier:(id)arg1 currentlyReloadingTones:(bool)arg2;
- (void)_setSelectedToneIndexPath:(id)arg1;
- (void)_setSelectedToneWasExplicitlySetToDefaultTone:(bool)arg1;
- (void)_setSelectedVibrationIdentifier:(id)arg1;
- (void)_setShouldCachePickerItems:(bool)arg1;
- (void)_setShowsDefault:(bool)arg1;
- (void)_setShowsNone:(bool)arg1;
- (void)_setShowsNothingSelected:(bool)arg1;
- (void)_setShowsToneStore:(bool)arg1;
- (void)_setShowsVibrations:(bool)arg1;
- (void)_setStartedInterruption:(bool)arg1;
- (void)_setStoredAVController:(id)arg1;
- (void)_setToneGroupLists:(id)arg1;
- (void)_setToneGroupNames:(id)arg1;
- (void)_setToneManager:(id)arg1;
- (void)_setToneTypes:(unsigned long long)arg1;
- (bool)_shouldCachePickerItems;
- (bool)_shouldUseAudioServicesForPlayback;
- (bool)_showsDefault;
- (bool)_showsMedia;
- (bool)_showsNone;
- (bool)_showsNothingSelected;
- (bool)_showsToneStore;
- (bool)_showsVibrations;
- (void)_sortToneIdentifiersArray:(id)arg1;
- (bool)_startedInterruption;
- (id)_storedAVController;
- (void)_togglePlayForToneWithIdentifier:(id)arg1;
- (id)_toneClassicsPickerItemAtIndex:(long long)arg1 belowTonePickerItem:(id)arg2;
- (id)_toneGroupLists;
- (id)_toneGroupNames;
- (id)_toneManager;
- (void)_toneManagerContentsChanged:(id)arg1;
- (unsigned long long)_toneTypes;
- (id)_topLevelSelectedTonePickerItem;
- (void)_unregisterForItemPlaybackDidEndNotificationWithCurrentAVController;
- (void)_unregisterForUserGeneratedVibrationsDidChangeNotification;
- (void)_updateDetailTextOfVibrationItem;
- (id)accountIdentifier;
- (int)alertType;
- (bool)canShowStore;
- (void)dealloc;
- (id)defaultToneIdentifier;
- (id)delegate;
- (bool)didSelectTonePickerItem:(id)arg1;
- (void)finishedWithPicker;
- (id)indexPathForSelectedTone;
- (id)init;
- (id)initWithAlertType:(int)arg1;
- (bool)isMediaAtTop;
- (bool)isNoneAtTop;
- (id)noneString;
- (long long)numberOfSections;
- (id)pickerItemForSection:(long long)arg1;
- (id)selectedToneIdentifier;
- (id)selectedTonePickerItem;
- (id)selectedVibrationIdentifier;
- (void)setAccountIdentifier:(id)arg1;
- (void)setDefaultToneIdentifier:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setMediaAtTop:(bool)arg1;
- (void)setNoneAtTop:(bool)arg1;
- (void)setNoneString:(id)arg1;
- (void)setSelectedToneIdentifier:(id)arg1;
- (void)setSelectedVibrationIdentifier:(id)arg1;
- (void)setShowsDefault:(bool)arg1;
- (void)setShowsNone:(bool)arg1;
- (void)setShowsNothingSelected:(bool)arg1;
- (void)setShowsToneStore:(bool)arg1;
- (void)setShowsVibrations:(bool)arg1;
- (bool)showsDefault;
- (bool)showsNone;
- (bool)showsNothingSelected;
- (bool)showsToneStore;
- (bool)showsVibrations;
- (void)stopPlayingWithFadeOut:(bool)arg1;

@end
