/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class <CKVideoMessageRecordingViewControllerDelegate>, CKJoystickButtonItem, CKJoystickController, CKJoystickShutterButtonItem, CKMediaObject, CKRecordingElapsedTimeView, CKVideoPreviewViewController, NSError, NSString, UIButton, UIImagePickerController, UIView, UIWindow;

@interface CKVideoMessageRecordingViewController : UIViewController <UINavigationControllerDelegate, UIImagePickerControllerDelegate, CKJoystickControllerDelegate, CKVideoRecorderDelegate, CKVideoPreviewViewControllerDelegate> {
    UIImagePickerController *_cameraViewController;
    NSError *_captureError;
    unsigned long long _enableCancel;
    id _mediaExportCompletionBlock;
    CKMediaObject *_mediaObjectForSending;
    UIWindow *_overlayWindow;
    UIView *_presentationView;
    CKVideoPreviewViewController *_previewViewController;
    CKJoystickShutterButtonItem *_recordVideoButtonItem;
    CKJoystickButtonItem *_sendButtonItem;
    UIButton *_swapCameraButton;
    CKRecordingElapsedTimeView *_timerView;
    UIView *_topBackgroundView;
    CKJoystickController *_videoJoystickController;
    <CKVideoMessageRecordingViewControllerDelegate> *_videoMessageDelegate;
    bool_canceled;
    bool_presented;
    bool_previewWarmedUp;
    bool_previewing;
    bool_recording;
    bool_sending;
    bool_showingVideo;
    bool_triedToRecord;
}

@property(retain) UIImagePickerController * cameraViewController;
@property bool canceled;
@property(retain) NSError * captureError;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property unsigned long long enableCancel;
@property(readonly) unsigned long long hash;
@property(copy) id mediaExportCompletionBlock;
@property(retain) CKMediaObject * mediaObjectForSending;
@property(retain) CKVideoPreviewViewController * previewViewController;
@property bool previewing;
@property(retain) CKJoystickShutterButtonItem * recordVideoButtonItem;
@property bool recording;
@property(retain) CKJoystickButtonItem * sendButtonItem;
@property bool sending;
@property(readonly) Class superclass;
@property(retain) UIButton * swapCameraButton;
@property(retain) CKRecordingElapsedTimeView * timerView;
@property(retain) UIView * topBackgroundView;
@property bool triedToRecord;
@property(retain) CKJoystickController * videoJoystickController;
@property <CKVideoMessageRecordingViewControllerDelegate> * videoMessageDelegate;

- (void)_animatePreviewIn;
- (void)_animateVideoIn;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_cameraOrientationChanged:(id)arg1;
- (void)_cleanupCamera;
- (void)_previewWarmedUp:(id)arg1;
- (void)_setupPreviewView;
- (id)cameraViewController;
- (void)cancel;
- (bool)canceled;
- (id)captureError;
- (id)childViewControllerForStatusBarHidden;
- (void)ckVideoPreviewViewControllerFinishedPlaying:(id)arg1;
- (void)ckVideoPreviewViewControllerReady:(id)arg1;
- (void)ckVideoRecorder:(id)arg1 imageDataCaptured:(id)arg2 error:(id)arg3;
- (void)ckVideoRecorder:(id)arg1 videoCaptured:(id)arg2 error:(id)arg3;
- (void)ckVideoRecorderRecordingCanceled:(id)arg1;
- (void)dealloc;
- (void)delayedRecord;
- (void)dismissWithCompletion:(id)arg1;
- (unsigned long long)enableCancel;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (id)initWithPresentationView:(id)arg1;
- (void)joystickCancelAction:(id)arg1;
- (void)joystickCancelActionButtonDown:(id)arg1;
- (void)joystickControllerWillDismissJoystick:(id)arg1 animated:(bool)arg2;
- (void)joystickPlaybackButtonUpAction:(id)arg1;
- (void)joystickSendButtonUpAction:(id)arg1;
- (void)joystickShutterButtonDownAction:(id)arg1;
- (void)joystickShutterButtonTapAction:(id)arg1;
- (void)joystickShutterButtonUpAction:(id)arg1;
- (void)joystickTakePhoto:(id)arg1;
- (void)loadView;
- (id)mediaExportCompletionBlock;
- (id)mediaObjectForSending;
- (void)presentInitialPlaybackJoystick;
- (void)presentPlaybackJoystick:(bool)arg1;
- (void)presentRecordingJoystick;
- (void)presentVideoJoystick;
- (void)presentWithCompletion:(id)arg1;
- (id)previewViewController;
- (bool)previewing;
- (void)record;
- (id)recordVideoButtonItem;
- (bool)recording;
- (void)send;
- (id)sendButtonItem;
- (bool)sending;
- (void)setCameraViewController:(id)arg1;
- (void)setCanceled:(bool)arg1;
- (void)setCaptureError:(id)arg1;
- (void)setEnableCancel:(unsigned long long)arg1;
- (void)setMediaExportCompletionBlock:(id)arg1;
- (void)setMediaObjectForSending:(id)arg1;
- (void)setPreviewViewController:(id)arg1;
- (void)setPreviewing:(bool)arg1;
- (void)setRecordVideoButtonItem:(id)arg1;
- (void)setRecording:(bool)arg1;
- (void)setSendButtonItem:(id)arg1;
- (void)setSending:(bool)arg1;
- (void)setSwapCameraButton:(id)arg1;
- (void)setTimerView:(id)arg1;
- (void)setTopBackgroundView:(id)arg1;
- (void)setTriedToRecord:(bool)arg1;
- (void)setVideoJoystickController:(id)arg1;
- (void)setVideoMessageDelegate:(id)arg1;
- (bool)shouldAutorotate;
- (void)stopRecordingWithCompletionBlock:(id)arg1;
- (void)swapCamera:(id)arg1;
- (id)swapCameraButton;
- (void)takePictureWithCompletionBlock:(id)arg1;
- (id)timerView;
- (id)topBackgroundView;
- (bool)triedToRecord;
- (id)videoJoystickController;
- (id)videoMessageDelegate;

@end
