/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@class <CKCameraSheetViewControllerDelegate>, ALAssetsLibrary, CKDispatchQueue, CKTranscriptController, NSArray, NSMutableArray, NSObject<OS_dispatch_group>, NSString, UICollectionView, UITableView, UITapGestureRecognizer, UIView, UIWindow;

@interface CKPhotoPickerSheetViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate, UITableViewDataSource, UITableViewDelegate, UIGestureRecognizerDelegate> {
    NSArray *_assets;
    UIView *_bgDimmingView;
    UITableView *_buttonsTableView;
    <CKCameraSheetViewControllerDelegate> *_delegate;
    CKDispatchQueue *_largePhotoQueue;
    NSMutableArray *_largePhotos;
    ALAssetsLibrary *_library;
    NSObject<OS_dispatch_group> *_loadingGroup;
    CKTranscriptController *_owner;
    UICollectionView *_photosCollectionView;
    UIView *_sheetView;
    NSString *_takePhotoText;
    UITapGestureRecognizer *_tapGestureRecognizer;
    NSMutableArray *_thumbnails;
    UIWindow *_window;
    UIView *_zoomingView;
    bool_initialLoadFinished;
    bool_isDesaturated;
    bool_largeView;
    bool_presented;
    bool_presenting;
}

@property(retain) UIView * bgDimmingView;
@property(retain) UITableView * buttonsTableView;
@property(copy,readonly) NSString * debugDescription;
@property <CKCameraSheetViewControllerDelegate> * delegate;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned long long hash;
@property(retain) CKDispatchQueue * largePhotoQueue;
@property(retain) UICollectionView * photosCollectionView;
@property bool presented;
@property bool presenting;
@property(retain) UIView * sheetView;
@property(readonly) Class superclass;
@property(copy) NSString * takePhotoText;
@property(retain) UITapGestureRecognizer * tapGestureRecognizer;
@property(retain) UIWindow * window;
@property(retain) UIView * zoomingView;

- (void)_beginDesaturation;
- (void)_cancelPhotoPickerTap;
- (void)_endDesaturation;
- (void)_finishedLoadingAssets;
- (void)_handleTapInMainCollectionView:(id)arg1;
- (double)_heightOfTableView:(id)arg1;
- (void)_sendSelectedAssets:(bool)arg1;
- (id)_thumbnailForIndex:(unsigned long long)arg1;
- (id)bgDimmingView;
- (id)buttonsTableView;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)dealloc;
- (id)delegate;
- (void)dismissPhotoPickerSheetWithCompletion:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)initWithPresentationViewController:(id)arg1;
- (id)largePhotoQueue;
- (void)loadView;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)photosCollectionView;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (void)presentPhotoPickerSheetWithCompletion:(id)arg1;
- (bool)presented;
- (bool)presenting;
- (void)setBgDimmingView:(id)arg1;
- (void)setButtonsTableView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLargePhotoQueue:(id)arg1;
- (void)setPhotosCollectionView:(id)arg1;
- (void)setPresented:(bool)arg1;
- (void)setPresenting:(bool)arg1;
- (void)setSheetView:(id)arg1;
- (void)setTakePhotoText:(id)arg1;
- (void)setTapGestureRecognizer:(id)arg1;
- (void)setWindow:(id)arg1;
- (void)setZoomingView:(id)arg1;
- (id)sheetView;
- (bool)shouldAutorotate;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (id)takePhotoText;
- (id)tapGestureRecognizer;
- (id)window;
- (id)zoomingView;

@end
