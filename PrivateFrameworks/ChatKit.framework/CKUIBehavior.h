/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@class NSAttributedString, NSDateFormatter, NSDictionary, UIColor, UIFont, UIImage;

@interface CKUIBehavior : NSObject {
    long long _HUDStyle;
    double _waveformMaxWidth;
}

@property long long HUDStyle;
@property(readonly) UIColor * activeRecordingDotColor;
@property(readonly) UIColor * appTintColor;
@property(readonly) UIColor * attachmentBalloonActionColor;
@property(readonly) struct CGSize { double x1; double x2; } attachmentBalloonSize;
@property(readonly) UIColor * attachmentBalloonTextColor;
@property(readonly) struct CGSize { double x1; double x2; } attachmentBrowserDefaultSizeForSquare;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } attachmentBrowserFeedLayoutSectionInset;
@property(readonly) double attachmentBrowserGridInterItemSpacing;
@property(readonly) double attachmentBrowserGridMinimumLineSpacing;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } attachmentBrowserGridSectionInset;
@property(readonly) double attachmentBrowserHeaderLabelPadding;
@property(readonly) UIFont * audioBalloonTimeFont;
@property(readonly) double audioBalloonTimeInset;
@property(readonly) double audioBalloonWaveformTimeSpace;
@property(readonly) UIFont * audioHintFont;
@property(readonly) double balloonLineFragmentPadding;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } balloonMaskAlignmentRectInsets;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } balloonMaskCapInsets;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } balloonMaskFrameCapInsets;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } balloonMaskFrameInsets;
@property(readonly) struct CGSize { double x1; double x2; } balloonMaskSize;
@property(readonly) double balloonMaskTailWidth;
@property(readonly) UIFont * balloonSubjectFont;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } balloonTextContainerInset;
@property(readonly) UIFont * balloonTextFont;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } balloonTranscriptInsets;
@property(readonly) double bottomConversationListSpace;
@property(readonly) double bottomTranscriptSpace;
@property(readonly) bool cameraIsWhitelisted;
@property(readonly) bool canAccessContacts;
@property(readonly) bool canAccessPhotos;
@property(readonly) UIFont * characterCountFont;
@property(readonly) UIImage * chevronImage;
@property(readonly) double contactBalloonMinWidth;
@property(readonly) double contactPhotoBalloonMargin;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contactPhotoTranscriptInsets;
@property(readonly) unsigned long long conversationCacheSize;
@property(readonly) double conversationListContactImageDiameter;
@property(readonly) UIFont * conversationListDateFont;
@property(readonly) UIFont * conversationListGroupSenderFont;
@property(readonly) double conversationListMultipleContactsImageDiameter;
@property(readonly) UIFont * conversationListSenderFont;
@property(readonly) UIFont * conversationListSummaryFont;
@property(readonly) unsigned long long defaultConversationSummaryMessageCount;
@property(readonly) unsigned long long defaultConversationViewingMessageCount;
@property(readonly) UIColor * detailsBackgroundColor;
@property(readonly) UIColor * dimmingViewBackgroundColor;
@property(readonly) double dividerHeight;
@property(readonly) struct CGSize { double x1; double x2; } documentIconSize;
@property(readonly) NSDictionary * drawerTranscriptTextAttributes;
@property(readonly) double editingTransitionAnimationDuration;
@property(readonly) double entryContentViewPortraitWidth;
@property(readonly) double entryCoverViewPortraitWidth;
@property(readonly) UIColor * entryFieldAudioRecordingBaloonColor;
@property(readonly) UIColor * entryFieldBackgroundColor;
@property(readonly) UIColor * entryFieldButtonColor;
@property(readonly) UIColor * entryFieldCoverBorderColor;
@property(readonly) UIColor * entryFieldCoverFillColor;
@property(readonly) double entryFieldCoverLineWidth;
@property(readonly) UIColor * entryFieldDividerColor;
@property(readonly) double entryFieldDividerHeight;
@property(readonly) UIColor * entryFieldGrayColor;
@property(readonly) bool entryFieldShouldUseBackdropView;
@property(readonly) UIColor * entryFieldTextColor;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } entryViewCoverInsets;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } entryViewMarginInsets;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } entryViewVerticalAlignmentInsets;
@property(readonly) UIImage * errorDocumentIcon;
@property(readonly) bool faceTimeAudioIsWhitelisted;
@property(readonly) bool faceTimeVideoIsWhitelisted;
@property(readonly) double fadeInBubbleAnimationDuration;
@property(readonly) UIImage * forwardImage;
@property(readonly) UIImage * genericDocumentIcon;
@property(readonly) UIFont * headerFont;
@property(readonly) bool isAccessibilityPreferredContentSizeCategory;
@property(readonly) bool joystickUsesWindow;
@property(readonly) long long keyboardAppearance;
@property(readonly) double largeTranscriptSpace;
@property(readonly) UIColor * lightGrayColor;
@property(readonly) UIImage * locationShareActionIcon;
@property(readonly) double locationShareBalloonAdditionalVertPadding;
@property(readonly) double locationShareBalloonButtonHeight;
@property(readonly) double locationShareBalloonContactImageDiameter;
@property(readonly) long long locationShareEODHour;
@property(readonly) double locationShareOneHourTimeInterval;
@property(readonly) UIFont * locationSubtitleFont;
@property(readonly) double locationValidInterval;
@property(readonly) bool lowClearanceInLandscape;
@property(readonly) bool mailIsWhitelisted;
@property(readonly) double maxAudioRecordingDuration;
@property(readonly) double mediumTranscriptSpace;
@property(readonly) double minAudioRecordingDuration;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } minimumPlayButtonInsets;
@property(readonly) double muteEightHourTimeInterval;
@property(readonly) double muteOneHourTimeInterval;
@property(readonly) UIFont * nameFieldFont;
@property(readonly) unsigned long long numberOfButtonsInPhotoPicker;
@property(readonly) bool phoneIsWhitelisted;
@property(readonly) double photoPickerInterItemSpacing;
@property(readonly) double photoPickerMaxPhotoHeight;
@property(readonly) double photoPickerMaxPhotoWidth;
@property(readonly) double photoPickerMaxZoomedPhotoHeight;
@property(readonly) double photoPickerPopoverWidth;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } photoPickerSectionInsets;
@property(readonly) bool photoPickerShouldZoomOnSelection;
@property(readonly) bool photosIsWhitelisted;
@property(readonly) bool presentForwardingUIModally;
@property(readonly) bool presentsFullscreenInViewService;
@property(readonly) bool presentsQuickLookController;
@property(readonly) bool presentsReaderController;
@property(readonly) double previewMaxWidth;
@property(readonly) double previewTitleBarHeight;
@property(readonly) UIFont * previewTitleFont;
@property(readonly) double raiseToTalkAutoSendMaxDuration;
@property(readonly) double raiseToTalkErrorMaxDuration;
@property(readonly) UIImage * readDNDImage;
@property(readonly) UIFont * readerFont;
@property(readonly) UIFont * recipientNameFont;
@property(readonly) UIColor * recipientsDividerColor;
@property(readonly) double resizeMessageEntryViewAnimationDuration;
@property(readonly) double scrollInNewMessageAnimationDuration;
@property(readonly) bool selectNewConversationOnDeletion;
@property(readonly) bool selectNewConversationOnStateRestore;
@property(readonly) double senderSummaryConversationListSpace;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } senderTranscriptInsets;
@property(readonly) NSDictionary * senderTranscriptTextAttributes;
@property(readonly) bool shouldAutomaticallyCheckAvailabilityOfAlternateAddresses;
@property(readonly) bool shouldBackfillTranscript;
@property(readonly) bool shouldDimTranscript;
@property(readonly) bool shouldHomogenizeAtomsForPreferredService;
@property(readonly) bool shouldNotShowSendButton;
@property(readonly) bool shouldReconfigureNewComposeOnRotation;
@property(readonly) bool shouldRefreshAlternateAddressesSheet;
@property(readonly) bool shouldShowContactPhotosInConversationList;
@property(readonly) bool shouldShowContactPhotosInTranscript;
@property(readonly) bool shouldShowDisclosureChevronInRecipientAtoms;
@property(readonly) bool shouldSuppressRotationInNewCompose;
@property(readonly) bool shouldUseDynamicGradient;
@property(readonly) bool shouldUseDynamicScrolling;
@property(readonly) bool shouldUseSendAnimation;
@property(readonly) bool shouldUseTranslucentBars;
@property(readonly) bool showMMSSetup;
@property(readonly) bool showPendingInConversationList;
@property(readonly) bool showsChevronImage;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } skinnyBalloonMaskCapInsets;
@property(readonly) struct CGSize { double x1; double x2; } skinnyBalloonMaskSize;
@property(readonly) double skinnyBalloonWidthDifference;
@property(readonly) double smallTranscriptSpace;
@property(readonly) NSDictionary * stampTranscriptBoldTextAttributes;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } stampTranscriptInsets;
@property(readonly) NSDictionary * stampTranscriptTextAttributes;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } statusButtonContentEdgeInsets;
@property(readonly) NSAttributedString * statusSaveButtonTranscriptText;
@property(readonly) struct CGSize { double x1; double x2; } statusSaveButtonTranscriptTextSize;
@property(readonly) unsigned long long supportedInterfaceOrientations;
@property(readonly) bool supportsPassbookAttachments;
@property(readonly) bool supportsTypingIndicatorAnimation;
@property(readonly) UIImage * textDocumentIcon;
@property(readonly) double throwMessageAnimationDuration;
@property(readonly) NSDateFormatter * timestampDateFormatter;
@property(readonly) double topConversationListSpace;
@property(readonly) double topTranscriptSpace;
@property(readonly) UIColor * transcriptBackgroundColor;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } transcriptBoldTextAlignmentInsets;
@property(readonly) UIFont * transcriptBoldTextFont;
@property(readonly) double transcriptBoldTextHeight;
@property(readonly) double transcriptContactImageDiameter;
@property(readonly) double transcriptDrawerContactImageDiameter;
@property(readonly) double transcriptDrawerContactImagePadding;
@property(readonly) UIFont * transcriptHeaderTextFont;
@property(readonly) double transcriptHeaderViewMaxRows;
@property(readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } transcriptMarginInsets;
@property(readonly) double transcriptPortraitWidth;
@property(readonly) UIColor * transcriptSeparatorColor;
@property(readonly) UIColor * transcriptTextColor;
@property(readonly) UIFont * transcriptTextFont;
@property(readonly) UIImage * unreadDNDImage;
@property(readonly) UIImage * unreadImage;
@property(readonly) double updateTranscriptInsetsAnimationDuration;
@property(readonly) bool usesCustomSplitViewMasterColumnWidth;
@property(readonly) bool usesJoystick;
@property(readonly) bool usesPersistentConversationSelection;
@property(readonly) bool usesPopovers;
@property(readonly) bool usesUncollapsedSplitview;
@property(readonly) UIColor * waveformDisabledColor;
@property(readonly) unsigned long long waveformGapWidth;
@property(readonly) double waveformHeight;
@property(readonly) unsigned long long waveformMaxPowerLevelsCount;
@property(readonly) double waveformMaxWidth;
@property(readonly) double waveformMaxWidthDuration;
@property(readonly) double waveformMinDbPowerLevel;
@property(readonly) double waveformMinLinearPowerLevel;
@property(readonly) unsigned long long waveformMinPowerLevelsCount;
@property(readonly) unsigned long long waveformPowerLevelWidth;
@property(readonly) unsigned long long waveformPowerLevelWidthIncrement;
@property(readonly) UIColor * waveformUnplayedColor;

+ (id)sharedBehaviors;

- (long long)HUDStyle;
- (id)_leftStatusTranscriptBoldTextAttributes;
- (id)_leftStatusTranscriptTextAttributes;
- (id)_rightStatusTranscriptBoldTextAttributes;
- (id)_rightStatusTranscriptTextAttributes;
- (double)_transcriptAnimationScaleFactor;
- (id)activeRecordingDotColor;
- (id)appTintColor;
- (id)attachmentBalloonActionColor;
- (struct CGSize { double x1; double x2; })attachmentBalloonSize;
- (id)attachmentBalloonTextColor;
- (struct CGSize { double x1; double x2; })attachmentBrowserDefaultSizeForSquare;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })attachmentBrowserFeedLayoutSectionInset;
- (double)attachmentBrowserGridInterItemSpacing;
- (double)attachmentBrowserGridMinimumLineSpacing;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })attachmentBrowserGridSectionInset;
- (double)attachmentBrowserHeaderLabelPadding;
- (id)audioBalloonTimeFont;
- (double)audioBalloonTimeInset;
- (double)audioBalloonTimeWidthForDuration:(double)arg1;
- (double)audioBalloonWaveformTimeSpace;
- (id)audioHintFont;
- (double)balloonBalloonTranscriptSpace:(unsigned char)arg1;
- (id)balloonColorsForColorType:(BOOL)arg1;
- (double)balloonLineFragmentPadding;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })balloonMaskAlignmentRectInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })balloonMaskCapInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })balloonMaskFrameCapInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })balloonMaskFrameInsets;
- (struct CGSize { double x1; double x2; })balloonMaskSize;
- (double)balloonMaskTailWidth;
- (id)balloonOverlayColorForColorType:(BOOL)arg1;
- (id)balloonSubjectFont;
- (id)balloonTextColorForColorType:(BOOL)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })balloonTextContainerInset;
- (id)balloonTextFont;
- (id)balloonTextLinkColorForColorType:(BOOL)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })balloonTranscriptInsets;
- (id)blue_balloonColors;
- (id)blue_balloonOverlayColor;
- (id)blue_balloonTextColor;
- (id)blue_balloonTextLinkColor;
- (id)blue_chevronImage;
- (id)blue_progressViewColor;
- (id)blue_recipientTextColor;
- (id)blue_sendButtonColor;
- (id)blue_unfilledBalloonColor;
- (id)blue_waveformColor;
- (double)bottomConversationListSpace;
- (double)bottomTranscriptSpace;
- (bool)cameraIsWhitelisted;
- (bool)canAccessContacts;
- (bool)canAccessPhotos;
- (id)characterCountFont;
- (id)chevronImage;
- (id)chevronImageForColorType:(BOOL)arg1;
- (double)composeBalloonMaxWidthForEntryContentViewWidth:(double)arg1;
- (double)contactBalloonMinWidth;
- (double)contactPhotoBalloonMargin;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contactPhotoTranscriptInsets;
- (unsigned long long)conversationCacheSize;
- (double)conversationListContactImageDiameter;
- (id)conversationListDateFont;
- (id)conversationListGroupSenderFont;
- (double)conversationListMultipleContactsImageDiameter;
- (double)conversationListSenderBodyLeading;
- (id)conversationListSenderFont;
- (double)conversationListSummaryBodyLeading;
- (id)conversationListSummaryFont;
- (unsigned long long)defaultConversationSummaryMessageCount;
- (unsigned long long)defaultConversationViewingMessageCount;
- (id)detailsBackgroundColor;
- (id)dimmingViewBackgroundColor;
- (double)dividerHeight;
- (struct CGSize { double x1; double x2; })documentIconSize;
- (id)drawerTranscriptTextAttributes;
- (double)editingTransitionAnimationDuration;
- (double)entryContentViewPortraitWidth;
- (double)entryCoverViewPortraitWidth;
- (id)entryFieldAudioRecordingBaloonColor;
- (id)entryFieldBackgroundColor;
- (id)entryFieldButtonColor;
- (id)entryFieldCoverBorderColor;
- (id)entryFieldCoverFillColor;
- (double)entryFieldCoverLineWidth;
- (id)entryFieldDividerColor;
- (double)entryFieldDividerHeight;
- (id)entryFieldGrayColor;
- (bool)entryFieldShouldUseBackdropView;
- (id)entryFieldTextColor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })entryViewCoverInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })entryViewMarginInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })entryViewVerticalAlignmentInsets;
- (id)errorDocumentIcon;
- (bool)faceTimeAudioIsWhitelisted;
- (bool)faceTimeVideoIsWhitelisted;
- (double)fadeInBubbleAnimationDuration;
- (id)forwardImage;
- (id)genericDocumentIcon;
- (id)gray_balloonColors;
- (id)gray_balloonOverlayColor;
- (id)gray_balloonTextColor;
- (id)gray_balloonTextLinkColor;
- (id)gray_chevronImage;
- (id)gray_progressViewColor;
- (id)gray_recipientTextColor;
- (id)gray_sendButtonColor;
- (id)gray_unfilledBalloonColor;
- (id)gray_waveformColor;
- (id)green_balloonColors;
- (id)green_balloonOverlayColor;
- (id)green_balloonTextColor;
- (id)green_balloonTextLinkColor;
- (id)green_chevronImage;
- (id)green_progressViewColor;
- (id)green_recipientTextColor;
- (id)green_sendButtonColor;
- (id)green_unfilledBalloonColor;
- (id)green_waveformColor;
- (id)headerFont;
- (void)invalidateTranscriptDrawerWidth;
- (bool)isAccessibilityPreferredContentSizeCategory;
- (bool)joystickUsesWindow;
- (long long)keyboardAppearance;
- (double)largeTranscriptSpace;
- (double)leftBalloonMaxWidthForTranscriptWidth:(double)arg1 marginInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (double)leftSplitPaneMaximumWidth;
- (double)leftSplitPaneMinimumWidth;
- (double)leftSplitPaneWidthForUIInterfaceOrientation:(long long)arg1;
- (double)leftSplitPaneWidthFraction;
- (id)lightGrayColor;
- (struct CGSize { double x1; double x2; })locationOfferMapThumbnailFillSizeForWidth:(double)arg1;
- (id)locationShareActionIcon;
- (double)locationShareBalloonAdditionalVertPadding;
- (double)locationShareBalloonButtonHeight;
- (double)locationShareBalloonContactImageDiameter;
- (double)locationShareBalloonLabelMaxHeightForOfferState:(long long)arg1;
- (struct CGSize { double x1; double x2; })locationShareBalloonSizeForWidth:(double)arg1 offerState:(long long)arg2;
- (long long)locationShareEODHour;
- (double)locationShareOneHourTimeInterval;
- (id)locationSubtitleFont;
- (double)locationValidInterval;
- (bool)lowClearanceInLandscape;
- (bool)mailIsWhitelisted;
- (struct CGSize { double x1; double x2; })mapThumbnailFillSizeForWidth:(double)arg1;
- (double)maxAudioRecordingDuration;
- (double)mediumTranscriptSpace;
- (double)minAudioRecordingDuration;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })minimumPlayButtonInsets;
- (double)muteEightHourTimeInterval;
- (double)muteOneHourTimeInterval;
- (id)nameFieldFont;
- (unsigned long long)numberOfButtonsInPhotoPicker;
- (bool)phoneIsWhitelisted;
- (double)photoPickerInterItemSpacing;
- (double)photoPickerMaxPhotoHeight;
- (double)photoPickerMaxPhotoWidth;
- (double)photoPickerMaxZoomedPhotoHeight;
- (double)photoPickerPopoverWidth;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })photoPickerSectionInsets;
- (bool)photoPickerShouldZoomOnSelection;
- (bool)photosIsWhitelisted;
- (bool)presentForwardingUIModally;
- (bool)presentsFullscreenInViewService;
- (bool)presentsQuickLookController;
- (bool)presentsReaderController;
- (double)previewMaxWidth;
- (double)previewTitleBarHeight;
- (id)previewTitleFont;
- (id)progressViewColorForColorType:(BOOL)arg1;
- (double)raiseToTalkAutoSendMaxDuration;
- (double)raiseToTalkErrorMaxDuration;
- (id)readDNDImage;
- (id)readerFont;
- (id)recipientNameFont;
- (id)recipientTextColorForColorType:(BOOL)arg1;
- (id)recipientsDividerColor;
- (id)red_balloonColors;
- (id)red_balloonOverlayColor;
- (id)red_balloonTextColor;
- (id)red_balloonTextLinkColor;
- (id)red_chevronImage;
- (id)red_progressViewColor;
- (id)red_recipientTextColor;
- (id)red_sendButtonColor;
- (id)red_unfilledBalloonColor;
- (id)red_waveformColor;
- (double)resizeMessageEntryViewAnimationDuration;
- (double)rightBalloonMaxWidthForEntryContentViewWidth:(double)arg1;
- (double)scrollInNewMessageAnimationDuration;
- (bool)selectNewConversationOnDeletion;
- (bool)selectNewConversationOnStateRestore;
- (id)sendButtonColorForColorType:(BOOL)arg1;
- (double)senderSummaryConversationListSpace;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })senderTranscriptInsets;
- (id)senderTranscriptTextAttributes;
- (void)setHUDStyle:(long long)arg1;
- (bool)shouldAutomaticallyCheckAvailabilityOfAlternateAddresses;
- (bool)shouldBackfillTranscript;
- (bool)shouldDimTranscript;
- (bool)shouldHomogenizeAtomsForPreferredService;
- (bool)shouldNotShowSendButton;
- (bool)shouldReconfigureNewComposeOnRotation;
- (bool)shouldRefreshAlternateAddressesSheet;
- (bool)shouldShowContactPhotosInConversationList;
- (bool)shouldShowContactPhotosInTranscript;
- (bool)shouldShowDisclosureChevronInRecipientAtoms;
- (bool)shouldSuppressRotationInNewCompose;
- (bool)shouldUseDynamicGradient;
- (bool)shouldUseDynamicScrolling;
- (bool)shouldUseSendAnimation;
- (bool)shouldUseTranslucentBars;
- (bool)showMMSSetup;
- (bool)showPendingInConversationList;
- (bool)showsChevronImage;
- (id)siri_balloonColors;
- (id)siri_balloonOverlayColor;
- (id)siri_balloonTextColor;
- (id)siri_balloonTextLinkColor;
- (id)siri_chevronImage;
- (id)siri_progressViewColor;
- (id)siri_recipientTextColor;
- (id)siri_sendButtonColor;
- (id)siri_unfilledBalloonColor;
- (id)siri_waveformColor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })skinnyBalloonMaskCapInsets;
- (struct CGSize { double x1; double x2; })skinnyBalloonMaskSize;
- (double)skinnyBalloonWidthDifference;
- (double)smallTranscriptSpace;
- (id)stampTranscriptBoldTextAttributes;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })stampTranscriptInsets;
- (id)stampTranscriptTextAttributes;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })statusButtonContentEdgeInsets;
- (id)statusSaveButtonTranscriptText;
- (struct CGSize { double x1; double x2; })statusSaveButtonTranscriptTextSize;
- (id)statusTranscriptBoldTextAttributesForOrientation:(BOOL)arg1;
- (id)statusTranscriptTextAttributesForOrientation:(BOOL)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (bool)supportsPassbookAttachments;
- (bool)supportsTypingIndicatorAnimation;
- (id)systemGrayChevronImage;
- (id)textDocumentIcon;
- (double)throwMessageAnimationDuration;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })thumbnailContentAlignmentInsetsForOrientation:(BOOL)arg1;
- (struct CGSize { double x1; double x2; })thumbnailFillSizeForWidth:(double)arg1 imageSize:(struct CGSize { double x1; double x2; })arg2;
- (double)timestampBodyLeading;
- (double)timestampBodyLeadingFraction:(double)arg1;
- (id)timestampDateFormatter;
- (double)toFieldPreferredHeight;
- (double)topConversationListSpace;
- (double)topTranscriptSpace;
- (id)transcriptBackgroundColor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })transcriptBoldTextAlignmentInsets;
- (id)transcriptBoldTextFont;
- (double)transcriptBoldTextHeight;
- (double)transcriptContactImageDiameter;
- (double)transcriptDrawerContactImageDiameter;
- (double)transcriptDrawerContactImagePadding;
- (double)transcriptDrawerOverlapForMarginInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (double)transcriptDrawerWidthForMarginInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)transcriptHeaderTextFont;
- (double)transcriptHeaderViewMaxRows;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })transcriptMarginInsets;
- (double)transcriptPortraitWidth;
- (id)transcriptSeparatorColor;
- (id)transcriptTextColor;
- (id)transcriptTextFont;
- (double)transcriptWaveformWidthForDuration:(double)arg1;
- (id)unfilledBalloonColorForColorType:(BOOL)arg1;
- (id)unreadDNDImage;
- (id)unreadImage;
- (double)updateTranscriptInsetsAnimationDuration;
- (bool)usesCustomSplitViewMasterColumnWidth;
- (bool)usesJoystick;
- (bool)usesPersistentConversationSelection;
- (bool)usesPopovers;
- (bool)usesUncollapsedSplitview;
- (id)waveformColorForColorType:(BOOL)arg1;
- (id)waveformDisabledColor;
- (unsigned long long)waveformGapWidth;
- (double)waveformHeight;
- (unsigned long long)waveformMaxPowerLevelsCount;
- (double)waveformMaxWidth;
- (double)waveformMaxWidthDuration;
- (double)waveformMinDbPowerLevel;
- (double)waveformMinLinearPowerLevel;
- (unsigned long long)waveformMinPowerLevelsCount;
- (unsigned long long)waveformPowerLevelWidth;
- (unsigned long long)waveformPowerLevelWidthIncrement;
- (id)waveformUnplayedColor;
- (id)whiteChevronImage;

@end
