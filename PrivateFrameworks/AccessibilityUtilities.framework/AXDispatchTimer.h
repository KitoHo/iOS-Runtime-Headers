/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@class NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString;

@interface AXDispatchTimer : NSObject <AXTimer> {
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    bool_active;
    bool_automaticallyCancelPendingBlockUponSchedulingNewBlock;
    bool_cancelled;
    bool_pending;
}

@property(getter=isActive) bool active;
@property bool automaticallyCancelPendingBlockUponSchedulingNewBlock;
@property(getter=isCancelled) bool cancelled;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(retain) NSObject<OS_dispatch_queue> * dispatchQueue;
@property(retain) NSObject<OS_dispatch_source> * dispatchTimer;
@property(readonly) unsigned long long hash;
@property(getter=isPending) bool pending;
@property(readonly) Class superclass;

- (void)_reallyCancel;
- (void)afterDelay:(double)arg1 processBlock:(id)arg2 cancelBlock:(id)arg3;
- (void)afterDelay:(double)arg1 processBlock:(id)arg2;
- (bool)automaticallyCancelPendingBlockUponSchedulingNewBlock;
- (void)cancel;
- (void)dealloc;
- (id)dispatchQueue;
- (id)dispatchTimer;
- (id)init;
- (id)initWithTargetSerialQueue:(id)arg1;
- (bool)isActive;
- (bool)isCancelled;
- (bool)isPending;
- (void)setActive:(bool)arg1;
- (void)setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:(bool)arg1;
- (void)setCancelled:(bool)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setDispatchTimer:(id)arg1;
- (void)setPending:(bool)arg1;

@end
