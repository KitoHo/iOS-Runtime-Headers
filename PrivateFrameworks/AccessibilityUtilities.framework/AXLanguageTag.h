/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@class AXDialectMap, NSMutableOrderedSet, NSString;

@interface AXLanguageTag : NSObject <NSCopying> {
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    NSMutableOrderedSet *_ambiguousDialects;
    NSString *_content;
    } _range;
    NSMutableOrderedSet *_unambiguousDialects;
    bool_wasPredicted;
}

@property(retain) NSMutableOrderedSet * ambiguousDialects;
@property NSString * content;
@property(readonly) NSString * contentSubstring;
@property(readonly) AXDialectMap * dialect;
@property(readonly) AXDialectMap * preferredAmbiguousDialect;
@property(readonly) AXDialectMap * preferredUnambiguousDialect;
@property struct _NSRange { unsigned long long x1; unsigned long long x2; } range;
@property(retain) NSMutableOrderedSet * unambiguousDialects;
@property bool wasPredicted;

+ (id)tagWithDialects:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 content:(id)arg3 predictedByTagger:(bool)arg4;

- (void)addAmbiguousDialect:(id)arg1;
- (void)addAmbiguousDialects:(id)arg1;
- (void)addUnambiguousDialect:(id)arg1;
- (id)ambiguousDialects;
- (bool)canBeSpokenByDialect:(id)arg1;
- (bool)canBeSpokenByLanguage:(id)arg1;
- (id)content;
- (id)contentSubstring;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dialect;
- (bool)hasAmbigiousDialects;
- (id)preferredAmbiguousDialect;
- (id)preferredUnambiguousDialect;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })range;
- (void)setAmbiguousDialects:(id)arg1;
- (void)setContent:(id)arg1;
- (void)setRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setUnambiguousDialects:(id)arg1;
- (void)setWasPredicted:(bool)arg1;
- (id)unambiguousDialects;
- (bool)wasPredicted;

@end
