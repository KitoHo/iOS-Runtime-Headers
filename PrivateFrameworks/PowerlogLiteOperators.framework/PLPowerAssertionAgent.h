/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
 */

@class NSMutableArray, NSMutableDictionary, PLCFNotificationOperatorComposition, PLEntryNotificationOperatorComposition, PLNSNotificationOperatorComposition, PLNSTimerOperatorComposition;

@interface PLPowerAssertionAgent : PLAgent {
    NSMutableDictionary *_assertionAggregatedLastSample;
    PLCFNotificationOperatorComposition *_assertionBufferFullNotification;
    PLNSTimerOperatorComposition *_assertionBufferFullNotificationRearmTimer;
    NSMutableArray *_assertionBufferNotificationTracking;
    PLCFNotificationOperatorComposition *_assertionNotification;
    PLNSTimerOperatorComposition *_assertionSnapShotTimer;
    PLEntryNotificationOperatorComposition *_batteryLevelNotificiations;
    PLEntryNotificationOperatorComposition *_canSleepNotification;
    PLNSNotificationOperatorComposition *_dailyTaskNotification;
    PLNSTimerOperatorComposition *_runQueryTimer;
    PLEntryNotificationOperatorComposition *_wakeNotification;
    bool_assertionBufferFullNotificationActive;
    bool_firstBufferDrain;
}

@property(retain) NSMutableDictionary * assertionAggregatedLastSample;
@property(retain) PLCFNotificationOperatorComposition * assertionBufferFullNotification;
@property bool assertionBufferFullNotificationActive;
@property(retain) PLNSTimerOperatorComposition * assertionBufferFullNotificationRearmTimer;
@property(retain) NSMutableArray * assertionBufferNotificationTracking;
@property(retain) PLCFNotificationOperatorComposition * assertionNotification;
@property(retain) PLNSTimerOperatorComposition * assertionSnapShotTimer;
@property bool assertionSnapshotTimerActive;
@property(retain) PLEntryNotificationOperatorComposition * batteryLevelNotificiations;
@property(retain) PLEntryNotificationOperatorComposition * canSleepNotification;
@property(retain) PLNSNotificationOperatorComposition * dailyTaskNotification;
@property bool firstBufferDrain;
@property(retain) PLNSTimerOperatorComposition * runQueryTimer;
@property(retain) PLEntryNotificationOperatorComposition * wakeNotification;

+ (id)accountingGroupDefinitions;
+ (id)defaults;
+ (id)entryEventBackwardDefinitions;
+ (id)entryEventForwardDefinitions;
+ (id)entryEventIntervalDefinitionAssertion;
+ (id)entryEventIntervalDefinitions;
+ (id)entryEventNoneDefinitions;
+ (id)entryEventPointDefinitionBufferStatus;
+ (id)entryEventPointDefinitionSnapshot;
+ (id)entryEventPointDefinitionSnapshotReason;
+ (id)entryEventPointDefinitions;
+ (void)load;
+ (id)railDefinitions;

- (void).cxx_destruct;
- (id)assertionAggregatedLastSample;
- (id)assertionBufferFullNotification;
- (bool)assertionBufferFullNotificationActive;
- (id)assertionBufferFullNotificationRearmTimer;
- (id)assertionBufferNotificationTracking;
- (id)assertionNotification;
- (id)assertionSnapShotTimer;
- (bool)assertionSnapshotTimerActive;
- (id)batteryLevelNotificiations;
- (id)bundleIDForAssertionProcessPID:(int)arg1;
- (id)canSleepNotification;
- (void)checkAssertionBufferFullNotificationRate;
- (id)dailyTaskNotification;
- (bool)firstBufferDrain;
- (id)init;
- (void)initOperatorDependancies;
- (void)log;
- (void)logAggregatedAssertionActivity;
- (void)logEventIntervalAssertion;
- (void)logEventIntervalAssertionWithReason:(id)arg1;
- (void)logEventPointSnapshot;
- (void)logEventPointSnapshotWithReason:(id)arg1;
- (void)resetIOPMSetAssertionActivityAggregate;
- (id)runQueryTimer;
- (void)sanitizeAssertionNameForEntry:(id)arg1;
- (void)setAssertionAggregatedLastSample:(id)arg1;
- (void)setAssertionBufferFullNotification:(id)arg1;
- (void)setAssertionBufferFullNotificationActive:(bool)arg1 withReason:(id)arg2;
- (void)setAssertionBufferFullNotificationActive:(bool)arg1;
- (void)setAssertionBufferFullNotificationRearmTimer:(id)arg1;
- (void)setAssertionBufferNotificationTracking:(id)arg1;
- (void)setAssertionNotification:(id)arg1;
- (void)setAssertionSnapShotTimer:(id)arg1;
- (void)setAssertionSnapshotTimerActive:(bool)arg1;
- (void)setBatteryLevelNotificiations:(id)arg1;
- (void)setCanSleepNotification:(id)arg1;
- (void)setDailyTaskNotification:(id)arg1;
- (void)setFirstBufferDrain:(bool)arg1;
- (void)setRunQueryTimer:(id)arg1;
- (void)setWakeNotification:(id)arg1;
- (id)wakeNotification;

@end
