/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

@class <PLMoviePlayerControllerDelegate>, AVPlayer, AVPlayerItem, NSString, PLMoviePlayerView, PLTVOutWindow, UIAlertView;

@interface PLMoviePlayerController : NSObject {
    UIAlertView *_alertView;
    unsigned long long _backgroundTaskId;
    unsigned long long _bufferingState;
    <PLMoviePlayerControllerDelegate> *_delegate;
    double _lastSetCurrentTimeTime;
    NSString *_originalAudioCategory;
    double _pendingTime;
    unsigned long long _pendingTimeSnapOption;
    unsigned long long _playbackState;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    PLTVOutWindow *_tvOutWindow;
    PLMoviePlayerView *_view;
    bool_TVOutEnabled;
    bool_audioSessionActive;
    bool_exited;
    bool_forceDisableTVOut;
    bool_forceUpdateCurrentTime;
    bool_hasPendingTime;
    bool_isActiveController;
    bool_isExternalPlayback;
    bool_isPreparedForPlayback;
    bool_isSeeking;
}

@property bool TVOutEnabled;
@property(readonly) unsigned long long bufferingState;
@property double currentTime;
@property <PLMoviePlayerControllerDelegate> * delegate;
@property(readonly) double duration;
@property(setter=_setForceDisableTVOut:) bool forceDisableTVOut;
@property bool isActiveController;
@property(readonly) bool isPreparedForPlayback;
@property(readonly) float playbackRate;
@property(readonly) unsigned long long playbackState;
@property(retain,readonly) AVPlayer * player;
@property(retain,readonly) PLMoviePlayerView * view;

+ (id)AVAssetURLWithPath:(id)arg1;
+ (bool)_isNetworkSupportedPath:(id)arg1;
+ (bool)_isStreamableAsset:(id)arg1;

- (bool)TVOutEnabled;
- (bool)_allowsExternalPlayback;
- (id)_asset;
- (void)_delayedUpdateFromPendingTime;
- (void)_didEnterBackgroundNotification:(id)arg1;
- (void)_didLoadValueOfKey:(id)arg1 forAsset:(id)arg2;
- (void)_dispatchOnMainThreadWithBlock:(id)arg1;
- (void)_displayVideoView;
- (void)_exitPlayer:(int)arg1;
- (void)_loadAsset:(id)arg1;
- (void)_pausePlaybackForNotification;
- (void)_playbackFailedWithError:(id)arg1;
- (void)_playerItemDidReachEndNotification:(id)arg1;
- (void)_playerItemFailedToPlayToEnd:(id)arg1;
- (void)_playerItemFailedToPlayToEndNotification:(id)arg1;
- (id)_playerKeysToObserve;
- (void)_playerRateDidChange:(id)arg1;
- (void)_registerForNotifications;
- (void)_restoreTVOutVideoIfNecessary;
- (void)_screenDidConnect:(id)arg1;
- (void)_screenDidDisconnect:(id)arg1;
- (void)_serverConnectionDidDie:(id)arg1;
- (void)_setBufferingState:(unsigned long long)arg1;
- (void)_setForceDisableTVOut:(bool)arg1;
- (void)_setPlaybackState:(unsigned long long)arg1;
- (void)_setPlayerAudioSessionActive:(bool)arg1;
- (void)_setPlayerItem:(id)arg1;
- (void)_setupPlayer;
- (void)_setupTVOutWindow;
- (void)_simpleRemoteNotification:(id)arg1;
- (void)_streamBufferFull;
- (void)_streamLikelyToKeepUp;
- (void)_streamRanDry;
- (void)_streamUnlikelyToKeepUp;
- (void)_tearDownPlayer;
- (void)_tearDownTVOutWindow;
- (void)_unregisterForNotifications;
- (void)_updateAudioSession;
- (void)_updateBackgroundViewInformation;
- (void)_updateDisableAirPlayMirroringDuringPlayback;
- (void)_updateFromPendingTime;
- (void)_updateTVOutEnabled;
- (void)_willBeginSuspendAnimationNotification:(id)arg1;
- (void)_willEnterForegroundNotification:(id)arg1;
- (void)_willResignNotification:(id)arg1;
- (void)_willSuspendNotification:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (unsigned long long)bufferingState;
- (double)currentTime;
- (void)dealloc;
- (id)delegate;
- (void)didBecomeActiveController;
- (double)duration;
- (long long)externalPlaybackType;
- (bool)forceDisableTVOut;
- (id)init;
- (bool)isActiveController;
- (bool)isExternalPlayback;
- (bool)isPreparedForPlayback;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pause;
- (void)pauseDueToInsufficientData;
- (void)play;
- (void)playDueToEnoughData;
- (void)playFromBeginning;
- (float)playbackRate;
- (unsigned long long)playbackState;
- (id)player;
- (void)requestToBecomeActiveController;
- (void)requestToResignAsActiveController;
- (void)setCurrentTime:(double)arg1 timeSnapOption:(unsigned long long)arg2 forceUpdate:(bool)arg3;
- (void)setCurrentTime:(double)arg1 timeSnapOption:(unsigned long long)arg2;
- (void)setCurrentTime:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsActiveController:(bool)arg1;
- (void)setPlayerItem:(id)arg1 startTime:(double)arg2;
- (void)setTVOutEnabled:(bool)arg1;
- (void)stop;
- (void)tearDownTVOutWindow;
- (bool)videoOutActive;
- (id)view;
- (void)willResignAsActiveController;

@end
