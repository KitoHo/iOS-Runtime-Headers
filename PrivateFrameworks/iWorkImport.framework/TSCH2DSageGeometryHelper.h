/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCH2DSageGeometryHelper : TSCHSageGeometryHelper {
    struct CGSize { 
        double width; 
        double height; 
    struct CGSize { 
        double width; 
        double height; 
    struct CGSize { 
        double width; 
        double height; 
    struct CGSize { 
        double width; 
        double height; 
    struct CGSize { 
        double width; 
        double height; 
    struct CGSize { 
        double width; 
        double height; 
    struct CGSize { 
        double width; 
        double height; 
    struct CGSize { 
        double width; 
        double height; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGPoint { 
        double x; 
        double y; 
    struct CGPoint { 
        double x; 
        double y; 
    boolmCategoryAxisTitleSizeValid;
    boolmChartAxisLabelsSizeValid;
    boolmChartAxisSizeValid;
    boolmChartExplodedSizeValid;
    boolmChartLayoutValid;
    boolmChartLegendSizeValid;
    boolmChartTitleSizeValid;
    boolmChartValueElementsGeometryValid;
    boolmValueAxisTitleSizeValid;
    boolmValueAxisY2TitleSizeValid;
    } mBottomAxisBounds;
    double mBottomAxisHeightChange;
    } mBottomAxisLabelsBounds;
    } mBottomLeftCategoryAxisTitleOverhang;
    } mBottomLeftChartTitleOverhang;
    } mBottomLeftValueAxisTitleOverhang;
    } mBottomLeftValueAxisY2TitleOverhang;
    } mBottomLegendBounds;
    } mCategoryAxisTitleBounds;
    } mChartBodyBounds;
    } mChartTitleBounds;
    } mExplodedBodyShift;
    } mExplodedBounds;
    double mHorizontalAxisOverhang;
    } mLeftAxisBounds;
    } mLeftAxisLabelsBounds;
    } mLeftLegendBounds;
    } mOutsideLabelsChartTitleShift;
    } mRightAxisBounds;
    } mRightAxisLabelsBounds;
    double mRightAxisWidthChange;
    } mRightLegendBounds;
    } mTopAxisBounds;
    double mTopAxisHeightChange;
    } mTopAxisLabelsBounds;
    } mTopLegendBounds;
    } mTopRightCategoryAxisTitleOverhang;
    } mTopRightChartTitleOverhang;
    } mTopRightValueAxisTitleOverhang;
    } mTopRightValueAxisY2TitleOverhang;
    } mValueAxisTitleBounds;
    } mValueAxisY2TitleBounds;
    double mVerticalAxisOverhang;
}

+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })computeSageChartAreaBoundsForChartInfo:(id)arg1 geometryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 returningContainingViewportSize:(id*)arg3;

- (double)_bottomAxisOuterWidth;
- (double)_horizontalAxisLabelsHeight;
- (double)_leftAxisOuterWidth;
- (double)_rightAxisOuterWidth;
- (double)_seriesSymbolWidth;
- (double)_topAxisOuterWidth;
- (double)_verticalAxisLabelsWidth:(bool)arg1;
- (bool)aspectRatioLocked;
- (bool)bottomAxisLabelsVisible;
- (void)calculateCategoryAxisTitleSize;
- (void)calculateChartAxisLabelsSize;
- (void)calculateChartAxisSize;
- (void)calculateChartBodySize;
- (bool)calculateChartExplodedSize;
- (void)calculateChartTitleSize;
- (void)calculateValueAxisTitleSize;
- (void)calculateValueAxisY2TitleSize;
- (double)chartTitlePadding;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })computeSageLayoutCBB;
- (double)distanceFromXAxisUsingParagraphStyle:(id)arg1;
- (double)distanceFromYAxisUsingParagraphStyle:(id)arg1;
- (double)fontHeight:(id)arg1;
- (bool)isArea;
- (bool)isLine;
- (bool)isPie;
- (bool)isScatter;
- (bool)isVertical;
- (bool)leftAxisLabelsVisible;
- (struct CGSize { double x1; double x2; })measureText:(id)arg1 withParagraphStyle:(id)arg2;
- (bool)p_labelsVisible:(id)arg1;
- (id)p_model;
- (double)p_widthFromTicksAndStrokeForAxis:(id)arg1;
- (bool)rightAxisLabelsVisible;
- (double)seriesCategoryLabelsHorizontalGutter;
- (double)seriesCategoryLabelsVerticalGutter;
- (bool)topAxisLabelsVisible;
- (double)xAxisLabelHeight;
- (double)xAxisTitlePadding;
- (double)yAxisLabelHeight:(bool)arg1;
- (double)yAxisTitlePadding:(bool)arg1;

@end
