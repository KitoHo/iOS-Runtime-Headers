/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class NSArray, NSMutableArray, TPPageLayout, TSDAbstractLayout, TSDLayoutGeometry;

@interface TSDAbstractLayout : NSObject {
    struct CGPoint { 
        double x; 
        double y; 
    struct CGPoint { 
        double x; 
        double y; 
    boolmInterimPositionXSet;
    boolmInterimPositionYSet;
    boolmLastInterimPositionXSet;
    boolmLastInterimPositionYSet;
    NSMutableArray *mChildren;
    TSDLayoutGeometry *mGeometry;
    } mInterimPosition;
    } mLastInterimPosition;
    TSDAbstractLayout *mParent;
}

@property(copy) NSArray * children;
@property(copy) TSDLayoutGeometry * geometry;
@property double interimPositionX;
@property double interimPositionY;
@property(readonly) struct CGPoint { double x1; double x2; } lastInterimPosition;
@property(readonly) unsigned int pageIndex;
@property(readonly) TPPageLayout * pageLayout;
@property TSDAbstractLayout * parent;
@property(readonly) TSDAbstractLayout * root;

- (void)addChild:(id)arg1;
- (void)addLayoutsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toArray:(id)arg2 deep:(bool)arg3;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })alignmentFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })alignmentFrameForProvidingGuidesInRoot;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })alignmentFrameInRoot;
- (struct CGPoint { double x1; double x2; })alignmentFrameOriginForFixingInterimPosition;
- (bool)canRotateChildLayout:(id)arg1;
- (id)children;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })clipRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })clippedRectInRoot:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)dealloc;
- (void)exchangeChildAtIndex:(unsigned long long)arg1 withChildAtIndex:(unsigned long long)arg2;
- (void)fixTransformFromInterimPosition;
- (void)fixTransformFromLastInterimPosition;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForCulling;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameInParent;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameInRoot;
- (id)geometry;
- (id)geometryForTransforming;
- (id)geometryInParent;
- (id)geometryInRoot:(id)arg1;
- (id)geometryInRoot;
- (id)init;
- (void)insertChild:(id)arg1 above:(id)arg2;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertChild:(id)arg1 below:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })insertionFrame;
- (double)interimPositionX;
- (double)interimPositionY;
- (bool)isAxisAlignedUnflippedInRoot;
- (bool)isRootLayoutForInspectorGeometry;
- (struct CGPoint { double x1; double x2; })lastInterimPosition;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (void)offsetGeometryBy:(struct CGPoint { double x1; double x2; })arg1;
- (void)p_fixTransformFromInterimPosition:(struct CGPoint { double x1; double x2; })arg1 interimPositionXSet:(bool)arg2 interimPositionYSet:(bool)arg3;
- (unsigned int)pageIndex;
- (id)pageLayout;
- (id)parent;
- (id)parentLayoutForProvidingGuides;
- (struct CGPoint { double x1; double x2; })positionInRootForAttachmentPositioner;
- (bool)providesGuidesForChildLayouts;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectInParent:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectInRoot:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)removeFromParent;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (id)root;
- (void)setChildren:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)setInterimPositionX:(double)arg1;
- (void)setInterimPositionY:(double)arg1;
- (void)setParent:(id)arg1;
- (bool)shouldSnapWhileResizing;
- (bool)supportsFlipping;
- (bool)supportsInspectorPositioning;
- (bool)supportsParentRotation;
- (bool)supportsResize;
- (bool)supportsRotation;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transformInParent;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transformInRoot;
- (id)visibleGeometries;

@end
