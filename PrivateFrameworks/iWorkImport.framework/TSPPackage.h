/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class <TSPFileCoordinatorDelegate>, NSError, NSHashTable, NSObject<OS_dispatch_queue>, SFUCryptoKey, TSPDocumentProperties, TSUZipFileArchive;

@interface TSPPackage : NSObject {
    struct { 
        unsigned int isLazyLoadingDocumentProperties : 1; 
        unsigned int isLazyLoadingZip : 1; 
    NSObject<OS_dispatch_queue> *_accessQueue;
    SFUCryptoKey *_decryptionKey;
    TSPDocumentProperties *_documentProperties;
    <TSPFileCoordinatorDelegate> *_fileCoordinatorDelegate;
    unsigned long long _fileFormatVersion;
    } _flags;
    NSError *_lastReloadError;
    NSHashTable *_packageDatas;
    unsigned char _packageIdentifier;
    TSUZipFileArchive *_zipArchive;
    bool_isClosed;
}

@property(readonly) SFUCryptoKey * decryptionKey;
@property(readonly) TSPDocumentProperties * documentProperties;
@property(readonly) <TSPFileCoordinatorDelegate> * fileCoordinatorDelegate;
@property(readonly) unsigned long long fileFormatVersion;
@property(readonly) bool isClosed;
@property(readonly) NSError * lastReloadError;
@property(readonly) unsigned char packageIdentifier;
@property(readonly) long long packageType;
@property(retain) TSUZipFileArchive * zipArchive;

+ (id)dataEntryPathForFilename:(id)arg1;
+ (id)newLazyPackageWithURL:(id)arg1 packageIdentifier:(unsigned char)arg2 decryptionKey:(id)arg3 fileCoordinatorDelegate:(id)arg4;
+ (id)newPackageWithURL:(id)arg1 packageIdentifier:(unsigned char)arg2 decryptionKey:(id)arg3 fileCoordinatorDelegate:(id)arg4 error:(id*)arg5;
+ (id)objectArchiveEntryPathForPackageLocator:(id)arg1;
+ (unsigned long long)zipArchiveOptions;
+ (id)zipArchiveURLFromPackageURL:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)checkPassword:(id)arg1;
- (bool)containsData:(id)arg1;
- (void)copyComponent:(id)arg1 toPackageURL:(id)arg2 packageLocator:(id)arg3 zipFileWriter:(id)arg4 encryptionKey:(id)arg5 completion:(id)arg6;
- (id)dataAtRelativePath:(id)arg1 allowDecryption:(bool)arg2 error:(id*)arg3;
- (id)decryptionKey;
- (void)didCloseDocument;
- (void)didReadFileFormatVersion:(unsigned long long)arg1;
- (void)didReferenceData:(id)arg1;
- (void)didRetrieveDecryptionKey:(id)arg1;
- (id)documentProperties;
- (unsigned long long)encodedLengthForComponentLocator:(id)arg1 isStoredOutsideObjectArchive:(bool)arg2;
- (void)enumerateDatasUsingBlock:(id)arg1;
- (id)fileCoordinatorDelegate;
- (unsigned long long)fileFormatVersion;
- (bool)hasDataAtRelativePath:(id)arg1;
- (id)init;
- (id)initWithPackageIdentifier:(unsigned char)arg1 documentProperties:(id)arg2 fileFormatVersion:(unsigned long long)arg3 decryptionKey:(id)arg4 fileCoordinatorDelegate:(id)arg5 isLazyLoading:(bool)arg6;
- (id)initWithURL:(id)arg1 zipArchiveOrNil:(id)arg2 packageIdentifier:(unsigned char)arg3 documentProperties:(id)arg4 decryptionKey:(id)arg5 fileCoordinatorDelegate:(id)arg6 error:(id*)arg7;
- (bool)isClosed;
- (bool)isPasswordProtected;
- (id)lastReloadError;
- (id)newDataStorageAtRelativePath:(id)arg1;
- (id)newDocumentPropertiesWithURL:(id)arg1 zipProvider:(id)arg2 error:(id*)arg3;
- (id)newRawDataReadChannelAtRelativePath:(id)arg1;
- (id)newRawReadChannelForComponent:(id)arg1;
- (id)newReadChannelForComponent:(id)arg1;
- (id)newZipArchiveFromPackageURL:(id)arg1 isLazyLoading:(bool)arg2 error:(id*)arg3;
- (unsigned char)packageIdentifier;
- (long long)packageType;
- (void)prepareForDocumentReplacementWithSuccess:(bool)arg1 forSafeSave:(bool)arg2 originalURL:(id)arg3;
- (bool)reloadZipArchiveIfNeededWithURLImpl:(id)arg1 isLazyLoading:(bool)arg2 error:(id*)arg3;
- (void)setZipArchive:(id)arg1;
- (id)zipArchive;

@end
