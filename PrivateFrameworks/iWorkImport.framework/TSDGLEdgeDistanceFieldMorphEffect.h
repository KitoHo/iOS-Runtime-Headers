/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSDGLShader, TSDGLTextureInfo;

@interface TSDGLEdgeDistanceFieldMorphEffect : NSObject {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    struct { 
        double skew; 
        double skewOffset; 
        double scale; 
    } _incomingTextBounds;
    } _incomingTextureEdgeInsetsAdjustmentMatrix;
    TSDGLTextureInfo *_incomingTextureInfo;
    } _outgoingTextBounds;
    } _outgoingTextureEdgeInsetsAdjustmentMatrix;
    TSDGLTextureInfo *_outgoingTextureInfo;
    TSDGLShader *_shader;
    } _textureAdjustment;
    bool_didSetupTextureAdjustment;
    bool_didTeardown;
    bool_isTextStyleIdenticalExceptSize;
}

@property(readonly) TSDGLTextureInfo * incomingTextureInfo;
@property bool isTextStyleIdenticalExceptSize;
@property(readonly) TSDGLTextureInfo * outgoingTextureInfo;
@property(readonly) TSDGLShader * shader;

+ (void)didEndUsingShaders;
+ (void)willBeginUsingShaders;

- (void)dealloc;
- (id)incomingTextureInfo;
- (id)initWithOutgoingTR:(id)arg1 incomingTR:(id)arg2 GLState:(id)arg3 motionBlur:(bool)arg4 motionBlurIgnoreTextureOpacity:(bool)arg5;
- (id)initWithOutgoingTextureName:(unsigned int)arg1 outgoingTextureSize:(struct CGSize { double x1; double x2; })arg2 outgoingTextBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 outgoingColor:(struct { float x1; float x2; float x3; float x4; })arg4 incomingTextureName:(unsigned int)arg5 incomingTextureSize:(struct CGSize { double x1; double x2; })arg6 incomingTextBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg7 incomingColor:(struct { float x1; float x2; float x3; float x4; })arg8 GLState:(id)arg9 motionBlur:(bool)arg10 motionBlurIgnoreTextureOpacity:(bool)arg11;
- (bool)isTextStyleIdenticalExceptSize;
- (struct CGContext { }*)newContextFromTexture:(id)arg1;
- (id)outgoingTextureInfo;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })p_actualPixelBoundsOfTexturedRectangle:(id)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })p_affineTransformWithTextureAdjustment:(struct { double x1; double x2; double x3; })arg1 textureSize:(struct CGSize { double x1; double x2; })arg2;
- (double)p_errorFromApplyingTextureAdjustment:(struct { double x1; double x2; double x3; })arg1 toOutgoingScanlineCenters:(struct CGPoint { double x1; double x2; }*)arg2 outgoingScanlineZeroes:(struct CGPoint { double x1; double x2; }*)arg3 incomingScanlineCenters:(struct CGPoint { double x1; double x2; }*)arg4 incomingScanlineZeroes:(struct CGPoint { double x1; double x2; }*)arg5 samples:(unsigned long long)arg6;
- (double)p_errorFromApplyingTextureAdjustment:(struct { double x1; double x2; double x3; })arg1 toOutgoingValue:(double)arg2 incomingValue:(double)arg3 sample:(unsigned long long)arg4 sampleCount:(unsigned long long)arg5;
- (void)p_fillScanlineCenters:(struct CGPoint { double x1; double x2; }*)arg1 scanlineMinMaxZeroes:(struct CGPoint { double x1; double x2; }*)arg2 samples:(unsigned long long)arg3 fromTexture:(unsigned int)arg4 textureSize:(struct CGSize { double x1; double x2; })arg5;
- (void)setIsTextStyleIdenticalExceptSize:(bool)arg1;
- (void)setupIfNecessary;
- (void)setupShaderWithMorphPercent:(double)arg1 MVPMatrix:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg2 generateTextureMatrices:(bool)arg3;
- (void)setupShaderWithMorphPercent:(double)arg1 MVPMatrix:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg2 outgoingTextureMatrix:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg3 incomingTextureMatrix:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg4;
- (id)shader;
- (void)teardown;
- (struct { double x1; double x2; double x3; })textureMatchingTextureAdjustment;

@end
