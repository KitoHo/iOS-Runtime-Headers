/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSArray, TSCEFunctionSpec;

@interface TSCEFunctionArgumentSpec : NSObject {
    boolmDisallowCurrency;
    boolmDisallowDuration;
    boolmForceArrayMode;
    boolmIsInteger;
    boolmMaxInclusive;
    boolmMinInclusive;
    boolmReferenceForGeometryOnly;
    int mAccessorMode;
    int mArgumentContext;
    int mArgumentType;
    short mDefaultModeIndex;
    NSArray *mDisallowedTypes;
    TSCEFunctionSpec *mFunctionSpec;
    short mIndex;
    double mMaxValue;
    double mMinValue;
    struct vector<TSCEValue, std::__1::allocator<TSCEValue> > { struct TSCEValue {} *x1; struct TSCEValue {} *x2; struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue> > { struct TSCEValue {} *x_3_1_1; } x3; } *mModeValues;
    int mRangeContext;
}

@property(readonly) /* Warning: unhandled struct encoding: '{vector<TSCEValue' */ struct * modeValues; /* unknown property attribute:  std::__1::allocator<TSCEValue> >=^{TSCEValue}}} */
@property(readonly) short defaultModeIndex;
@property TSCEFunctionSpec * functionSpec;

+ (id)argumentSpecWithIndex:(short)arg1 type:(int)arg2 accessorMode:(int)arg3 disallowedTypes:(id)arg4 argumentContext:(int)arg5 rangeContext:(int)arg6 minValue:(double)arg7 minInclusive:(bool)arg8 maxValue:(double)arg9 maxInclusive:(bool)arg10 isInteger:(bool)arg11 disallowDuration:(bool)arg12 disallowCurrency:(bool)arg13 modeValues:(struct vector<TSCEValue, std::__1::allocator<TSCEValue> > { struct TSCEValue {} *x1; struct TSCEValue {} *x2; struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue> > { struct TSCEValue {} *x_3_1_1; } x3; }*)arg14 defaultModeIndex:(short)arg15 referenceForGeometryOnly:(bool)arg16 forceArrayMode:(bool)arg17;

- (int)accessorMode;
- (int)argumentContext;
- (void)dealloc;
- (short)defaultModeIndex;
- (bool)disallowCurrency;
- (bool)disallowDuration;
- (id)disallowedTypes;
- (bool)forceArrayMode;
- (id)functionSpec;
- (short)index;
- (long long)indexForModeBool:(bool)arg1;
- (long long)indexForModeNumber:(double)arg1;
- (long long)indexForModeString:(id)arg1;
- (long long)indexForModeValue:(struct TSCEValue { unsigned long long x1[88]; int x2; }*)arg1;
- (id)initArgumentSpecWithIndex:(short)arg1 type:(int)arg2 accessorMode:(int)arg3 disallowedTypes:(id)arg4 argumentContext:(int)arg5 rangeContext:(int)arg6 minValue:(double)arg7 minInclusive:(bool)arg8 maxValue:(double)arg9 maxInclusive:(bool)arg10 isInteger:(bool)arg11 disallowDuration:(bool)arg12 disallowCurrency:(bool)arg13 modeValues:(struct vector<TSCEValue, std::__1::allocator<TSCEValue> > { struct TSCEValue {} *x1; struct TSCEValue {} *x2; struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue> > { struct TSCEValue {} *x_3_1_1; } x3; }*)arg14 defaultModeIndex:(short)arg15 referenceForGeometryOnly:(bool)arg16 forceArrayMode:(bool)arg17;
- (bool)isInteger;
- (bool)isMode;
- (bool)isOptional;
- (id)localizedArgumentName;
- (id)localizedFunctionName;
- (id)localizedModeMenuItemStringForModeIndex:(short)arg1;
- (id)localizedModeNameForModeIndex:(short)arg1;
- (id)localizedModeToolTipStringForModeIndex:(short)arg1;
- (id)localizedToolTipString;
- (bool)maxInclusive;
- (double)maxValue;
- (bool)minInclusive;
- (double)minValue;
- (struct vector<TSCEValue, std::__1::allocator<TSCEValue> > { struct TSCEValue {} *x1; struct TSCEValue {} *x2; struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue> > { struct TSCEValue {} *x_3_1_1; } x3; }*)modeValues;
- (id)nativeSyntaxString;
- (id)nativeSyntaxStringForModeIndex:(short)arg1;
- (short)numModes;
- (int)preferredType;
- (int)rangeContext;
- (bool)referenceForGeometryOnly;
- (void)setFunctionSpec:(id)arg1;
- (bool)typeIsDisallowed:(int)arg1 value:(struct TSCEValue { unsigned long long x1[88]; int x2; }*)arg2;
- (struct TSCEValue { unsigned long long x1[88]; int x2; })valueForModeIndex:(short)arg1;

@end
