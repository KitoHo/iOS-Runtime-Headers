/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class <TSADocumentRootDelegate>, NSArray, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSSet, NSString, SFUCryptoKey, TSAAnnotationCache, TSAFunctionBrowserState, TSAShortcutController, TSCECalculationEngine, TSKViewState, TSTCustomFormatList;

@interface TSADocumentRoot : TSWPDocumentRoot <TSKImportExportDelegate> {
    TSAAnnotationCache *_annotationCache;
    NSArray *_buildVersionHistory;
    TSCECalculationEngine *_calculationEngine;
    NSString *_creationLanguage;
    unsigned long long _creationLanguageWritingDirection;
    <TSADocumentRootDelegate> *_delegate;
    SFUCryptoKey *_documentCacheDecryptionKey;
    NSObject<OS_dispatch_queue> *_documentCacheDecryptionKeyAccessQueue;
    long long _documentCacheOnceToken;
    TSAFunctionBrowserState *_functionBrowserState;
    int _needsToCaptureViewState;
    TSAShortcutController *_shortcutController;
    TSTCustomFormatList *_tablesCustomFormatList;
    NSString *_templateIdentifier;
    NSMutableDictionary *_upgradeState;
    TSKViewState *_viewState;
    NSMutableSet *_warnings;
    bool_hasPreUFFVersion;
    bool_isClosed;
    bool_needsMovieCompatibilityUpgrade;
}

@property(copy) NSArray * buildVersionHistory;
@property(copy,readonly) NSString * debugDescription;
@property(readonly) NSString * defaultDraftName;
@property <TSADocumentRootDelegate> * delegate;
@property(copy,readonly) NSString * description;
@property(getter=isDocumentEditedSinceLastSave,readonly) bool documentEditedSinceLastSave;
@property bool hasPreUFFVersion;
@property(readonly) unsigned long long hash;
@property(readonly) bool importingDesignDemoDoc;
@property(readonly) bool isBrowsingVersions;
@property(readonly) NSSet * missingFontWarningMessages;
@property(readonly) NSString * name;
@property bool needsMovieCompatibilityUpgrade;
@property(readonly) Class superclass;
@property(copy) NSString * templateIdentifier;
@property(readonly) TSKViewState * viewState;

+ (id)buildVersionHistoryPath;
+ (id)buildVersionHistoryPathPreUFF;
+ (void)localizeChartInfo:(id)arg1 withTemplateBundle:(id)arg2;
+ (void)localizeModelObject:(id)arg1 withTemplateBundle:(id)arg2;
+ (void)localizeTableInfo:(id)arg1 withTemplateBundle:(id)arg2;
+ (void)localizeTextStorage:(id)arg1 withTemplateBundle:(id)arg2;
+ (id)persistenceWarningsForData:(id)arg1 isReadable:(bool)arg2 isExternal:(bool)arg3;
+ (struct CGSize { double x1; double x2; })previewImageMaxSizeForType:(unsigned long long)arg1;
+ (struct CGSize { double x1; double x2; })previewImageSizeForType:(unsigned long long)arg1;
+ (unsigned long long)previewTypeForCurrentDevice;
+ (void)removeExistingPreviewsForDocumentAtPath:(id)arg1;
+ (id)scaledPreviewImageForType:(unsigned long long)arg1 scalableImage:(id)arg2;
+ (id)supportedPreviewImageExtensions;
+ (void)writePreviewImage:(id)arg1 group:(id)arg2 queue:(id)arg3 dataConsumerProvider:(id)arg4 completion:(id)arg5;
+ (void)writePreviewImage:(id)arg1 toPath:(id)arg2 withIntermediateDirectories:(bool)arg3 name:(id)arg4 group:(id)arg5 queue:(id)arg6 completion:(id)arg7;
+ (bool)writePreviewImagesToPackageDataWriter:(id)arg1 scalableImage:(id)arg2 group:(id)arg3 queue:(id)arg4;
+ (bool)writePreviewImagesToPackageDataWriter:(id)arg1 scalableImage:(id)arg2;
+ (bool)writePreviewImagesToPath:(id)arg1 scalableImage:(id)arg2 group:(id)arg3 queue:(id)arg4;
+ (bool)writePreviewImagesToPath:(id)arg1 scalableImage:(id)arg2;

- (void)addWarning:(id)arg1;
- (id)additionalDocumentPropertiesForWrite;
- (id)annotationCache;
- (void)blockForRecalcWithTimeout:(double)arg1;
- (id)buildVersionHistory;
- (id)calculationEngine;
- (id)captureViewState;
- (void)captureViewStateIfNeeded;
- (void)changeDocumentCacheFileProtection:(id)arg1;
- (id)commandForPropagatingPresetChangeCommand:(id)arg1 alwaysPreserveAppearance:(bool)arg2;
- (long long)compareLocationSortingInfo:(id)arg1 toSortingInfo:(id)arg2;
- (id)consolidatedDocumentWarningsFromWarnings:(id)arg1;
- (id)createViewStateRoot;
- (id)creationLanguage;
- (id)customFormatList;
- (id)dataFromDocumentCachePath:(id)arg1;
- (void)dealloc;
- (id)defaultDraftName;
- (id)delegate;
- (void)didDownloadDocumentResources:(id)arg1 failedOrCancelledDocumentResources:(id)arg2 error:(id)arg3;
- (void)didEnterBackground;
- (void)didSaveWithEncryptionChange;
- (id)documentCachePath;
- (void)documentCacheWasInvalidated;
- (void)documentDidLoad;
- (void)documentDidSave;
- (void)enumerateStylesheetsUsingBlock:(id)arg1;
- (bool)exportToPath:(id)arg1 exporter:(id)arg2 delegate:(id)arg3 error:(id*)arg4;
- (bool)exportToPath:(id)arg1 exporter:(id)arg2 error:(id*)arg3;
- (void)fulfillPasteboardPromises;
- (id)functionBrowserState;
- (bool)hasICloudConflict;
- (bool)hasPreUFFVersion;
- (void)importerDidFinish:(id)arg1;
- (id)init;
- (id)initWithContext:(id)arg1;
- (void)initializeForImport;
- (void)insertTextPresetDisplayItemsPreservingGrouping:(id)arg1 insertAtBeginningOfGroup:(bool)arg2;
- (void)invalidateViewState;
- (bool)isDocumentEditedSinceLastSave;
- (bool)isMultiPageForQuickLook;
- (void)loadFromArchive:(const struct DocumentArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct DocumentArchive {} *x3; struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x5; struct Reference {} *x6; struct Reference {} *x7; struct Reference {} *x8; struct Reference {} *x9; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x10; struct Reference {} *x11; struct Reference {} *x12; boolx13; int x14; unsigned int x15[1]; }*)arg1 unarchiver:(id)arg2;
- (id)missingFontWarningMessages;
- (id)name;
- (id)namedTextStyles;
- (bool)needsMovieCompatibilityUpgrade;
- (id)newExporterForType:(id)arg1 options:(id)arg2 preferredType:(id*)arg3;
- (struct CGImageSource { }*)newImageSourceForDocumentCachePath:(id)arg1;
- (void)pUpgradeHyperlinks;
- (void)pUpgradeHyperlinksInStorage:(id)arg1;
- (id)p_documentCacheDecryptionKey;
- (id)p_documentCacheDecryptionKeyAccessQueue;
- (void)p_initializeDocumentCacheIfNeeded;
- (id)p_parseNumberOutOfBasename:(id)arg1 hasNumber:(bool*)arg2 number:(unsigned long long*)arg3;
- (void)p_registerAllFormulasAfterImport;
- (void)p_removeStyles:(id)arg1;
- (void)p_replaceStyle:(id)arg1 andChildrenWithVariationOfStyle:(id)arg2;
- (void)p_replaceStyles:(id)arg1 andChildrenWithVariationOfStyle:(id)arg2;
- (void)p_updateBuildVersionHistoryWithVersionOfTemplateBundle:(id)arg1;
- (void)p_updateCreationLanguage;
- (id)packageDataForWrite;
- (void)performHyperlinkUpgradesIfNecessaryForVersion:(unsigned long long)arg1;
- (void)performStylesheetUpdatesIfNecessaryForVersion:(unsigned long long)arg1;
- (void)prepareForSavingAsTemplate;
- (void)prepareNewDocumentWithTemplateBundle:(id)arg1;
- (void)prepareToGeneratePreview;
- (id)previewImage;
- (id)previewImageForSize:(struct CGSize { double x1; double x2; })arg1;
- (id)protected_defaultTextPresetOrdering;
- (id)readBuildVersionHistoryFromDiskHasPreUFFVersion:(bool)arg1;
- (id)referencedStylesOfClass:(Class)arg1;
- (void)removeWarning:(id)arg1;
- (void)resumeBackgroundActivities;
- (void)resumeThumbnailing;
- (void)saveToArchive:(struct DocumentArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct DocumentArchive {} *x3; struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x5; struct Reference {} *x6; struct Reference {} *x7; struct Reference {} *x8; struct Reference {} *x9; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x10; struct Reference {} *x11; struct Reference {} *x12; boolx13; int x14; unsigned int x15[1]; }*)arg1 archiver:(id)arg2;
- (void)setAnnotationCache:(id)arg1;
- (void)setBuildVersionHistory:(id)arg1;
- (void)setCalculationEngine:(id)arg1;
- (void)setCreationLanguage:(id)arg1;
- (void)setCustomFormatList:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFunctionBrowserState:(id)arg1;
- (void)setHasPreUFFVersion:(bool)arg1;
- (void)setNeedsMovieCompatibilityUpgrade:(bool)arg1;
- (void)setShortcutController:(id)arg1;
- (void)setTemplateIdentifier:(id)arg1;
- (id)shortcutController;
- (bool)shouldAllowDrawableInGroups:(id)arg1 forImport:(bool)arg2;
- (void)stashUpgradeState:(const struct DocumentArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct DocumentArchive {} *x3; struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x5; struct Reference {} *x6; struct Reference {} *x7; struct Reference {} *x8; struct Reference {} *x9; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x10; struct Reference {} *x11; struct Reference {} *x12; boolx13; int x14; unsigned int x15[1]; }*)arg1 unarchiver:(id)arg2;
- (void)suspendBackgroundActivities;
- (void)suspendThumbnailing;
- (id)templateIdentifier;
- (id)uniqueDocumentCachePathForProposedPath:(id)arg1;
- (void)updateViewStateWithRoot:(id)arg1;
- (void)updateWritingDirection:(unsigned long long)arg1;
- (id)upgradeState;
- (void)upgradeTextStylesForUnity;
- (void)upgradeTextStylesForUnityPlusFromFileFormatVersion:(unsigned long long)arg1;
- (void)upgradeTextboxPresets;
- (id)viewState;
- (id)warningLocationDescriptionForAffectedObjects:(id)arg1 sortingInfo:(id*)arg2;
- (id)warnings;
- (id)warningsByCombiningSortedWarnings:(id)arg1 withWarnings:(id)arg2;
- (void)willClose;
- (void)willEnterForeground;
- (bool)writeData:(id)arg1 atDocumentCachePath:(id)arg2;
- (unsigned long long)writingDirection;

@end
