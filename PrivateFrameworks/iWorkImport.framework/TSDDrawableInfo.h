/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class KNAbstractSlide, KNBuild, KNSlide, NSArray, NSObject<TSDContainerInfo>, NSString, NSURL, TSDDefaultPartitioner, TSDDrawableComment, TSDExteriorTextWrap, TSDInfoGeometry, TSPLazyReference, TSPObject<TSDOwningAttachment>, TSSPropertySetChangeDetails;

@interface TSDDrawableInfo : TSPObject <TSDChangeableInfo, TSKDocumentObject, TSKTransformableObject, TSKSearchable> {
    boolmAspectRatioLocked;
    boolmLocked;
    NSString *mAccessibilityDescription;
    TSSPropertySetChangeDetails *mChanges;
    TSDDrawableComment *mComment;
    TSDDefaultPartitioner *mDefaultPartitioner;
    TSDExteriorTextWrap *mExteriorTextWrap;
    TSDInfoGeometry *mGeometry;
    NSURL *mHyperlinkURL;
    TSPObject<TSDOwningAttachment> *mOwningAttachment;
    NSObject<TSDContainerInfo> *mParentInfo;
    TSPLazyReference *mParentInfoReference;
}

@property(readonly) KNAbstractSlide * abstractSlide;
@property(copy) NSString * accessibilityDescription;
@property(readonly) NSArray * actionBuilds;
@property(readonly) NSArray * activeBuildChunks;
@property(getter=isAnchoredToText,readonly) bool anchoredToText;
@property bool aspectRatioLocked;
@property(getter=isAttachedToBodyText,readonly) bool attachedToBodyText;
@property(readonly) NSArray * buildChunks;
@property(readonly) unsigned long long buildCount;
@property(readonly) KNBuild * buildIn;
@property(readonly) KNBuild * buildOut;
@property(readonly) NSArray * builds;
@property(readonly) bool canSizeBeChangedIncrementally;
@property(retain) TSDDrawableComment * comment;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) Class editorClass;
@property(copy) TSDExteriorTextWrap * exteriorTextWrap;
@property(getter=isFloatingAboveText,readonly) bool floatingAboveText;
@property(copy) TSDInfoGeometry * geometry;
@property(readonly) NSArray * ghostInfos;
@property(readonly) bool hasActionBuilds;
@property(readonly) bool hasBuilds;
@property(readonly) unsigned long long hash;
@property(copy) NSURL * hyperlinkURL;
@property(getter=isInlineWithText,readonly) bool inlineWithText;
@property(readonly) bool isUserModifiable;
@property(getter=isLockable,readonly) bool lockable;
@property(getter=isLocked) bool locked;
@property bool matchesObjectPlaceholderGeometry;
@property TSPObject<TSDOwningAttachment> * owningAttachment;
@property(readonly) TSPObject<TSDOwningAttachment> * owningAttachmentNoRecurse;
@property NSObject<TSDContainerInfo> * parentInfo;
@property(readonly) KNSlide * slide;
@property(readonly) Class superclass;
@property(readonly) bool supportsAttachedComments;
@property(readonly) bool supportsHyperlinks;

+ (bool)canPartition;
+ (void)load;
+ (bool)needsObjectUUID;
+ (void)setShouldPartitionByDefault:(bool)arg1;

- (id)abstractSlide;
- (id)accessibilityDescription;
- (id)actionBuilds;
- (id)activeBuildChunks;
- (id)activeBuildChunksForAnimationType:(int)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)animationFilters;
- (bool)aspectRatioLocked;
- (void)beginCollectingChanges;
- (id)buildChunks;
- (unsigned long long)buildCount;
- (id)buildIn;
- (id)buildOut;
- (id)builds;
- (bool)canAnchor;
- (bool)canChangeWrapType;
- (bool)canSizeBeChangedIncrementally;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 byGlyphStyle:(int)arg2 animationFilter:(id)arg3;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (void)coalesceChanges:(id)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4;
- (id)commandToFlipWithOrientation:(int)arg1;
- (id)comment;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })computeFullTransform;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })computeLayoutFullTransform;
- (id)containingGroup;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)descriptionForPasteboard;
- (id)descriptionForPasteboardWithSource:(id)arg1;
- (void)didCopy;
- (void)didUngroupWithCommand:(id)arg1;
- (Class)editorClass;
- (int)elementKind;
- (id)endCollectingChanges;
- (id)exteriorTextWrap;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })fullTransformInRoot;
- (id)geometry;
- (id)ghostInfos;
- (bool)hasActionBuilds;
- (bool)hasBuilds;
- (id)hyperlinkURL;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (bool)isAnchoredToText;
- (bool)isAttachedToBodyText;
- (bool)isFloatingAboveText;
- (bool)isInlineWithText;
- (bool)isLockable;
- (bool)isLocked;
- (bool)isThemeContent;
- (bool)isUserModifiable;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct DrawableArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct GeometryArchive {} *x3; struct Reference {} *x4; struct ExteriorTextWrapArchive {} *x5; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x6; struct Reference {} *x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x8; boolx9; boolx10; int x11; unsigned int x12[1]; }*)arg1 unarchiver:(id)arg2;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (bool)matchesObjectPlaceholderGeometry;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)objectUUIDPath;
- (id)owningAttachment;
- (id)owningAttachmentNoRecurse;
- (id)parentInfo;
- (id)partitioner;
- (void)performBlockWithTemporaryLayout:(id)arg1;
- (id)presetKind;
- (Class)repClass;
- (bool)reverseChunkingIsSupported;
- (void)saveToArchive:(struct DrawableArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct GeometryArchive {} *x3; struct Reference {} *x4; struct ExteriorTextWrapArchive {} *x5; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x6; struct Reference {} *x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x8; boolx9; boolx10; int x11; unsigned int x12[1]; }*)arg1 archiver:(id)arg2;
- (id)searchForAnnotationsWithHitBlock:(id)arg1;
- (void)setAccessibilityDescription:(id)arg1;
- (void)setAspectRatioLocked:(bool)arg1;
- (void)setComment:(id)arg1;
- (void)setExteriorTextWrap:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)setHyperlinkURL:(id)arg1;
- (void)setInsertionCenterPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setLocked:(bool)arg1;
- (void)setMatchesObjectPlaceholderGeometry:(bool)arg1;
- (void)setOwningAttachment:(id)arg1;
- (void)setParentInfo:(id)arg1;
- (void)setParentInfoDuringUnarchiving:(id)arg1 fromPasteboard:(bool)arg2;
- (id)slide;
- (bool)supportsAttachedComments;
- (bool)supportsHyperlinks;
- (bool)swizzled_matchesObjectPlaceholderGeometry;
- (void)swizzled_setMatchesObjectPlaceholderGeometry:(bool)arg1;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (id)textureDeliveryStylesLocalized:(bool)arg1 animationFilter:(id)arg2;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transformInRoot;
- (struct CGPoint { double x1; double x2; })transformableObjectAnchorPoint;
- (id)transformedGeometryWithTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1 inBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)uuidPathPrefixComponentsProvider;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)willChangeProperties:(id)arg1;
- (void)willChangeProperty:(int)arg1;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (void)willGroupWithCommand:(id)arg1;

@end
