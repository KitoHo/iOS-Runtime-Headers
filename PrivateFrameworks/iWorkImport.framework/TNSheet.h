/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSArray, NSMutableArray, NSObject<TSDContainerInfo>, NSString, TNDocumentRoot, TSDGuideStorage, TSDInfoGeometry, TSPObject<TSDOwningAttachment>, TSWPStorage;

@interface TNSheet : TSPObject <TSKDocumentObject, TSKSearchTarget, TSKModel, TSCEResolverContainer, TSDDrawableContainerInfo, TSWPHeaderFooterProvider> {
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    double _pageFooterInset;
    double _pageHeaderInset;
    } _printMargins;
    long long _startPageNumber;
    bool_usingStartPageNumber;
    boolmInDocument;
    boolmInPortraitPageOrientation;
    boolmIsAutofitOn;
    boolmShowPageNumbers;
    boolmUsesSingleHeaderFooter;
    NSMutableArray *mChildInfos;
    double mContentScale;
    TSWPStorage *mHeaderFooters[2][3];
    NSString *mName;
    int mPageOrder;
    unsigned int mTableNameCounter;
    TSDGuideStorage *mUserDefinedGuideStorage;
}

@property(readonly) NSArray * alignmentGuides;
@property(readonly) NSArray * alignmentGuidesForEditing;
@property(getter=isAnchoredToText,readonly) bool anchoredToText;
@property(getter=isAttachedToBodyText,readonly) bool attachedToBodyText;
@property double contentScale;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) TNDocumentRoot * documentRoot;
@property(getter=isFloatingAboveText,readonly) bool floatingAboveText;
@property(readonly) NSArray * footerStorages;
@property(copy) TSDInfoGeometry * geometry;
@property(readonly) unsigned long long hash;
@property(readonly) NSArray * headerStorages;
@property bool inPortraitPageOrientation;
@property(getter=isInlineWithText,readonly) bool inlineWithText;
@property bool isAutofitOn;
@property bool matchesObjectPlaceholderGeometry;
@property(retain) NSString * name;
@property TSPObject<TSDOwningAttachment> * owningAttachment;
@property(readonly) TSPObject<TSDOwningAttachment> * owningAttachmentNoRecurse;
@property double pageFooterInset;
@property double pageHeaderInset;
@property int pageOrder;
@property NSObject<TSDContainerInfo> * parentInfo;
@property struct UIEdgeInsets { double x1; double x2; double x3; double x4; } printMargins;
@property bool showPageNumbers;
@property long long startPageNumber;
@property(readonly) Class superclass;
@property(retain) TSDGuideStorage * userDefinedGuideStorage;
@property bool usesSingleHeaderFooter;
@property(getter=isUsingStartPageNumber) bool usingStartPageNumber;

+ (bool)needsObjectUUID;
+ (id)sheetForSelectionModel:(id)arg1 outIsPaginated:(bool*)arg2;

- (id).cxx_construct;
- (void)addChildInfo:(id)arg1;
- (id)alignmentGuides;
- (id)alignmentGuidesForEditing;
- (double)bodyWidth;
- (bool)canMoveDrawables:(id)arg1 toIndexes:(id)arg2;
- (id)chartAndTableInfos;
- (id)childEnumerator;
- (id)childInfos;
- (id)childSearchTargets;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (double)contentScale;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)deletionRewriteCommandForAllTables;
- (id)description;
- (id)documentRoot;
- (void)enumerateHeaderFooterStoragesWithBlock:(id)arg1;
- (id)footerStorages;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (id)geometry;
- (bool)hasReferenceToTables:(id)arg1;
- (id)headerFooter:(int)arg1 fragmentAtIndex:(int)arg2;
- (id)headerFooterFragmentEnumerator;
- (int)headerFooterTypeForModel:(id)arg1;
- (int)headerFragmentIndexForModel:(id)arg1;
- (id)headerStorages;
- (void)i_importHeadersFooters:(id)arg1 headerType:(int)arg2 useSingleHeaderFooter:(bool)arg3;
- (id)i_newHeaderFooterStorage;
- (bool)inPortraitPageOrientation;
- (id)initFromArchive:(const struct SheetArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x3; struct RepeatedPtrField<TSP::Reference> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; boolx5; boolx6; boolx7; boolx8; float x9; struct EdgeInsetsArchive {} *x10; int x11; int x12; float x13; float x14; struct Reference {} *x15; struct Reference {} *x16; struct Reference {} *x17; struct RepeatedPtrField<TSP::Reference> { void **x_18_1_1; int x_18_1_2; int x_18_1_3; int x_18_1_4; } x18; struct RepeatedPtrField<TSP::Reference> { void **x_19_1_1; int x_19_1_2; int x_19_1_3; int x_19_1_4; } x19; boolx20; boolx21; int x22; unsigned int x23[1]; }*)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertDrawableInfo:(id)arg1 atIndex:(unsigned long long)arg2 context:(id)arg3;
- (void)insertDrawableInfo:(id)arg1 context:(id)arg2;
- (void)insertDrawableInfos:(id)arg1 atIndex:(unsigned long long)arg2 context:(id)arg3;
- (void)insertDrawableInfos:(id)arg1 context:(id)arg2;
- (bool)isAnchoredToText;
- (bool)isAttachedToBodyText;
- (bool)isAutofitOn;
- (bool)isFloatingAboveText;
- (bool)isForm;
- (bool)isHeaderFooterEmpty:(int)arg1 fragmentAtIndex:(int)arg2;
- (bool)isHeaderFooterEmpty:(int)arg1;
- (bool)isInlineWithText;
- (bool)isThemeContent;
- (bool)isUsingStartPageNumber;
- (Class)layoutClass;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (void)moveDrawables:(id)arg1 toIndexes:(id)arg2;
- (id)name;
- (unsigned int)nextUntitledResolverIndex;
- (id)owningAttachment;
- (id)owningAttachmentNoRecurse;
- (void)p_createHeadersFooters:(int)arg1 stylesheet:(id)arg2 mayAlreadyExist:(bool)arg3;
- (void)p_dolcDispatch:(id)arg1 skippingTextBoxes:(bool)arg2;
- (id)p_newHeaderFooterStorageWithStylesheet:(id)arg1;
- (void)p_setupHeadersFooters;
- (id)p_storagesForHeaderType:(int)arg1;
- (double)pageFooterInset;
- (double)pageHeaderInset;
- (int)pageOrder;
- (id)parentInfo;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })printMargins;
- (void)removeChildInfo:(id)arg1;
- (void)removeDrawableInfo:(id)arg1;
- (void)removeDrawableInfos:(id)arg1;
- (Class)repClass;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (id)resolverMatchingName:(id)arg1;
- (bool)resolverNameIsUsed:(id)arg1;
- (id)resolversMatchingPrefix:(id)arg1;
- (void)saveToArchive:(struct SheetArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x3; struct RepeatedPtrField<TSP::Reference> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; boolx5; boolx6; boolx7; boolx8; float x9; struct EdgeInsetsArchive {} *x10; int x11; int x12; float x13; float x14; struct Reference {} *x15; struct Reference {} *x16; struct Reference {} *x17; struct RepeatedPtrField<TSP::Reference> { void **x_18_1_1; int x_18_1_2; int x_18_1_3; int x_18_1_4; } x18; struct RepeatedPtrField<TSP::Reference> { void **x_19_1_1; int x_19_1_2; int x_19_1_3; int x_19_1_4; } x19; boolx20; boolx21; int x22; unsigned int x23[1]; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setChildInfos:(id)arg1;
- (void)setContentScale:(double)arg1;
- (void)setGeometry:(id)arg1;
- (void)setInPortraitPageOrientation:(bool)arg1;
- (void)setIsAutofitOn:(bool)arg1;
- (void)setName:(id)arg1;
- (void)setOwningAttachment:(id)arg1;
- (void)setPageFooterInset:(double)arg1;
- (void)setPageHeaderInset:(double)arg1;
- (void)setPageOrder:(int)arg1;
- (void)setParentInfo:(id)arg1;
- (void)setPrintMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setShowPageNumbers:(bool)arg1;
- (void)setStartPageNumber:(long long)arg1;
- (void)setUserDefinedGuideStorage:(id)arg1;
- (void)setUsesSingleHeaderFooter:(bool)arg1;
- (void)setUsingStartPageNumber:(bool)arg1;
- (bool)showPageNumbers;
- (long long)startPageNumber;
- (id)tableInfoForName:(id)arg1 caseSensitive:(bool)arg2;
- (id)tableInfos;
- (id)userDefinedGuideStorage;
- (bool)usesSingleHeaderFooter;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;

@end
