/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class <TSDRepTrackerDelegate>, CAShapeLayer, NSString, TSDRep;

@interface TSDRepRotateTracker : NSObject <TSDDecorator, TSDLayoutManipulatingTracker, TSDRepTracker> {
    struct CGPoint { 
        double x; 
        double y; 
    boolmDelegateRespondsToContinuedDragging;
    boolmDidBeginRotation;
    boolmHaveSproingedHUD;
    boolmIsInspectorDrivenTracking;
    boolmMovedMinimumDistance;
    boolmShouldShowHUD;
    } mCenterForRotation;
    double mCurrentLogicalAngleInDegrees;
    double mCurrentPhysicalAngleInDegrees;
    <TSDRepTrackerDelegate> *mDelegate;
    CAShapeLayer *mGuideLayer;
    double mOriginalAngleForRotationInDegrees;
    double mOriginalAngleInDegrees;
    TSDRep *mOriginalNonFloatingRep;
    double mPreviousSnap;
    TSDRep *mRep;
    double mRotateDeltaInRadians;
    double mSnapThreshold;
}

@property struct CGPoint { double x1; double x2; } centerForRotation;
@property(readonly) double currentLogicalAngleInDegrees;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned long long hash;
@property bool isInspectorDrivenTracking;
@property(readonly) double originalAngleInDegrees;
@property(retain) TSDRep * rep;
@property bool shouldShowHUD;
@property double snapThreshold;
@property(readonly) Class superclass;

- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)addRotateDelta:(double)arg1;
- (void)animationDidStop:(id)arg1 finished:(bool)arg2;
- (struct CGPoint { double x1; double x2; })centerForRotation;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (void)commitChangesForReps:(id)arg1;
- (double)currentLogicalAngleInDegrees;
- (void)dealloc;
- (id)decoratorOverlayLayers;
- (id)initWithRep:(id)arg1;
- (bool)isInspectorDrivenTracking;
- (bool)operationShouldBeDynamic;
- (double)originalAngleInDegrees;
- (void)p_begin;
- (void)p_hideGuideLayer;
- (void)p_hideHUD;
- (void)p_makeSiblingRepsPerformBlock:(id)arg1;
- (bool)p_shouldApplyRotateToSiblingsOfRep;
- (void)p_sproingHUD;
- (void)p_updateGuideLayerWithAngle:(double)arg1 didSnap:(bool)arg2;
- (void)p_updateHUDWithAngle:(double)arg1;
- (id)rep;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })rotateTransform;
- (void)setCenterForRotation:(struct CGPoint { double x1; double x2; })arg1;
- (void)setIsInspectorDrivenTracking:(bool)arg1;
- (void)setRep:(id)arg1;
- (void)setShouldShowHUD:(bool)arg1;
- (void)setSnapThreshold:(double)arg1;
- (bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1;
- (bool)shouldShowHUD;
- (double)snapThreshold;
- (bool)supportsAlignmentGuides;

@end
