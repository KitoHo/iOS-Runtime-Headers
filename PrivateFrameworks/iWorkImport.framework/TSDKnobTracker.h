/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class TSDAutoscroll, TSDInteractiveCanvasController, TSDKnob, TSDRep;

@interface TSDKnobTracker : NSObject <TSDLayoutManipulatingTracker> {
    struct CGPoint { 
        double x; 
        double y; 
    struct CGPoint { 
        double x; 
        double y; 
    boolmDidBegin;
    boolmDidDrag;
    boolmDragEnding;
    boolmEndedOperationDueToESC;
    boolmIsInspectorDrivenTracking;
    TSDAutoscroll *mAutoscroll;
    } mCurrentPosition;
    TSDKnob *mKnob;
    } mKnobOffset;
    TSDRep *mRep;
}

@property(retain) TSDAutoscroll * autoscroll;
@property struct CGPoint { double x1; double x2; } currentPosition;
@property(readonly) double delay;
@property(readonly) bool didBegin;
@property bool didDrag;
@property bool dragEnding;
@property(readonly) bool endedOperationDueToESC;
@property(readonly) TSDInteractiveCanvasController * icc;
@property bool isInspectorDrivenTracking;
@property(retain) TSDKnob * knob;
@property(readonly) struct CGPoint { double x1; double x2; } knobOffset;
@property(retain) TSDRep * rep;

- (bool)allowHUDToDisplay;
- (int)allowedAutoscrollDirections;
- (id)autoscroll;
- (void)autoscrollWillNotStart;
- (void)beginMovingKnob;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (void)commitChangesForReps:(id)arg1;
- (struct CGPoint { double x1; double x2; })convertKnobPositionFromUnscaledCanvas:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertKnobPositionToUnscaledCanvas:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })currentBoundsForStandardKnobs;
- (struct CGPoint { double x1; double x2; })currentPosition;
- (void)dealloc;
- (double)delay;
- (bool)didBegin;
- (bool)didDrag;
- (bool)dragEnding;
- (unsigned long long)enabledKnobMask;
- (void)endMovingKnob;
- (bool)endedOperationDueToESC;
- (void)i_resetCurrentPositionToKnobPositionIfAppropriate;
- (void)i_setKnobOffset:(struct CGPoint { double x1; double x2; })arg1;
- (id)icc;
- (id)initWithRep:(id)arg1 knob:(id)arg2;
- (bool)isInspectorDrivenTracking;
- (id)knob;
- (struct CGPoint { double x1; double x2; })knobOffset;
- (void)moveKnobToCanvasPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)moveKnobToRepPosition:(struct CGPoint { double x1; double x2; })arg1;
- (bool)operationShouldBeDynamic;
- (id)rep;
- (void)setAutoscroll:(id)arg1;
- (void)setCurrentPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDidDrag:(bool)arg1;
- (void)setDragEnding:(bool)arg1;
- (void)setIsInspectorDrivenTracking:(bool)arg1;
- (void)setKnob:(id)arg1;
- (void)setRep:(id)arg1;
- (bool)shouldEndMovingKnobOnESC;
- (bool)shouldHideOtherKnobs;
- (bool)shouldHideSelectionHighlight;
- (bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1;
- (bool)shouldUseKnobOffset;
- (bool)supportsAlignmentGuides;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transformInRootForStandardKnobs;
- (double)unscaledStartAutoscrollThreshold;
- (void)updateAfterAutoscroll:(id)arg1;
- (bool)wantsAutoscroll;
- (void)willEndMovingKnobDueToESC;

@end
