/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class <TSPObjectContextDelegate>, NSData, NSHashTable, NSMapTable, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSProgress, NSRecursiveLock, NSString, NSURL, NSUUID, SFUCryptoKey, TSPComponentManager, TSPDataManager, TSPDocumentProperties, TSPDocumentResourceDataProvider, TSPDocumentResourceManager, TSPDocumentRevision, TSPDocumentSaveOperationState, TSPObject, TSPObjectContainer, TSPObjectContext, TSPObjectUUIDMap, TSPPackage, TSPPackageWriteCoordinator, TSPSupportManager, TSUTemporaryDirectory;

@interface TSPObjectContext : NSObject <TSPFileCoordinatorDelegate, TSPObjectDelegate, TSPLazyReferenceDelegate, TSPSupportDirectoryDelegate, TSPDocumentResourceDownloader, TSPPassphraseConsumer> {
    struct hash_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *> > > { 
        struct __hash_table<std::__1::pair<const long long, NSMutableArray *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, NSMutableArray *>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *> > > { 
                    struct __hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *> { 
                    struct __hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, NSMutableArray *>, TSP::IdentifierHash, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    struct { 
        unsigned int delegateRespondsToAdditionalDocumentPropertiesForWrite : 1; 
        unsigned int delegateRespondsToDocumentPasswordHintForWrite : 1; 
        unsigned int delegateRespondsToPackageDataForWrite : 1; 
        unsigned int delegateRespondsToAreNewExternalReferencesToDataAllowed : 1; 
        unsigned int delegateRespondsToAreExternalReferencesToDataAllowedAtURL : 1; 
        unsigned int delegateRespondsToBaseUUIDForObjectUUID : 1; 
        unsigned int delegateRespondsToPreserveDocumentRevisionIdentifierForSequenceZero : 1; 
        unsigned int delegateRespondsToIsEstimatedDocumentDataSizeNotificationEnabled : 1; 
        unsigned int delegateRespondsToDidChangeEstimatedDocumentDataSize : 1; 
        unsigned int delegateRespondsToFilePresenter : 1; 
        unsigned int delegateRespondsToSupportDirectoryURL : 1; 
        unsigned int delegateRespondsToIgnoreDocumentSupport : 1; 
        unsigned int delegateRespondsToIsDocumentSupportTemporary : 1; 
    TSPComponentManager *_componentManager;
    TSPDataManager *_dataManager;
    SFUCryptoKey *_decryptionKey;
    <TSPObjectContextDelegate> *_delegate;
    TSPObject *_documentObject;
    TSPObjectContainer *_documentObjectContainer;
    TSPPackage *_documentPackage;
    NSString *_documentPasswordHint;
    TSPDocumentProperties *_documentProperties;
    TSPDocumentResourceDataProvider *_documentResourceDataProvider;
    NSObject<OS_dispatch_queue> *_documentResourceDataProviderQueue;
    TSPDocumentResourceManager *_documentResourceManager;
    TSPDocumentRevision *_documentRevision;
    NSObject<OS_dispatch_queue> *_documentStateQueue;
    NSURL *_documentURL;
    } _flags;
    TSPDocumentResourceDataProvider *_gilligan_documentResourceDataProvider;
    long long _lastObjectIdentifier;
    } _loadObservers;
    NSObject<OS_dispatch_queue> *_loadObserversQueue;
    unsigned int _mode;
    int _modifyObjectCount;
    long long _modifyObjectToken;
    NSProgress *_nextSaveProgress;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    NSHashTable *_objectModifyDelegates;
    TSPObjectUUIDMap *_objectUUIDMap;
    NSMapTable *_objects;
    NSObject<OS_dispatch_queue> *_objectsQueue;
    NSObject<OS_dispatch_group> *_outstandingReadsGroup;
    TSPPackageWriteCoordinator *_packageWriteCoordinator;
    NSData *_passwordVerifier;
    NSObject<OS_dispatch_group> *_pendingEndSaveGroup;
    long long _preferredPackageType;
    NSRecursiveLock *_readLock;
    NSObject<OS_dispatch_queue> *_runLoadObserversForKnownObjectQueue;
    NSObject<OS_dispatch_queue> *_runLoadObserversQueue;
    TSPDocumentSaveOperationState *_saveOperationState;
    unsigned long long _saveToken;
    NSString *_savedPassphrase;
    TSPSupportManager *_supportManager;
    TSPObject *_supportObject;
    TSPObjectContainer *_supportObjectContainer;
    TSPPackage *_supportPackage;
    NSURL *_supportURL;
    TSPPackageWriteCoordinator *_supportWriteCoordinator;
    TSUTemporaryDirectory *_temporaryDirectory;
    NSObject<OS_dispatch_queue> *_temporaryDirectoryQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
    bool_isWaitingForEndSave;
    bool_shouldSavePassphrase;
}

@property(readonly) bool areNewExternalReferencesToDataAllowed;
@property(readonly) TSPComponentManager * componentManager;
@property(readonly) TSPObjectContext * context;
@property(readonly) TSPDataManager * dataManager;
@property(copy,readonly) NSString * debugDescription;
@property(readonly) SFUCryptoKey * decryptionKey;
@property <TSPObjectContextDelegate> * delegate;
@property(copy,readonly) NSString * description;
@property(readonly) TSPObject * documentObject;
@property(retain) TSPObjectContainer * documentObjectContainer;
@property(readonly) TSPPackage * documentPackage;
@property(readonly) NSString * documentPasswordHint;
@property(readonly) TSPDocumentProperties * documentProperties;
@property(readonly) TSPDocumentResourceManager * documentResourceManager;
@property(retain) TSPDocumentRevision * documentRevision;
@property(readonly) NSURL * documentURL;
@property(readonly) NSUUID * documentUUID;
@property(readonly) unsigned long long estimatedDocumentDataSize;
@property(readonly) long long estimatedDownloadSize;
@property(retain) TSPDocumentResourceDataProvider * gilligan_documentResourceDataProvider;
@property(readonly) unsigned long long hash;
@property(readonly) bool ignoreDocumentResourcesWhileReading;
@property(readonly) bool ignoreDocumentSupport;
@property(readonly) bool ignoreUnknownContentWhileReading;
@property(readonly) bool ignoreVersionCheckingWhileReading;
@property(readonly) bool isDocumentModified;
@property(readonly) bool isDocumentSupportTemporary;
@property(readonly) bool isEstimatedDownloadSizePrecise;
@property(readonly) bool isPasswordProtected;
@property(readonly) bool isSupportModified;
@property(readonly) NSData * keychainGenericItem;
@property long long lastObjectIdentifier;
@property(readonly) bool needsDownload;
@property(readonly) long long packageType;
@property(readonly) NSString * passphraseHint;
@property(readonly) NSData * passwordVerifier;
@property long long preferredPackageType;
@property(readonly) unsigned long long saveToken;
@property(readonly) NSString * service;
@property(readonly) Class superclass;
@property(readonly) TSPSupportManager * supportManager;
@property(retain) TSPObject * supportObject;
@property(retain) TSPObjectContainer * supportObjectContainer;
@property(readonly) TSPPackage * supportPackage;
@property(readonly) NSUUID * versionUUID;

+ (bool)dumpMessagesForDocument:(id)arg1 decryptionKey:(id)arg2 toURL:(id)arg3;
+ (void)garbageCollectDocumentSupportWithKnownDocumentUUIDs:(id)arg1 delegate:(id)arg2;
+ (bool)isNativeDirectoryFormatURL:(id)arg1;
+ (bool)isNativeOrTangierEditingFormatURL:(id)arg1;
+ (bool)isTangierEditingFormatURL:(id)arg1;
+ (void)removeDefaultSupportDirectory;
+ (bool)requestDownloadingDocumentResourcesForURL:(id)arg1 decryptionKey:(id)arg2 usingDataProvider:(id)arg3;
+ (id)requestDownloadingDocumentResourcesForURL:(id)arg1 decryptionKey:(id)arg2;
+ (id)supportBundleURLForUUID:(id)arg1 delegate:(id)arg2;
+ (id)supportURLForDocumentURL:(id)arg1 coordinateRead:(bool)arg2 delegate:(id)arg3 error:(id*)arg4;
+ (void)waitForPendingEndSaveGroup:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forLazyReference:(id)arg3;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forObjectIdentifier:(long long)arg3 objectOrNil:(id)arg4;
- (id)addLoadedObjectsAndEnqueueNotifications:(id)arg1;
- (void)addObjectModifyDelegate:(id)arg1;
- (bool)areExternalReferencesSupported;
- (bool)areExternalReferencesToDataAllowedAtURL:(id)arg1;
- (bool)areNewExternalReferencesToDataAllowed;
- (id)baseUUIDForObjectUUID;
- (void)beginAssertOnModify;
- (void)beginIgnoringCachedObjectEviction;
- (void)beginSaveToURL:(id)arg1 updateType:(long long)arg2 packageType:(long long)arg3 documentUUID:(id)arg4;
- (void)beginSaveToURL:(id)arg1 updateType:(long long)arg2 packageType:(long long)arg3;
- (void)beginWriteOperation;
- (void)beginWriteWithOriginalURL:(id)arg1 relativeURLForExternalData:(id)arg2;
- (void)beginWriteWithOriginalURL:(id)arg1;
- (void)cancelDownloads;
- (void)checkforDataWarningsWithPackageURL:(id)arg1;
- (void)close;
- (id)componentManager;
- (bool)containsDataConformingToUTI:(id)arg1;
- (id)context;
- (bool)continueReadingDocumentObjectFromPackageURL:(id)arg1 documentResourceDataProvider:(id)arg2 areExternalDataReferencesAllowed:(bool)arg3 error:(id*)arg4;
- (id)currentPackageDataWriter;
- (id)dataManager;
- (id)dataOrNilForIdentifier:(long long)arg1;
- (id)dataWithContentsOfPackagePath:(id)arg1;
- (void)dealloc;
- (id)decryptionKey;
- (id)delegate;
- (id)deterministicObjectUUIDRelativeToObject:(id)arg1 offset:(unsigned long long)arg2;
- (void)didAddData:(id)arg1;
- (bool)didFinishSuccessfullyReadingObjects:(id)arg1 readCoordinator:(id)arg2 finalizeHandlerQueue:(id)arg3;
- (void)didFinishUsingDocumentResourceDataProvider:(id)arg1 withSuccess:(bool)arg2;
- (void)didMoveSupportToURL:(id)arg1;
- (void)didMoveToURL:(id)arg1;
- (void)didReadDocumentObject:(id)arg1;
- (id)documentObject;
- (id)documentObjectContainer;
- (id)documentPackage;
- (id)documentPasswordHint;
- (id)documentProperties;
- (id)documentResourceManager;
- (id)documentRevision;
- (id)documentRoot;
- (id)documentURL;
- (id)documentUUID;
- (id)downloadWithDelegate:(id)arg1 description:(id)arg2;
- (void)endAssertOnModify;
- (void)endIgnoringCachedObjectEviction;
- (void)endSaveWithSuccess:(bool)arg1;
- (void)endWriteOperation;
- (bool)endWriteWithSuccess:(bool)arg1 error:(id*)arg2;
- (void)enumerateDocumentResourcesUsingBlock:(id)arg1;
- (unsigned long long)estimatedDocumentDataSize;
- (unsigned long long)estimatedDocumentSize;
- (long long)estimatedDownloadSize;
- (id)gilligan_documentResourceDataProvider;
- (bool)ignoreDocumentResourcesWhileReading;
- (bool)ignoreDocumentSupport;
- (bool)ignoreUnknownContentWhileReading;
- (bool)ignoreVersionCheckingWhileReading;
- (id)incrementDocumentRevisionWithIdentifier:(id)arg1;
- (long long)incrementLastObjectIdentifier:(long long)arg1;
- (id)init;
- (id)initForQuickLookWithURL:(id)arg1 delegate:(id)arg2 error:(id*)arg3 passphrase:(id)arg4;
- (id)initForSpotlightWithURL:(id)arg1 delegate:(id)arg2 error:(id*)arg3;
- (id)initWithDelegate:(id)arg1 documentResourceManager:(id)arg2;
- (id)initWithDelegate:(id)arg1;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 documentResourceManager:(id)arg3 mode:(unsigned int)arg4 error:(id*)arg5 passphrase:(id)arg6;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 error:(id*)arg3 passphrase:(id)arg4;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 error:(id*)arg3;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 mode:(unsigned int)arg3 error:(id*)arg4 passphrase:(id)arg5;
- (bool)isDocumentModified;
- (bool)isDocumentSupportTemporary;
- (bool)isEstimatedDownloadSizePrecise;
- (bool)isPasswordProtected;
- (bool)isSupportModified;
- (id)keychainGenericItem;
- (long long)lastObjectIdentifier;
- (long long)modifyObjectTokenForNewObject;
- (bool)needsDownload;
- (id)newDocumentResourceDataProvider;
- (long long)newObjectIdentifier;
- (id)newObjectUUIDForObject:(id)arg1;
- (void)notifyEstimatedDocumentDataSizeChanged;
- (id)objectForIdentifier:(long long)arg1;
- (id)objectUUIDMap;
- (id)objectWithUUID:(id)arg1;
- (id)objectWithUUIDPath:(id)arg1;
- (long long)packageType;
- (id)passphraseHint;
- (id)passwordVerifier;
- (id)peekNextVersionUUID;
- (void)performReadOperation:(id)arg1;
- (void)performReadOperationOnKnownObjects:(id)arg1;
- (void)performReadUsingAccessor:(id)arg1;
- (void)performReadUsingAccessorImpl:(id)arg1;
- (long long)preferredPackageType;
- (void)prepareForDocumentReplacement;
- (void)prepareForDocumentReplacementWithSuccess:(bool)arg1 forSafeSave:(bool)arg2;
- (id)prepareSaveProgress;
- (void)prepareToReadSupportObjectWithDocumentResourceDataProvider:(id)arg1 areExternalDataReferencesAllowed:(bool)arg2 accessor:(id)arg3;
- (bool)readComponent:(id)arg1 isWeakReference:(bool)arg2 documentPackage:(id)arg3 supportPackage:(id)arg4 rootObject:(id*)arg5 allObjects:(id*)arg6 error:(id*)arg7;
- (bool)readComponent:(id)arg1 isWeakReference:(bool)arg2 rootObject:(id*)arg3 allObjects:(id*)arg4 error:(id*)arg5;
- (bool)readDocumentObjectFromDatabasePackageURL:(id)arg1 error:(id*)arg2;
- (bool)readDocumentObjectFromPackageURL:(id)arg1 error:(id*)arg2;
- (bool)readLazyReference:(id)arg1 object:(id*)arg2 error:(id*)arg3;
- (bool)readObjectForIdentifier:(long long)arg1 isWeakReference:(bool)arg2 rootObjectComponent:(id)arg3 object:(id*)arg4 error:(id*)arg5;
- (id)readObjectIfNeededForIdentifier:(long long)arg1 isWeakReference:(bool)arg2 componentIdentifier:(long long)arg3;
- (bool)readWithReadCoordinator:(id)arg1 finalizeHandlerQueue:(id)arg2 rootObject:(id*)arg3 error:(id*)arg4 readCompletion:(id)arg5;
- (void)removeObjectModifyDelegate:(id)arg1;
- (void)replaceDocumentObject:(id)arg1;
- (void)resetDocumentRevision;
- (void)resumeLoadingModifiedFlushedComponents;
- (bool)saveToURL:(id)arg1 packageType:(long long)arg2 encryptionKey:(id)arg3 originalURL:(id)arg4 error:(id*)arg5;
- (unsigned long long)saveToken;
- (id)service;
- (bool)setDecryptionKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDocumentObject:(id)arg1;
- (void)setDocumentObjectContainer:(id)arg1;
- (void)setDocumentRevision:(id)arg1;
- (void)setGilligan_documentResourceDataProvider:(id)arg1;
- (void)setLastObjectIdentifier:(long long)arg1;
- (bool)setPassphrase:(id)arg1;
- (void)setPreferredPackageType:(long long)arg1;
- (void)setSupportObject:(id)arg1;
- (void)setSupportObjectContainer:(id)arg1;
- (void)setSupportObjectImpl:(id)arg1;
- (id)supportDirectoryURL;
- (id)supportManager;
- (id)supportObject;
- (id)supportObjectContainer;
- (id)supportPackage;
- (void)suspendLoadingModifiedFlushedComponentsAndWait;
- (id)temporaryDirectory;
- (bool)updateDocumentUUIDPreserveOriginalDocumentSupport:(bool)arg1 preserveShareUUID:(bool)arg2 error:(id*)arg3;
- (long long)updateModifyObjectToken;
- (id)versionUUID;
- (void)waitForSaveToFinishIfNeeded;
- (void)willModifyObject:(id)arg1 duringReadOperation:(bool)arg2;
- (bool)writeToURL:(id)arg1 encryptionKey:(id)arg2 error:(id*)arg3;
- (bool)writeToURL:(id)arg1 originalPackage:(id)arg2 supportURL:(id)arg3 originalSupportPackage:(id)arg4 encryptionKey:(id)arg5 error:(id*)arg6;

@end
