/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class CKDProtocolTranslator, CKDRecordCache, NSArray, NSData, NSDictionary, NSMutableDictionary, NSObject<OS_dispatch_group>;

@interface CKDModifyRecordsOperation : CKDDatabaseOperation {
    CKDRecordCache *_cache;
    NSData *_clientChangeTokenData;
    NSDictionary *_conflictLosersToResolveByRecordID;
    id _deleteCompletionBlock;
    NSDictionary *_metadatasByRecordID;
    NSMutableDictionary *_modifyMetadatasByZoneID;
    int _numPCSRetries;
    NSArray *_recordIDsToDelete;
    NSDictionary *_recordIDsToDeleteToEtags;
    NSMutableDictionary *_recordsByServerID;
    NSArray *_recordsToSave;
    id _saveCompletionBlock;
    long long _savePolicy;
    id _saveProgressBlock;
    CKDProtocolTranslator *_translator;
    bool_atomic;
    bool_canSetPreviousProtectionEtag;
    bool_haveOutstandingMetadatas;
    bool_retriedRecords;
    bool_retryPCSFailures;
    bool_shouldOnlySaveAssetContent;
}

@property bool atomic;
@property(retain) CKDRecordCache * cache;
@property bool canSetPreviousProtectionEtag;
@property(copy) NSData * clientChangeTokenData;
@property(retain) NSDictionary * conflictLosersToResolveByRecordID;
@property(copy) id deleteCompletionBlock;
@property bool haveOutstandingMetadatas;
@property(retain) NSDictionary * metadatasByRecordID;
@property(retain) NSMutableDictionary * modifyMetadatasByZoneID;
@property int numPCSRetries;
@property(retain) NSArray * recordIDsToDelete;
@property(retain) NSDictionary * recordIDsToDeleteToEtags;
@property(retain) NSMutableDictionary * recordsByServerID;
@property(retain) NSArray * recordsToSave;
@property bool retriedRecords;
@property bool retryPCSFailures;
@property(copy) id saveCompletionBlock;
@property long long savePolicy;
@property(copy) id saveProgressBlock;
@property bool shouldOnlySaveAssetContent;
@property unsigned long long state;
@property(retain) NSObject<OS_dispatch_group> * stateTransitionGroup;
@property(readonly) CKDProtocolTranslator * translator;

- (void).cxx_destruct;
- (bool)_addAssetToSave:(id)arg1 withRecordKey:(id)arg2 record:(id)arg3 error:(id*)arg4;
- (bool)_canSetPreviousProtectionEtag;
- (void)_clearProtectionDataForRecord:(id)arg1;
- (void)_continueRecordsModify;
- (void)_createAndSavePCSForMetadata:(id)arg1 withZonePCSData:(id)arg2;
- (id)_createModifyRequestWithRecordsToSave:(id)arg1 recordsToDelete:(id)arg2 recordsToDeleteToEtags:(id)arg3 metadatasByRecordID:(id)arg4;
- (void)_fetchExistingPCSForProvidedPCSData:(id)arg1 zonePCS:(id)arg2 metadata:(id)arg3;
- (void)_fetchPCSDataForMetadata:(id)arg1;
- (void)_fetchRecordPCSData;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_handleDecryptionFailure:(id)arg1 forRecordID:(id)arg2;
- (void)_handlePCSData:(id)arg1 forMetadata:(id)arg2 withError:(id)arg3;
- (void)_handleRecordDeleted:(id)arg1 metadata:(id)arg2 responseCode:(id)arg3;
- (void)_handleRecordSaved:(id)arg1 metadata:(id)arg2 etag:(id)arg3 dateStatistics:(id)arg4 responseCode:(id)arg5 keysAssociatedWithETag:(id)arg6 recordForOplockFailure:(id)arg7 serverRecord:(id)arg8;
- (void)_loadPCSDataForMetadata:(id)arg1;
- (void)_performCallbacksForAtomicZoneMetadatas:(id)arg1;
- (void)_performCallbacksForNonAtomicZoneMetadatas:(id)arg1;
- (void)_performMetadataCallbacks;
- (void)_performSaveAssets:(id)arg1;
- (void)_performSavePackages:(id)arg1;
- (bool)_prepareRecordsForSave;
- (bool)_saveAssets;
- (void)_saveOnlyAssetContent;
- (void)_savePackages;
- (bool)_topoSortRecords;
- (void)_verifyRecordEncryption;
- (id)_wrapAssetKey:(id)arg1 forRecord:(id)arg2 withError:(id*)arg3;
- (bool)_wrapEncryptedData:(id)arg1 withPCS:(struct _OpaquePCSShareProtection { }*)arg2 forField:(id)arg3;
- (bool)_wrapEncryptedDataOnRecord:(id)arg1;
- (bool)atomic;
- (id)cache;
- (bool)canSetPreviousProtectionEtag;
- (id)clientChangeTokenData;
- (id)conflictLosersToResolveByRecordID;
- (id)deleteCompletionBlock;
- (bool)haveOutstandingMetadatas;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;
- (void)main;
- (bool)makeStateTransition;
- (id)metadatasByRecordID;
- (id)modifyMetadatasByZoneID;
- (id)nameForState:(unsigned long long)arg1;
- (int)numPCSRetries;
- (id)recordIDsToDelete;
- (id)recordIDsToDeleteToEtags;
- (id)recordsByServerID;
- (id)recordsToSave;
- (bool)retriedRecords;
- (bool)retryPCSFailures;
- (id)saveCompletionBlock;
- (long long)savePolicy;
- (id)saveProgressBlock;
- (void)setAtomic:(bool)arg1;
- (void)setCache:(id)arg1;
- (void)setCanSetPreviousProtectionEtag:(bool)arg1;
- (void)setClientChangeTokenData:(id)arg1;
- (void)setConflictLosersToResolveByRecordID:(id)arg1;
- (void)setDeleteCompletionBlock:(id)arg1;
- (void)setHaveOutstandingMetadatas:(bool)arg1;
- (void)setMetadatasByRecordID:(id)arg1;
- (void)setModifyMetadatasByZoneID:(id)arg1;
- (void)setNumPCSRetries:(int)arg1;
- (void)setRecordIDsToDelete:(id)arg1;
- (void)setRecordIDsToDeleteToEtags:(id)arg1;
- (void)setRecordsByServerID:(id)arg1;
- (void)setRecordsToSave:(id)arg1;
- (void)setRetriedRecords:(bool)arg1;
- (void)setRetryPCSFailures:(bool)arg1;
- (void)setSaveCompletionBlock:(id)arg1;
- (void)setSavePolicy:(long long)arg1;
- (void)setSaveProgressBlock:(id)arg1;
- (void)setShouldOnlySaveAssetContent:(bool)arg1;
- (bool)shouldOnlySaveAssetContent;
- (id)translator;

@end
