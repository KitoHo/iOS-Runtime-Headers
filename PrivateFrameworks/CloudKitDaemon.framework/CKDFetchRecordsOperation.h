/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class CKDRecordCache, NSArray, NSDictionary, NSMapTable, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_group>, NSSet;

@interface CKDFetchRecordsOperation : CKDDatabaseOperation {
    unsigned long long _URLOptions;
    NSMutableDictionary *_assetFetchGroupsByRecord;
    NSSet *_assetFieldNamesToPublishURLs;
    NSMutableArray *_assetsToFetch;
    CKDRecordCache *_cache;
    NSMutableDictionary *_cachedRecords;
    NSSet *_desiredKeySet;
    NSMapTable *_desiredPackageFileIndexSetsByPackage;
    NSDictionary *_desiredPackageFileIndices;
    NSMutableDictionary *_errorsByRecordID;
    NSObject<OS_dispatch_group> *_fetchRecordsGroup;
    NSArray *_fullRecordsToFetch;
    NSMutableArray *_packagesToFetch;
    id _recordFetchCompletionBlock;
    id _recordFetchProgressBlock;
    NSArray *_recordIDsToFetch;
    NSDictionary *_recordIDsToVersionETags;
    unsigned long long _requestedTTL;
    NSDictionary *_signaturesOfAssetsByRecordIDAndKey;
    NSDictionary *_webSharingIdentityDataByRecordID;
    bool_shouldFetchAssetContent;
    bool_useCachedEtags;
}

@property unsigned long long URLOptions;
@property(retain) NSMutableDictionary * assetFetchGroupsByRecord;
@property(retain) NSSet * assetFieldNamesToPublishURLs;
@property(retain) NSMutableArray * assetsToFetch;
@property(retain) CKDRecordCache * cache;
@property(retain) NSMutableDictionary * cachedRecords;
@property(retain) NSSet * desiredKeySet;
@property(retain) NSMapTable * desiredPackageFileIndexSetsByPackage;
@property(retain) NSDictionary * desiredPackageFileIndices;
@property(retain) NSMutableDictionary * errorsByRecordID;
@property(retain) NSObject<OS_dispatch_group> * fetchRecordsGroup;
@property(retain) NSArray * fullRecordsToFetch;
@property(retain) NSMutableArray * packagesToFetch;
@property(copy) id recordFetchCompletionBlock;
@property(copy) id recordFetchProgressBlock;
@property(retain) NSArray * recordIDsToFetch;
@property(retain) NSDictionary * recordIDsToVersionETags;
@property unsigned long long requestedTTL;
@property bool shouldFetchAssetContent;
@property(retain) NSDictionary * signaturesOfAssetsByRecordIDAndKey;
@property bool useCachedEtags;
@property(retain) NSDictionary * webSharingIdentityDataByRecordID;

- (void).cxx_destruct;
- (unsigned long long)URLOptions;
- (id)_assetFetchGroupForRecord:(id)arg1;
- (void)_continueHandleFetchedRecord:(id)arg1;
- (void)_decryptPropertiesOnRecord:(id)arg1;
- (void)_didFetchAsset:(id)arg1 withError:(id)arg2;
- (void)_didFetchPackage:(id)arg1 withError:(id)arg2;
- (void)_enqueueAsset:(id)arg1 forRecord:(id)arg2 ifSignatureMatches:(id)arg3;
- (void)_enqueueAssetContentFetchesForRecord:(id)arg1;
- (void)_enqueuePackage:(id)arg1 forRecord:(id)arg2;
- (void)_fetchAssets;
- (void)_fetchPackages;
- (void)_fetchRecords;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_handleRecordFetch:(id)arg1 recordID:(id)arg2 etagMatched:(bool)arg3 responseCode:(id)arg4;
- (id)assetFetchGroupsByRecord;
- (id)assetFieldNamesToPublishURLs;
- (id)assetsToFetch;
- (id)cache;
- (id)cachedRecords;
- (id)desiredKeySet;
- (id)desiredPackageFileIndexSetsByPackage;
- (id)desiredPackageFileIndices;
- (id)errorForRecordID:(id)arg1;
- (id)errorsByRecordID;
- (id)fetchRecordsGroup;
- (id)fullRecordsToFetch;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;
- (void)main;
- (bool)makeStateTransition;
- (id)nameForState:(unsigned long long)arg1;
- (id)packagesToFetch;
- (id)recordFetchCompletionBlock;
- (id)recordFetchProgressBlock;
- (id)recordIDsToFetch;
- (id)recordIDsToVersionETags;
- (unsigned long long)requestedTTL;
- (void)setAssetFetchGroupsByRecord:(id)arg1;
- (void)setAssetFieldNamesToPublishURLs:(id)arg1;
- (void)setAssetsToFetch:(id)arg1;
- (void)setCache:(id)arg1;
- (void)setCachedRecords:(id)arg1;
- (void)setDesiredKeySet:(id)arg1;
- (void)setDesiredPackageFileIndexSetsByPackage:(id)arg1;
- (void)setDesiredPackageFileIndices:(id)arg1;
- (void)setError:(id)arg1 forRecordID:(id)arg2;
- (void)setErrorsByRecordID:(id)arg1;
- (void)setFetchRecordsGroup:(id)arg1;
- (void)setFullRecordsToFetch:(id)arg1;
- (void)setPackagesToFetch:(id)arg1;
- (void)setRecordFetchCompletionBlock:(id)arg1;
- (void)setRecordFetchProgressBlock:(id)arg1;
- (void)setRecordIDsToFetch:(id)arg1;
- (void)setRecordIDsToVersionETags:(id)arg1;
- (void)setRequestedTTL:(unsigned long long)arg1;
- (void)setShouldFetchAssetContent:(bool)arg1;
- (void)setSignaturesOfAssetsByRecordIDAndKey:(id)arg1;
- (void)setURLOptions:(unsigned long long)arg1;
- (void)setUseCachedEtags:(bool)arg1;
- (void)setWebSharingIdentityDataByRecordID:(id)arg1;
- (bool)shouldFetchAssetContent;
- (id)signaturesOfAssetsByRecordIDAndKey;
- (bool)useCachedEtags;
- (id)webSharingIdentityDataByRecordID;

@end
