/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@class CKDPDate, CKDPIdentifier, CKDPInvitationRecipient, CKDPShareIdentifier, NSData, NSString;

@interface CKDPInvitation : PBCodable <NSCopying> {
    struct { 
        unsigned int applicationContainerEnvironment : 1; 
        unsigned int state : 1; 
    NSString *_applicationContainer;
    int _applicationContainerEnvironment;
    CKDPDate *_createdAt;
    } _has;
    CKDPIdentifier *_invitationId;
    NSString *_invitationImageUrl;
    NSString *_invitationMessage;
    NSData *_payload;
    CKDPInvitationRecipient *_recipient;
    CKDPIdentifier *_senderId;
    CKDPShareIdentifier *_shareId;
    NSData *_signature;
    int _state;
}

@property(retain) NSString * applicationContainer;
@property int applicationContainerEnvironment;
@property(retain) CKDPDate * createdAt;
@property(readonly) bool hasApplicationContainer;
@property bool hasApplicationContainerEnvironment;
@property(readonly) bool hasCreatedAt;
@property(readonly) bool hasInvitationId;
@property(readonly) bool hasInvitationImageUrl;
@property(readonly) bool hasInvitationMessage;
@property(readonly) bool hasPayload;
@property(readonly) bool hasRecipient;
@property(readonly) bool hasSenderId;
@property(readonly) bool hasShareId;
@property(readonly) bool hasSignature;
@property bool hasState;
@property(retain) CKDPIdentifier * invitationId;
@property(retain) NSString * invitationImageUrl;
@property(retain) NSString * invitationMessage;
@property(retain) NSData * payload;
@property(retain) CKDPInvitationRecipient * recipient;
@property(retain) CKDPIdentifier * senderId;
@property(retain) CKDPShareIdentifier * shareId;
@property(retain) NSData * signature;
@property int state;

- (void).cxx_destruct;
- (id)applicationContainer;
- (int)applicationContainerEnvironment;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)createdAt;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasApplicationContainer;
- (bool)hasApplicationContainerEnvironment;
- (bool)hasCreatedAt;
- (bool)hasInvitationId;
- (bool)hasInvitationImageUrl;
- (bool)hasInvitationMessage;
- (bool)hasPayload;
- (bool)hasRecipient;
- (bool)hasSenderId;
- (bool)hasShareId;
- (bool)hasSignature;
- (bool)hasState;
- (unsigned long long)hash;
- (id)invitationId;
- (id)invitationImageUrl;
- (id)invitationMessage;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)payload;
- (bool)readFrom:(id)arg1;
- (id)recipient;
- (id)senderId;
- (void)setApplicationContainer:(id)arg1;
- (void)setApplicationContainerEnvironment:(int)arg1;
- (void)setCreatedAt:(id)arg1;
- (void)setHasApplicationContainerEnvironment:(bool)arg1;
- (void)setHasState:(bool)arg1;
- (void)setInvitationId:(id)arg1;
- (void)setInvitationImageUrl:(id)arg1;
- (void)setInvitationMessage:(id)arg1;
- (void)setPayload:(id)arg1;
- (void)setRecipient:(id)arg1;
- (void)setSenderId:(id)arg1;
- (void)setShareId:(id)arg1;
- (void)setSignature:(id)arg1;
- (void)setState:(int)arg1;
- (id)shareId;
- (id)signature;
- (int)state;
- (void)writeTo:(id)arg1;

@end
