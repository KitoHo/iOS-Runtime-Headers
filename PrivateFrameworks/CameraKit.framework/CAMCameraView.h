/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit
 */

@class CALayer, CAMAnimationDelegate, CAMAvalancheIndicatorView, CAMBlurredSnapshotView, CAMBottomBar, CAMCameraSpec, CAMCaptureController, CAMElapsedTimeView, CAMExposureBiasTextView, CAMFilterButton, CAMFlashBadge, CAMFlashButton, CAMFlipButton, CAMGridView, CAMHDRBadge, CAMHDRButton, CAMHardwareLockIndicatorView, CAMImageWell, CAMLowDiskSpaceAlertView, CAMModeDial, CAMPanoramaView, CAMPreviewView, CAMShutterButton, CAMSlalomIndicatorView, CAMTimerButton, CAMTimerIndicatorView, CAMTopBar, CAMTorchPatternController, CAMZoomSlider, NSDate, NSMutableArray, NSMutableSet, NSObject<OS_dispatch_source>, NSString, NSTimer, PLCameraIrisAnimationView, PLCameraOverlayTextLabelView, PLPreviewOverlayView, UIAlertView, UIImageView, UILongPressGestureRecognizer, UIPanGestureRecognizer, UISwipeGestureRecognizer, UITapGestureRecognizer, UIView;

@interface CAMCameraView : UIView <CAMModeDialDataSource, CAMTopBarDelegate, CAMBottomBarDelegate, CAMZoomSliderDelegate, CAMTimerButtonDelegate, CAMStillImageCaptureRequestDelegate, PLCameraControllerDelegate, PLCameraPanoramaViewDelegate, UIGestureRecognizerDelegate, UIAccelerometerDelegate> {
    struct CGSize { 
        double width; 
        double height; 
    struct CGPoint { 
        double x; 
        double y; 
    struct CGPoint { 
        double x; 
        double y; 
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    unsigned int _needToShowDiskSpaceWarning : 1;
    unsigned int _shouldShowFocus : 1;
    unsigned int _capturePhotoWhenFocusFinished : 1;
    unsigned int _capturePhotoWhenExposureFinished : 1;
    unsigned int _isMidSuspension : 1;
    unsigned int _capturingPhoto : 1;
    unsigned int _fastIrisAnimation : 1;
    unsigned int _currentCaptureIsExtendedDuration : 1;
    unsigned int _flashModeDidChangeDuringCapture : 1;
    unsigned int _imageWriterQueueIsFull : 1;
    unsigned int _isCameraApp : 1;
    unsigned int _staticIrisIsClosing : 1;
    unsigned int _irisIsOpening : 1;
    unsigned int _wasInterrupted : 1;
    unsigned int _suppressIrisAnimations : 1;
    unsigned int _shouldAnimateIrisClosed : 1;
    unsigned int _enableCameraAfterDidMoveToWindow : 1;
    unsigned int _previewStartedBeforeViewMovedToWindow : 1;
    unsigned int _didEverMoveToWindow : 1;
    CAMHDRBadge *__HDRBadge;
    CAMHDRButton *__HDRButton;
    NSObject<OS_dispatch_source> *__avalancheCaptureTimer;
    CAMAvalancheIndicatorView *__avalancheIndicator;
    NSObject<OS_dispatch_source> *__avalancheRecognitionTimer;
    CAMBottomBar *__bottomBar;
    CAMBlurredSnapshotView *__captureSnapshotView;
    CAMBlurredSnapshotView *__currentDeviceBackSnapshotView;
    CAMBlurredSnapshotView *__currentDeviceFrontSnapshotView;
    long long __deferredModeIndex;
    CAMAnimationDelegate *__delayedCaptureAnimationDelegate;
    NSObject<OS_dispatch_source> *__delayedCaptureTimer;
    long long __desiredNumberOfAvalancheCaptures;
    CAMElapsedTimeView *__elapsedTimeView;
    float __exposureBiasPanStartValue;
    CAMExposureBiasTextView *__exposureBiasTextView;
    double __exposureBiasVirtualSliderExponent;
    double __exposureBiasVirtualSliderPointsForFirstStop;
    CAMFilterButton *__filterButton;
    NSMutableSet *__filterNamesSelectedBeforeCapture;
    CAMFlashBadge *__flashBadge;
    CAMFlashButton *__flashButton;
    CAMFlipButton *__flipButton;
    } __focusPanStartPoint;
    CAMHardwareLockIndicatorView *__hardwareLockIndicator;
    CAMImageWell *__imageWell;
    NSDate *__lastAutoTimerCaptureDate;
    NSDate *__lastDelayedCaptureIndicatorUpdateDate;
    } __lastFocusPanPoint;
    CAMModeDial *__modeDial;
    CAMBlurredSnapshotView *__modeSwitchingSnapshotView;
    UISwipeGestureRecognizer *__nextModeGestureRecognizer;
    UIView *__nonWidescreenSquareBottomMarginLayoutSpacer;
    unsigned long long __numFilterSelectionsBeforeCapture;
    long long __numberOfInflightStillImageRequests;
    long long __pendingModeIndex;
    UIView *__previewCounterRotatingView;
    UIView *__previewMaskingView;
    UISwipeGestureRecognizer *__previousModeGestureRecognizer;
    long long __remainingDelayedCaptureTicks;
    CAMShutterButton *__shutterButton;
    CAMSlalomIndicatorView *__slalomIndicator;
    UITapGestureRecognizer *__slalomIndicatorTapGestureRecognizer;
    CAMShutterButton *__stillDuringVideoButton;
    CAMBlurredSnapshotView *__suspensionSnapshotView;
    CAMBlurredSnapshotView *__targetDeviceSnapshotView;
    double __timeIntervalOfTouchDown;
    CAMTimerButton *__timerButton;
    CAMTimerIndicatorView *__timerIndicator;
    CAMTopBar *__topBar;
    CAMTorchPatternController *__torchPatternController;
    int __windowEdgeClip;
    CAMZoomSlider *__zoomSlider;
    NSTimer *_aeafLockTimer;
    PLCameraOverlayTextLabelView *_aeafLockView;
    UIImageView *_bottomShadowView;
    CAMCaptureController *_cameraController;
    int _captureOrientation;
    NSMutableArray *_closeIrisDidFinishSelectors;
    unsigned long long _currentFacesCount;
    id _delegate;
    CAMLowDiskSpaceAlertView *_diskSpaceAlert;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    UIPanGestureRecognizer *_exposureBiasPanGestureRecognizer;
    NSTimer *_faceFadeOutTimer;
    long long _flashModeBeforeCapture;
    UIView *_flipView;
    UIPanGestureRecognizer *_focusPanGestureRecognizer;
    CAMGridView *_guideView;
    double _initialPinchZoomValue;
    PLCameraIrisAnimationView *_irisView;
    int _lastSelectedHDRMode;
    long long _lastSelectedPhotoFlashMode;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    long long _modeToOpenIris;
    NSMutableArray *_openIrisDidFinishSelectors;
    PLPreviewOverlayView *_overlayView;
    CALayer *_panoramaPreviewLayer;
    double _panoramaProgress;
    CAMPanoramaView *_panoramaView;
    UIView *_previewContainerView;
    } _previewContentSize;
    CAMPreviewView *_previewView;
    int _previewViewAspectMode;
    UIView *_previewViewSnapshotView;
    } _previewViewTransform;
    int _rotationStyle;
    long long _selectedModeIndex;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
    CAMCameraSpec *_spec;
    UIImageView *_staticIrisView;
    UIView *_textOverlayView;
    long long _timerDuration;
    UIAlertView *_torchDisabledAlert;
    long long _videoFlashMode;
    bool__HDRSuggested;
    bool__HDRUsedForLastCapture;
    bool__avalancheCaptureAsSoonAsPossible;
    bool__avalancheCaptureInProgress;
    bool__avalancheCaptureRecognized;
    bool__avalancheIndicatorVisible;
    bool__badgesNeedLayoutForZoomSliderAnimation;
    bool__blurredFromSuspension;
    bool__cameraEnabled;
    bool__capturing;
    bool__capturingAvalancheForDelayedCapture;
    bool__capturingFromVolumeButtons;
    bool__changingModes;
    bool__delayedCaptureIndicatorVisible;
    bool__flipping;
    bool__hasMaximumNumberOfInflightImageRequests;
    bool__hideFocusForFilterSelection;
    bool__hideGridViewForFilterSelection;
    bool__hidingBadgesForFilterUI;
    bool__ignoringAutomaticBadgeUpdatesDuringCapture;
    bool__ignoringAutomaticBadgeUpdatesForAvalancheIndicator;
    bool__ignoringSubsequentAvalancheCaptureRequests;
    bool__needToStartAvalancheSound;
    bool__panningExposureBias;
    bool__panningExposureRect;
    bool__performingDelayedCapture;
    bool__performingFilterTransition;
    bool__postprocessing;
    bool__preparingToRecord;
    bool__processingHDR;
    bool__processingModeChange;
    bool__receivedInitialPreviewDidStartNotification;
    bool__recoveringFromServerError;
    bool__reviewingImagePickerCapture;
    bool__stopVideoCaptureWhenRecordingStarts;
    bool__switchingBetweenCameras;
    bool__tallScreenDevice;
    bool__viewingCameraRoll;
    bool__waitingForStillImageCaptureToComplete;
    bool_allowsMultipleModes;
    bool_controlsAreVisible;
    bool_delayStaticClosedIrisLoading;
    bool_enableAutorotationAfterRecording;
    bool_gridIsOn;
    bool_gridVisible;
    bool_internalOnlyDisableIrisViews;
    bool_irisIsClosed;
    bool_irisWillOpen;
    bool_maskSetBeforeModeChange;
    bool_previewOriginShouldBeZero;
    bool_shouldEndFocusOnTapUp;
    bool_showFaceTracking;
    bool_squareMaskActive;
    bool_userChangedHDRAfterFlash;
    bool_userInteractionLoggingEnabled;
}

@property(readonly) CAMHDRBadge * _HDRBadge;
@property(readonly) CAMHDRButton * _HDRButton;
@property(getter=_isHDRSuggested,setter=_setHDRSuggested:) bool _HDRSuggested;
@property(readonly) bool _HDRUsedForLastCapture;
@property(setter=_setAllowsStillFromVideoModeWhenNotRecording:) bool _allowsStillFromVideoModeWhenNotRecording;
@property(readonly) bool _avalancheCaptureAsSoonAsPossible;
@property(readonly) bool _avalancheCaptureInProgress;
@property(setter=_setAvalancheCaptureRecognized:) bool _avalancheCaptureRecognized;
@property(readonly) NSObject<OS_dispatch_source> * _avalancheCaptureTimer;
@property(readonly) CAMAvalancheIndicatorView * _avalancheIndicator;
@property(getter=_isAvalancheIndicatorVisible,setter=_setAvalancheIndicatorVisible:) bool _avalancheIndicatorVisible;
@property(readonly) NSObject<OS_dispatch_source> * _avalancheRecognitionTimer;
@property(readonly) bool _badgesNeedLayoutForZoomSliderAnimation;
@property(setter=_setBlurredFromSuspension:) bool _blurredFromSuspension;
@property(readonly) CAMBottomBar * _bottomBar;
@property(getter=_isCameraEnabled,setter=_setCameraEnabled:) bool _cameraEnabled;
@property(readonly) CAMBlurredSnapshotView * _captureSnapshotView;
@property(getter=_isCapturing,setter=_setCapturing:) bool _capturing;
@property(setter=_setCapturingAvalancheForDelayedCapture:) bool _capturingAvalancheForDelayedCapture;
@property(readonly) bool _capturingFromVolumeButtons;
@property(getter=_isChangingModes,setter=_setChangingModes:) bool _changingModes;
@property(readonly) CAMBlurredSnapshotView * _currentDeviceBackSnapshotView;
@property(readonly) CAMBlurredSnapshotView * _currentDeviceFrontSnapshotView;
@property(setter=_setDeferredModeIndex:) long long _deferredModeIndex;
@property(readonly) CAMAnimationDelegate * _delayedCaptureAnimationDelegate;
@property(getter=_isDelayedCaptureIndicatorVisible,setter=_setDelayedCaptureIndicatorVisible:) bool _delayedCaptureIndicatorVisible;
@property(readonly) NSObject<OS_dispatch_source> * _delayedCaptureTimer;
@property long long _desiredNumberOfAvalancheCaptures;
@property(readonly) CAMElapsedTimeView * _elapsedTimeView;
@property(readonly) float _exposureBiasPanStartValue;
@property(readonly) CAMExposureBiasTextView * _exposureBiasTextView;
@property(setter=_setExposureBiasVirtualSliderExponent:) double _exposureBiasVirtualSliderExponent;
@property(setter=_setExposureBiasVirtualSliderPointsForFirstStop:) double _exposureBiasVirtualSliderPointsForFirstStop;
@property(readonly) CAMFilterButton * _filterButton;
@property(readonly) NSMutableSet * _filterNamesSelectedBeforeCapture;
@property(readonly) CAMFlashBadge * _flashBadge;
@property(readonly) CAMFlashButton * _flashButton;
@property(readonly) CAMFlipButton * _flipButton;
@property(getter=_isFlipping,setter=_setFlipping:) bool _flipping;
@property(readonly) struct CGPoint { double x1; double x2; } _focusPanStartPoint;
@property(readonly) CAMHardwareLockIndicatorView * _hardwareLockIndicator;
@property(getter=_hasMaximumNumberOfInflightImageRequests,setter=_setHasMaximumNumberOfInflightImageRequests:) bool _hasMaximumNumberOfInflightImageRequests;
@property(setter=_setHideFocusForFilterSelection:) bool _hideFocusForFilterSelection;
@property(setter=_setHideGridViewForFilterSelection:) bool _hideGridViewForFilterSelection;
@property(getter=_isHidingBadgesForFilterUI,setter=_setHidingBadgesForFilterUI:) bool _hidingBadgesForFilterUI;
@property(setter=_setIgnoringAutomaticBadgeUpdatesDuringCapture:) bool _ignoringAutomaticBadgeUpdatesDuringCapture;
@property(setter=_setIgnoringAutomaticBadgeUpdatesForAvalancheIndicator:) bool _ignoringAutomaticBadgeUpdatesForAvalancheIndicator;
@property(readonly) bool _ignoringSubsequentAvalancheCaptureRequests;
@property(readonly) CAMImageWell * _imageWell;
@property(readonly) NSDate * _lastAutoTimerCaptureDate;
@property(readonly) NSDate * _lastDelayedCaptureIndicatorUpdateDate;
@property(readonly) struct CGPoint { double x1; double x2; } _lastFocusPanPoint;
@property(getter=_isLockedToPortraitOrientation,readonly) bool _lockedToPortraitOrientation;
@property(readonly) CAMModeDial * _modeDial;
@property(readonly) CAMBlurredSnapshotView * _modeSwitchingSnapshotView;
@property(readonly) bool _needToStartAvalancheSound;
@property(readonly) UISwipeGestureRecognizer * _nextModeGestureRecognizer;
@property(readonly) UIView * _nonWidescreenSquareBottomMarginLayoutSpacer;
@property(setter=_setNumFilterSelectionsBeforeCapture:) unsigned long long _numFilterSelectionsBeforeCapture;
@property(readonly) long long _numberOfInflightStillImageRequests;
@property(readonly) bool _panningExposureBias;
@property(readonly) bool _panningExposureRect;
@property(setter=_setPendingModeIndex:) long long _pendingModeIndex;
@property(setter=_setPerformingDelayedCapture:) bool _performingDelayedCapture;
@property(getter=_isPerformingFilterTransition,setter=_setPerformingFilterTransition:) bool _performingFilterTransition;
@property(getter=_isPostprocessing,setter=_setPostprocessing:) bool _postprocessing;
@property(getter=_isPreparingToRecord,setter=_setPreparingToRecord:) bool _preparingToRecord;
@property(readonly) UIView * _previewCounterRotatingView;
@property(readonly) UIView * _previewMaskingView;
@property(readonly) UISwipeGestureRecognizer * _previousModeGestureRecognizer;
@property(getter=_isProcessingHDR,setter=_setProcessingHDR:) bool _processingHDR;
@property(getter=_isProcessingModeChange,readonly) bool _processingModeChange;
@property(readonly) bool _receivedInitialPreviewDidStartNotification;
@property(setter=_setRecoveringFromServerError:) bool _recoveringFromServerError;
@property(readonly) long long _remainingDelayedCaptureTicks;
@property(getter=_isReviewingImagePickerCapture,setter=_setReviewingImagePickerCapture:) bool _reviewingImagePickerCapture;
@property(readonly) bool _shouldBlurWhenSessionStops;
@property(readonly) bool _shouldPausePreviewDuringCapture;
@property(readonly) bool _shouldStartPreviewWhenApplicationBecomesActive;
@property(readonly) CAMShutterButton * _shutterButton;
@property(readonly) CAMSlalomIndicatorView * _slalomIndicator;
@property(readonly) UITapGestureRecognizer * _slalomIndicatorTapGestureRecognizer;
@property(readonly) CAMShutterButton * _stillDuringVideoButton;
@property(setter=_setStopVideoCaptureWhenRecordingStarts:) bool _stopVideoCaptureWhenRecordingStarts;
@property(readonly) bool _supportsPreviewingAfterCapture;
@property(readonly) CAMBlurredSnapshotView * _suspensionSnapshotView;
@property(getter=_isSwipeToModeSwitchEnabled,setter=_setSwipeToModeSwitchEnabled:) bool _swipeToModeSwitchEnabled;
@property(readonly) bool _switchingBetweenCameras;
@property(getter=_isTallScreenDevice,readonly) bool _tallScreenDevice;
@property(readonly) CAMBlurredSnapshotView * _targetDeviceSnapshotView;
@property(readonly) double _timeIntervalOfTouchDown;
@property(readonly) CAMTimerButton * _timerButton;
@property(readonly) CAMTimerIndicatorView * _timerIndicator;
@property(readonly) CAMTopBar * _topBar;
@property(readonly) CAMTorchPatternController * _torchPatternController;
@property(readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _unzoomedPreviewFrame;
@property(getter=_isViewingCameraRoll,setter=_setViewingCameraRoll:) bool _viewingCameraRoll;
@property(getter=_isWaitingForStillImageCaptureToComplete,setter=_setWaitingForStillImageCaptureToComplete:) bool _waitingForStillImageCaptureToComplete;
@property(readonly) bool _wantsCaptureAnimations;
@property(readonly) bool _wantsForcedPreviewAspectRatio;
@property(readonly) bool _wantsFullScreenPreview;
@property(readonly) bool _wantsOrientationAnimations;
@property(readonly) bool _wantsPreviewSizeAdjustmentForBars;
@property(readonly) bool _wantsSuspensionBlurs;
@property(readonly) int _windowEdgeClip;
@property(readonly) CAMZoomSlider * _zoomSlider;
@property(readonly) bool allowsMultipleModes;
@property long long cameraDevice;
@property long long cameraMode;
@property(readonly) bool controlsAreVisible;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property long long flashMode;
@property(getter=isGridVisible) bool gridVisible;
@property(readonly) unsigned long long hash;
@property(readonly) bool isCameraReady;
@property int lastSelectedHDRMode;
@property long long lastSelectedPhotoFlashMode;
@property(readonly) PLPreviewOverlayView * overlayView;
@property(readonly) UIView * previewContainerView;
@property(readonly) CAMPreviewView * previewView;
@property int previewViewAspectMode;
@property struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } previewViewTransform;
@property int rotationStyle;
@property long long selectedModeIndex;
@property(readonly) CAMCameraSpec * spec;
@property(readonly) Class superclass;
@property long long timerDuration;
@property bool userChangedHDRAfterFlash;
@property(getter=isUserInteractionLoggingEnabled) bool userInteractionLoggingEnabled;
@property long long videoFlashMode;

+ (bool)requiresConstraintBasedLayout;

- (void).cxx_destruct;
- (id)_HDRBadge;
- (id)_HDRButton;
- (int)_HDRMode;
- (bool)_HDRUsedForLastCapture;
- (void)_aeafLockTimerDidFire;
- (struct __CFString { }*)_aggregateDictionaryKeyForCameraMode:(long long)arg1 device:(long long)arg2;
- (struct __CFString { }*)_aggregateDictionaryKeyForFlashMode:(long long)arg1;
- (bool)_allowExposureBiasForMode:(long long)arg1;
- (bool)_allowExposureBiasTextView;
- (bool)_allowFocusRectPanning;
- (bool)_allowsStillFromVideoMode;
- (bool)_allowsStillFromVideoModeWhenNotRecording;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationDidEnterBackground;
- (void)_applicationDidResignActive:(id)arg1;
- (void)_applicationPreferredContentSizeChanged:(id)arg1;
- (void)_applicationSuspended:(id)arg1;
- (void)_applyModeSwitchingBlurAnimated:(bool)arg1 withCompletionBlock:(id)arg2;
- (void)_applyTopBarRotationForDeviceOrientation:(long long)arg1;
- (void)_attachVideoPreviewToEffectsRenderer;
- (bool)_avalancheCaptureAsSoonAsPossible;
- (bool)_avalancheCaptureInProgress;
- (bool)_avalancheCaptureRecognized;
- (id)_avalancheCaptureRequest;
- (id)_avalancheCaptureTimer;
- (void)_avalancheCaptureTimerFired;
- (id)_avalancheIndicator;
- (double)_avalancheInterval;
- (id)_avalancheRecognitionTimer;
- (void)_avalancheRecognitionTimerFired;
- (bool)_badgesNeedLayoutForZoomSliderAnimation;
- (void)_beginSuspendAnimation:(id)arg1;
- (void)_blurForSuspensionWithCompletionBlock:(id)arg1;
- (bool)_blurredFromSuspension;
- (id)_bottomBar;
- (long long)_bottomBarBackgroundStyleForMode:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_bottomBarFrame;
- (void)_cameraOrientationChanged:(id)arg1;
- (bool)_canAutoExposeAtPoint;
- (bool)_canAutoFocusAtPoint;
- (bool)_canLockExposure;
- (bool)_canLockFocus;
- (bool)_canLockFocusOrExposure;
- (bool)_canModifyExposureBias;
- (void)_cancelFocusDidStartTimeout;
- (void)_cancelZoomSliderTimer;
- (void)_captureAvalancheStillImage;
- (void)_capturePanorama;
- (id)_captureSnapshotView;
- (void)_captureStillImage;
- (void)_captureStillImageWithRequest:(id)arg1;
- (void)_capturedPhotoWithCaptureDictionary:(id)arg1 metadata:(id)arg2;
- (bool)_capturingAvalancheForDelayedCapture;
- (bool)_capturingFromVolumeButtons;
- (void)_checkDiskSpaceAfterCapture;
- (void)_cleanupAfterZPositionAnimations;
- (void)_cleanupPostVideoCaptureState;
- (void)_clearAEAFLockTimer;
- (void)_clearFaceFadeOutTimer;
- (void)_clearFocusViews;
- (void)_collapseExpandedButtonsAnimated:(bool)arg1;
- (id)_constraintsForAvalancheIndicatorWithHorizontalBottomBarForMode:(long long)arg1;
- (id)_constraintsForAvalancheIndicatorWithVerticalBottomBarForMode:(long long)arg1;
- (id)_constraintsForGridViewWithMode:(long long)arg1;
- (id)_constraintsForHorizontalBottomBar;
- (id)_constraintsForLivePreviewContainerWithMode:(long long)arg1;
- (id)_constraintsForLivePreviewMaskWithMode:(long long)arg1;
- (id)_constraintsForLivePreviewWithMode:(long long)arg1;
- (id)_constraintsForTimerIndicatorWithHorizontalBottomBarForMode:(long long)arg1;
- (id)_constraintsForTimerIndicatorWithVerticalBottomBarForMode:(long long)arg1;
- (id)_constraintsForVerticalBottomBar;
- (id)_constraintsForZoomSliderWithHorizontalBottomBar;
- (void)_createAvalancheIndicatorIfNecessary;
- (void)_createBottomBarIfNecessary;
- (void)_createControlsForCurrentModeIfNecessary;
- (void)_createDefaultControlsIfNecessary;
- (void)_createElapsedTimeViewIfNecessary;
- (void)_createExposureBiasTextViewIfNecessary;
- (void)_createFilterButtonIfNecessary;
- (void)_createFlashBadgeIfNecessary;
- (void)_createFlashButtonIfNecessary;
- (void)_createFlipButtonIfNecessary;
- (void)_createHDRBadgeIfNecessary;
- (void)_createHDRButtonIfNecessary;
- (void)_createHardwareLockIndicatorIfNecessary;
- (void)_createImageWellIfNecessary;
- (void)_createLivePreviewHierarchyIfNecessary;
- (void)_createModeDialIfNecessary;
- (void)_createOrDestroyPanoramaViewIfNecessary;
- (void)_createPanoControlsIfNecessary;
- (void)_createShutterButtonIfNecessary;
- (void)_createSlalomControlsIfNecessary;
- (void)_createSlalomIndicatorIfNecessary;
- (void)_createStillDuringVideoButtonIfNecessary;
- (void)_createStillImageControlsIfNecessary;
- (void)_createTimelapseControlsIfNecessary;
- (void)_createTimerButtonIfNecessary;
- (void)_createTimerIndicatorIfNecessary;
- (void)_createTopBarIfNecessary;
- (void)_createVideoControlsIfNecessary;
- (void)_createZoomSliderIfNecessary;
- (id)_currentDeviceBackSnapshotView;
- (id)_currentDeviceFrontSnapshotView;
- (long long)_currentFlashMode;
- (long long)_currentTimerDuration;
- (id)_debugEnabledDescriptionForControl:(id)arg1 withReason:(id)arg2;
- (void)_decrementInflightImageRequests;
- (long long)_deferredModeIndex;
- (id)_delayedCaptureAnimationDelegate;
- (void)_delayedCaptureDelegateFired:(id)arg1;
- (id)_delayedCaptureTimer;
- (long long)_desiredNumberOfAvalancheCaptures;
- (void)_destroyAllControls;
- (void)_deviceOrientationChanged:(id)arg1;
- (long long)_deviceOrientationForPreviewView;
- (long long)_deviceOrientationForUI;
- (bool)_didEverMoveToWindow;
- (void)_diskSpaceDidChange;
- (float)_effectiveExposureBias;
- (double)_effectiveExposureBiasMovementForTranslation:(struct CGPoint { double x1; double x2; })arg1;
- (id)_elapsedTimeView;
- (void)_enableNextCapture;
- (void)_endPanFocus:(bool)arg1 exposure:(bool)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (void)_ensureLivePreviewHierarchyIsValid;
- (void)_expectedFocusOrExposureOperationDidEnd;
- (double)_exposureBiasForVirtualSliderPosition:(double)arg1;
- (float)_exposureBiasPanStartValue;
- (int)_exposureBiasScheme;
- (int)_exposureBiasSide;
- (id)_exposureBiasTextView;
- (double)_exposureBiasVirtualSliderExponent;
- (double)_exposureBiasVirtualSliderPointsForFirstStop;
- (int)_exposureModeForTapToFocus;
- (void)_fadeAndUnblurPreviewWithCompletionBlock:(id)arg1;
- (void)_fadeOutFaceRects;
- (id)_filterButton;
- (void)_filterButtonTapped:(id)arg1;
- (id)_filterNamesSelectedBeforeCapture;
- (void)_finishAvalancheCapture;
- (void)_finishCommonTapGesture;
- (id)_flashBadge;
- (id)_flashButton;
- (id)_flipButton;
- (void)_flipToBlurredPreviewWithCompletionBlock:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_floatingShutterButtonFrame;
- (void)_focusAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (int)_focusModeForTapToFocus;
- (struct CGPoint { double x1; double x2; })_focusPanStartPoint;
- (int)_getCaptureOrientation;
- (long long)_glyphOrientationForCameraOrientation:(long long)arg1;
- (bool)_handleDismissFocusTap:(id)arg1;
- (bool)_handleEffectsGridTap:(id)arg1;
- (void)_handleExposureBiasPan:(id)arg1;
- (bool)_handleExposureBiasTextViewTap:(id)arg1;
- (void)_handleFocusRectPan:(id)arg1;
- (bool)_handleFocusTap:(id)arg1;
- (bool)_handleLockFocusAttachmentTap:(id)arg1;
- (void)_handleOverlayViewDoubleTap:(id)arg1;
- (void)_handleOverlayViewLongPress:(id)arg1;
- (void)_handleOverlayViewSingleTap:(id)arg1;
- (void)_handlePreviewPinchGestureRecognizer:(id)arg1;
- (bool)_handleSplitFocusAndExposureTap:(id)arg1;
- (void)_handleVolumeButtonDown;
- (void)_handleVolumeButtonUp;
- (void)_handleVolumeUpEvents:(unsigned long long)arg1;
- (id)_hardwareLockIndicator;
- (bool)_hasMaximumNumberOfInflightImageRequests;
- (void)_hideControlsForCapturingPanoramaAnimated:(bool)arg1;
- (void)_hideControlsForCapturingTimelapseAnimated:(bool)arg1;
- (void)_hideControlsForCapturingVideoAnimated:(bool)arg1;
- (void)_hideControlsForChangeToMode:(long long)arg1 animated:(bool)arg2;
- (void)_hideControlsForSuspensionAnimated:(bool)arg1;
- (bool)_hideFocusForFilterSelection;
- (bool)_hideGridViewForFilterSelection;
- (bool)_ignoringAutomaticBadgeUpdatesDuringCapture;
- (bool)_ignoringAutomaticBadgeUpdatesForAvalancheIndicator;
- (bool)_ignoringSubsequentAvalancheCaptureRequests;
- (id)_imageWell;
- (void)_imageWellTapped:(id)arg1;
- (void)_inCallStatusChanged:(id)arg1;
- (void)_incrementInflightImageRequests;
- (void)_indicateDelayedCaptureProgressUsingTorch;
- (bool)_initialLayoutNeededForBadge:(id)arg1;
- (void)_initializeExposureBiasSliderParameters;
- (double)_interpolatedTopBarHeight;
- (void)_invalidateConstraintsForMaskingChange;
- (bool)_isAvalancheIndicatorVisible;
- (bool)_isCameraEnabled;
- (bool)_isCapturing;
- (bool)_isCapturingTimelapse;
- (bool)_isChangingModes;
- (bool)_isDelayedCaptureIndicatorVisible;
- (bool)_isFlipping;
- (bool)_isHDRSuggested;
- (bool)_isHidingBadgesForFilterUI;
- (bool)_isInstantBurstEnabled;
- (bool)_isLockedToPortraitOrientation;
- (bool)_isPerformingFilterTransition;
- (bool)_isPostprocessing;
- (bool)_isPreparingToRecord;
- (bool)_isPreviewViewAspectModeAllowed:(int)arg1;
- (bool)_isPreviewViewInSnapshotWindow;
- (bool)_isProcessingHDR;
- (bool)_isProcessingModeChange;
- (bool)_isReviewingImagePickerCapture;
- (bool)_isSwipeToModeSwitchAllowed;
- (bool)_isSwipeToModeSwitchEnabled;
- (bool)_isTallScreenDevice;
- (bool)_isTouch:(id)arg1 withinView:(id)arg2 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (bool)_isTouchWithinRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2 referenceView:(id)arg3 gestureRecognizer:(id)arg4;
- (bool)_isTouchWithinView:(id)arg1 forGestureRecognizer:(id)arg2 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (bool)_isValidFocusOrExposurePoint:(struct CGPoint { double x1; double x2; })arg1 outAdjustedPoint:(struct CGPoint { double x1; double x2; }*)arg2;
- (bool)_isViewingCameraRoll;
- (bool)_isWaitingForStillImageCaptureToComplete;
- (id)_lastAutoTimerCaptureDate;
- (id)_lastDelayedCaptureIndicatorUpdateDate;
- (struct CGPoint { double x1; double x2; })_lastFocusPanPoint;
- (void)_layoutBottomCenteredView:(id)arg1 forOrientation:(long long)arg2;
- (void)_layoutExposureBiasTextViewForOrientation:(long long)arg1;
- (void)_layoutFlashBadgeForOrientation:(long long)arg1;
- (void)_layoutHDRBadgeForOrientation:(long long)arg1;
- (void)_layoutHardwareLockIndicatorForOrientation:(long long)arg1;
- (void)_layoutTopBarForOrientation:(long long)arg1;
- (void)_layoutTopCenteredView:(id)arg1 forOrientation:(long long)arg2;
- (void)_lockFocus:(bool)arg1 andExposure:(bool)arg2 initiatedByUser:(bool)arg3;
- (bool)_longPressTapIsDown;
- (bool)_modeChangeSwipeMatchesExposureBiasPanDirection;
- (id)_modeDial;
- (id)_modeSwitchingSnapshotView;
- (bool)_needToStartAvalancheSound;
- (id)_newSnapshotView;
- (id)_nextModeGestureRecognizer;
- (id)_nonWidescreenSquareBottomMarginLayoutSpacer;
- (unsigned long long)_numFilterSelectionsBeforeCapture;
- (long long)_numberOfInflightStillImageRequests;
- (long long)_numberOfTicksForTimerDuration:(long long)arg1;
- (long long)_orientationForGestureRecognizers;
- (bool)_panFocus:(bool)arg1 exposure:(bool)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (bool)_panningExposureBias;
- (bool)_panningExposureRect;
- (id)_panoramaCaptureRequestWithCurrentSettings;
- (long long)_pendingModeIndex;
- (void)_performCaptureAnimation;
- (void)_performCaptureBlink;
- (void)_performVideoCapture;
- (bool)_performingDelayedCapture;
- (long long)_photoFlashMode;
- (void)_pinchZoomWithScale:(double)arg1;
- (bool)_pointIsOnPanoControls:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_pointIsWithinOverlayView:(struct CGPoint { double x1; double x2; })arg1 hitView:(id*)arg2;
- (bool)_pointIsWithinOverlayView:(struct CGPoint { double x1; double x2; })arg1;
- (void)_postCaptureCleanup;
- (void)_pptTestSetAutofocusDisabled:(bool)arg1;
- (void)_presentCameraRoll;
- (id)_previewCounterRotatingView;
- (id)_previewMaskingView;
- (bool)_previewShouldFillScreenForCameraMode:(long long)arg1;
- (bool)_previewView:(id)arg1 shouldFocusAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (id)_previousModeGestureRecognizer;
- (bool)_processDeferredModeChange;
- (bool)_processPendingModeChange;
- (bool)_readyToLayoutBadge:(id)arg1;
- (void)_reallyToggleCamera;
- (bool)_receivedInitialPreviewDidStartNotification;
- (void)_recoverFromServerError;
- (bool)_recoveringFromServerError;
- (void)_registerForSystemSound;
- (long long)_remainingDelayedCaptureTicks;
- (void)_removeModeSwitchingBlurAnimated:(bool)arg1 withCompletionBlock:(id)arg2;
- (void)_removeVideoCaptureControls;
- (void)_removeVideoCaptureFileAtPath:(id)arg1;
- (void)_resetAggregateInfoForPhotoFilters;
- (void)_resetDiskSpaceWarning;
- (void)_resetExposureBias;
- (void)_resetFaceTracking;
- (void)_resetInflightImageRequests;
- (void)_resetZoom;
- (void)_rotateCameraControlsAndInterface;
- (void)_scheduleFocusDidStartTimeout;
- (id)_scriptingInfo;
- (void)_setAllowsStillFromVideoModeWhenNotRecording:(bool)arg1;
- (void)_setAvalancheCaptureRecognized:(bool)arg1;
- (void)_setAvalancheIndicatorVisible:(bool)arg1;
- (void)_setBadgesNeedInitialLayout;
- (void)_setBadgesNeedLayoutForZoomSliderAnimation;
- (void)_setBlurredFromSuspension:(bool)arg1;
- (void)_setCameraEnabled:(bool)arg1;
- (void)_setCapturing:(bool)arg1;
- (void)_setCapturingAvalancheForDelayedCapture:(bool)arg1;
- (void)_setChangingModes:(bool)arg1;
- (void)_setDeferredModeIndex:(long long)arg1;
- (void)_setDelayedCaptureIndicatorVisible:(bool)arg1;
- (void)_setExposureBiasVirtualSliderExponent:(double)arg1;
- (void)_setExposureBiasVirtualSliderPointsForFirstStop:(double)arg1;
- (void)_setFlashMode:(long long)arg1;
- (void)_setFlipping:(bool)arg1;
- (void)_setHDRMode:(int)arg1;
- (void)_setHDRSuggested:(bool)arg1;
- (void)_setHasMaximumNumberOfInflightImageRequests:(bool)arg1;
- (void)_setHideFocusForFilterSelection:(bool)arg1 animated:(bool)arg2;
- (void)_setHideFocusForFilterSelection:(bool)arg1;
- (void)_setHideGridViewForFilterSelection:(bool)arg1 animated:(bool)arg2;
- (void)_setHideGridViewForFilterSelection:(bool)arg1;
- (void)_setHidingBadgesForFilterUI:(bool)arg1;
- (void)_setIgnoringAutomaticBadgeUpdatesDuringCapture:(bool)arg1;
- (void)_setIgnoringAutomaticBadgeUpdatesForAvalancheIndicator:(bool)arg1;
- (void)_setNumFilterSelectionsBeforeCapture:(unsigned long long)arg1;
- (void)_setPendingModeIndex:(long long)arg1;
- (void)_setPerformingDelayedCapture:(bool)arg1;
- (void)_setPerformingFilterTransition:(bool)arg1;
- (void)_setPostprocessing:(bool)arg1;
- (void)_setPreparingToRecord:(bool)arg1;
- (void)_setPreviewPaused:(bool)arg1;
- (void)_setPreviewViewAspectMode:(int)arg1;
- (void)_setProcessingHDR:(bool)arg1;
- (void)_setRecoveringFromServerError:(bool)arg1;
- (void)_setReviewingImagePickerCapture:(bool)arg1 updateUI:(bool)arg2;
- (void)_setReviewingImagePickerCapture:(bool)arg1;
- (void)_setShouldShowFocus:(bool)arg1;
- (void)_setSplitFocusAndExposure:(bool)arg1;
- (void)_setStopVideoCaptureWhenRecordingStarts:(bool)arg1;
- (void)_setSwipeToModeSwitchEnabled:(bool)arg1;
- (void)_setViewingCameraRoll:(bool)arg1;
- (void)_setWaitingForStillImageCaptureToComplete:(bool)arg1;
- (void)_setZoomFactor:(double)arg1;
- (void)_setupAvalancheCaptureTimer;
- (void)_setupAvalancheIndicatorConstraintsForMode:(long long)arg1;
- (void)_setupAvalancheRecognitionTimer;
- (void)_setupAvalancheTimerAndBeginCapturing;
- (void)_setupBadgeConstraintsWithVisibleZoomSliderForMode:(long long)arg1;
- (void)_setupBottomBarConstraints;
- (void)_setupDelayedCaptureDelegate;
- (void)_setupLivePreviewGridConstraintsForMode:(long long)arg1;
- (void)_setupLivePreviewHierarchyConstraintsForMode:(long long)arg1;
- (void)_setupPanoUI;
- (void)_setupPreviewLayer;
- (void)_setupPreviewView;
- (void)_setupSuspensionSnapshotViewWithBlur:(bool)arg1;
- (void)_setupTargetDeviceSnapshotView;
- (void)_setupTimerIndicatorConstraintsForMode:(long long)arg1;
- (void)_setupZoomSliderConstraints;
- (bool)_shouldApplyRotationDirectlyToTopBarForOrientation:(long long)arg1 cameraMode:(long long)arg2;
- (bool)_shouldBlurWhenSessionStops;
- (bool)_shouldEnableFilterButton;
- (bool)_shouldEnableFlashButton;
- (bool)_shouldEnableFlipButton;
- (bool)_shouldEnableHDRButton;
- (bool)_shouldEnableImageWell;
- (bool)_shouldEnableModeDial;
- (bool)_shouldEnableShutterButton;
- (bool)_shouldEnableZoomSlider;
- (bool)_shouldHideElapsedTimeViewForMode:(long long)arg1;
- (bool)_shouldHideExposureBiasTextViewForMode:(long long)arg1;
- (bool)_shouldHideFilterButtonForMode:(long long)arg1;
- (bool)_shouldHideFlashBadgeForMode:(long long)arg1;
- (bool)_shouldHideFlashButtonForMode:(long long)arg1;
- (bool)_shouldHideFlipButtonForMode:(long long)arg1;
- (bool)_shouldHideGridView;
- (bool)_shouldHideHDRBadgeForMode:(long long)arg1;
- (bool)_shouldHideHDRButtonForMode:(long long)arg1;
- (bool)_shouldHideHardwareLockIndicatorForMode:(long long)arg1;
- (bool)_shouldHideImageWellForMode:(long long)arg1;
- (bool)_shouldHideModeDialForMode:(long long)arg1;
- (bool)_shouldHidePanoramaViewForMode:(long long)arg1;
- (bool)_shouldHideShutterButtonForMode:(long long)arg1;
- (bool)_shouldHideSlalomIndicatorForMode:(long long)arg1;
- (bool)_shouldHideStillDuringVideoButtonForMode:(long long)arg1;
- (bool)_shouldHideTimerButtonForMode:(long long)arg1;
- (bool)_shouldHideTopBarForMode:(long long)arg1;
- (bool)_shouldHideZoomSliderForMode:(long long)arg1;
- (bool)_shouldPausePreviewDuringCapture;
- (bool)_shouldResetExposureWhenSubjectAreaChanged;
- (bool)_shouldResetFocusAndExposureWhenSubjectAreaChanged;
- (bool)_shouldResetFocusWhenSubjectAreaChanged;
- (bool)_shouldShowFocus;
- (bool)_shouldShowFocusAttachmentAsLocked;
- (bool)_shouldStartDelayedCapture;
- (bool)_shouldStartPreviewWhenApplicationBecomesActive;
- (bool)_shouldUseAvalancheForDelayedCapture;
- (void)_showContinuousAEAFView;
- (void)_showControlsForCapturingPanoramaAnimated:(bool)arg1;
- (void)_showControlsForCapturingTimelapseAnimated:(bool)arg1;
- (void)_showControlsForCapturingVideoAnimated:(bool)arg1;
- (void)_showControlsForChangeToMode:(long long)arg1 animated:(bool)arg2;
- (void)_showControlsForReturningFromSuspensionAnimated:(bool)arg1;
- (void)_showDiskSpaceWarning;
- (bool)_showExposureBiasSliderOnChange;
- (void)_showTorchDisabledAlert;
- (void)_showVideoCaptureControls;
- (id)_shutterButton;
- (long long)_shutterButtonModeForCameraMode:(long long)arg1 isCapturing:(bool)arg2;
- (void)_simpleRemoteActionDidOccur:(id)arg1;
- (id)_slalomIndicator;
- (id)_slalomIndicatorTapGestureRecognizer;
- (void)_slalomIndicatorTapped:(id)arg1;
- (void)_snapshotAndHideTopBarAnimated:(bool)arg1;
- (void)_snapshotView:(id)arg1 andLayoutForOrientation:(long long)arg2 leaveHidden:(bool)arg3 withBlock:(id)arg4;
- (void)_startAvalancheCapture;
- (void)_startCapturingPanorama;
- (void)_startDelayedCapture;
- (void)_startDelayedCaptureDelegate;
- (void)_startFaceFadeOutTimerWithTimeInterval:(double)arg1;
- (void)_startFocus:(bool)arg1 andExposure:(bool)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3 startFocusAnimation:(bool)arg4;
- (void)_startPreview:(id)arg1;
- (void)_startTimelapse;
- (void)_startZoomSliderTimer;
- (id)_stillDuringVideoButton;
- (void)_stillDuringVideoPressed:(id)arg1;
- (id)_stillImageCaptureRequestWithCurrentSettings;
- (void)_stopCapturingPanorama;
- (void)_stopDelayedCapture;
- (void)_stopTimelapse;
- (bool)_stopVideoCaptureWhenRecordingStarts;
- (bool)_supportsPreviewingAfterCapture;
- (id)_suspensionSnapshotView;
- (void)_switchFromCameraModeAtIndex:(long long)arg1 toCameraModeAtIndex:(long long)arg2;
- (bool)_switchingBetweenCameras;
- (id)_targetDeviceSnapshotView;
- (void)_teardownAvalancheCaptureTimer;
- (void)_teardownDelayedCaptureDelegate;
- (void)_teardownPanoUI;
- (void)_teardownRecognitionTimer;
- (double)_timeIntervalOfTouchDown;
- (void)_timelapseControllerDidChangeCapturingNotification:(id)arg1;
- (id)_timelapseStartTime;
- (void)_timeoutFocusDidStart;
- (id)_timerButton;
- (id)_timerIndicator;
- (void)_toggleCameraButtonWasPressed:(id)arg1;
- (void)_togglePreviewViewAspectMode;
- (id)_topBar;
- (long long)_topBarBackgroundStyleForMode:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_topBarFrame;
- (id)_torchPatternController;
- (void)_unblurForSuspensionWithCompletionBlock:(id)arg1;
- (void)_unlockFocus:(bool)arg1 andExposure:(bool)arg2 forFocusAttachment:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_unzoomedPreviewFrame;
- (void)_updateAllControlsWithContentSize:(id)arg1;
- (void)_updateBadgeOrientationWithDeviceOrientation:(long long)arg1;
- (void)_updateCaptureAggregateDictionariesForResponse:(id)arg1;
- (void)_updateConstraintsForMode:(long long)arg1;
- (void)_updateDelayedCaptureIndicatorWithFace:(id)arg1;
- (void)_updateEnabledControlsWithReason:(id)arg1 forceLog:(bool)arg2;
- (void)_updateEnabledControlsWithReason:(id)arg1;
- (void)_updateExposureBiasPanGestureRecognizersForOrientation:(long long)arg1;
- (void)_updateExposureBiasViews;
- (void)_updateExposureBiasViewsWithExposureBias:(float)arg1;
- (void)_updateFilterAggregateDictionaries;
- (void)_updateFilterButtonOnState;
- (void)_updateFlashAndHDR;
- (void)_updateFlashBadge;
- (void)_updateFlashModeIfNecessary;
- (void)_updateFocusAfterZoom;
- (void)_updateFocusViewHiddenStateAnimated:(bool)arg1;
- (void)_updateForFocusCapabilities;
- (void)_updateForStartTransitionToShowFilterSelection:(bool)arg1 animated:(bool)arg2;
- (void)_updateFromTimerDurationChange;
- (void)_updateGestureRecognizersForOrientation;
- (void)_updateGridVisibilityAnimated:(bool)arg1;
- (void)_updateHDRBadge;
- (void)_updateHDRSuggested;
- (void)_updateHardwareLockIndicatorStateAnimated:(bool)arg1;
- (void)_updateHardwareLockIndicatorVisibility;
- (void)_updateImageWellFromTimelapseThumbnailImage:(id)arg1;
- (void)_updateMaskingViewForCameraMode:(long long)arg1 animated:(bool)arg2;
- (void)_updateModeSwitchingAvailability;
- (void)_updateModeSwitchingGestureRecognizersForOrientation:(long long)arg1;
- (void)_updatePanoramaImageQueue;
- (void)_updatePreviewContentSizeWithCleanAperture:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_updatePreviewForFocusDidEnd;
- (void)_updatePreviewWellImage:(id)arg1;
- (void)_updateSlalomIndicator;
- (void)_updateSlalomIndicatorText;
- (void)_updateSphereAggregateDictionariesForResponse:(id)arg1;
- (void)_updateToggleAspectModeAbility;
- (void)_updateTopBarOrientationWithDeviceOrientation:(long long)arg1;
- (void)_updateTopBarStyleForDeviceOrientation:(long long)arg1;
- (void)_updateVideoPreviewViewVideoGravity;
- (bool)_useHDR;
- (id)_videoCaptureRequestWithCurrentSettings;
- (id)_viewWhichOwnsLivePreviewConstraints;
- (double)_virtualSliderPositionForExposureBias:(double)arg1;
- (bool)_wantsCaptureAnimations;
- (bool)_wantsForcedPreviewAspectRatio;
- (bool)_wantsFullScreenPreview;
- (bool)_wantsOrientationAnimations;
- (bool)_wantsPreviewSizeAdjustmentForBars;
- (bool)_wantsSuspensionBlurs;
- (void)_windowDidRotate:(id)arg1;
- (int)_windowEdgeClip;
- (bool)_zoomIsAllowed;
- (id)_zoomSlider;
- (void)_zoomSliderDidEndDragging:(id)arg1;
- (id)_zoomSliderOffsetConstraintsForView:(id)arg1;
- (void)_zoomSliderValueDidChange:(id)arg1 forEvent:(id)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (bool)allowsMultipleModes;
- (void)animateBlurForSuspension;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })aspectFaceRectFromSquareFaceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 angle:(double)arg2;
- (bool)bottomBarShouldHideElapsedTimeView:(id)arg1;
- (bool)bottomBarShouldHideFlipButton:(id)arg1;
- (bool)bottomBarShouldHideHDRButton:(id)arg1;
- (bool)bottomBarShouldHideTimerButton:(id)arg1;
- (void)cameraController:(id)arg1 cleanApertureDidChange:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)cameraController:(id)arg1 didChangeCaptureAbility:(bool)arg2;
- (void)cameraController:(id)arg1 didFinishTransitionToShowEffectsGrid:(bool)arg2;
- (void)cameraController:(id)arg1 didStartTransitionToShowEffectsGrid:(bool)arg2 animated:(bool)arg3;
- (void)cameraController:(id)arg1 faceMetadataDidChange:(id)arg2;
- (void)cameraController:(id)arg1 videoZoomFactorDidChange:(double)arg2;
- (void)cameraController:(id)arg1 willChangeToMode:(long long)arg2 device:(long long)arg3;
- (void)cameraController:(id)arg1 willResetFocus:(bool)arg2 exposure:(bool)arg3;
- (void)cameraController:(id)arg1 willTransitionToShowEffectsGrid:(bool)arg2;
- (void)cameraControllerDidChangeEffectFilterIndex:(id)arg1;
- (void)cameraControllerDidChangeExposureTargetBias:(id)arg1;
- (void)cameraControllerDidChangeHDRSuggestion:(id)arg1;
- (void)cameraControllerDidChangeUserLockedExposure:(id)arg1;
- (void)cameraControllerDidChangeUserLockedFocus:(id)arg1;
- (void)cameraControllerDidSetupSession:(id)arg1;
- (void)cameraControllerExposureDidEnd:(id)arg1;
- (void)cameraControllerExposureDidStart:(id)arg1;
- (void)cameraControllerFlashWillFireChanged:(id)arg1;
- (void)cameraControllerFocusDidEnd:(id)arg1;
- (void)cameraControllerFocusDidStart:(id)arg1;
- (void)cameraControllerModeDidChange:(id)arg1;
- (void)cameraControllerPreviewDidStart:(id)arg1;
- (void)cameraControllerServerError:(id)arg1;
- (void)cameraControllerSessionDidStart:(id)arg1;
- (void)cameraControllerSessionDidStop:(id)arg1;
- (void)cameraControllerSessionInterruptionEnded:(id)arg1;
- (void)cameraControllerSessionWasInterrupted:(id)arg1;
- (void)cameraControllerTorchActiveChanged:(id)arg1;
- (void)cameraControllerTorchAvailabilityChanged:(id)arg1;
- (void)cameraControllerWillStartPreview:(id)arg1;
- (void)cameraControllerWillStopSession:(id)arg1;
- (long long)cameraDevice;
- (long long)cameraMode;
- (void)cameraShutterCancelled:(id)arg1;
- (void)cameraShutterPressed:(id)arg1;
- (bool)cameraShutterReleased:(id)arg1;
- (void)captureController:(id)arg1 didCaptureStillImageForRequest:(id)arg2;
- (void)captureController:(id)arg1 didCompleteResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)captureController:(id)arg1 didFinishPanoramaRequest:(id)arg2 withResponse:(id)arg3;
- (void)captureController:(id)arg1 didFinishRecordingForVideoRequest:(id)arg2 withResponse:(id)arg3;
- (void)captureController:(id)arg1 didGenerateResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)captureController:(id)arg1 didOutputPanoramaCaptureParameters:(id)arg2;
- (void)captureController:(id)arg1 didStartCapturingForPanoramaRequest:(id)arg2;
- (void)captureController:(id)arg1 didStartProcessingForPanoramaRequest:(id)arg2;
- (void)captureController:(id)arg1 didStartRecordingForVideoRequest:(id)arg2;
- (void)captureController:(id)arg1 didStopCapturingForPanoramaRequest:(id)arg2;
- (void)captureController:(id)arg1 didStopRecordingForVideoRequest:(id)arg2;
- (void)captureController:(id)arg1 willCaptureStillImageForRequest:(id)arg2;
- (id)captureController;
- (void)captureControllerPanoramaConfigurationChanged:(id)arg1;
- (void)clearImageWellForNewSessionAlbum;
- (bool)controlsAreVisible;
- (struct CGPoint { double x1; double x2; })convertToPointOfInterestFromViewCoordinates:(struct CGPoint { double x1; double x2; })arg1 pointIsInsideContent:(bool*)arg2;
- (id)currentContentSize;
- (void)dealloc;
- (id)delegate;
- (void)didHideZoomSlider:(id)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)didPlayVideoRecordingSound;
- (void)didShowZoomSlider:(id)arg1;
- (void)disableCamera;
- (void)embedControlsIntoNavigationItem:(id)arg1 animated:(bool)arg2;
- (void)enableCamera;
- (void)flashButtonDidChangeAvailability:(id)arg1;
- (void)flashButtonDidChangeFlashMode:(id)arg1;
- (long long)flashMode;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (bool)hasInFlightCaptures;
- (void)hdrButtonDidChangeHDRMode:(id)arg1;
- (void)hideZoomSlider;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 spec:(id)arg2;
- (bool)isCameraReady;
- (bool)isGridVisible;
- (bool)isUserInteractionLoggingEnabled;
- (int)lastSelectedHDRMode;
- (long long)lastSelectedPhotoFlashMode;
- (void)layoutSubviews;
- (id)modeDial:(id)arg1 titleForItemAtIndex:(unsigned long long)arg2;
- (void)modeDialWasTapped:(id)arg1;
- (long long)numberOfItemsInModeDial:(id)arg1;
- (id)overlayView;
- (void)panoramaView:(id)arg1 didChangeDirection:(int)arg2;
- (void)pausePreview;
- (void)performPostcapturePreviewForVideoAtPath:(id)arg1;
- (void)prepareForDefaultImageSnapshot;
- (id)previewContainerView;
- (id)previewView;
- (int)previewViewAspectMode;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })previewViewTransform;
- (void)resetImageWellForFinishedSessionAlbum;
- (void)resumePreview;
- (int)rotationStyle;
- (long long)selectedModeIndex;
- (void)setAllowsMultipleModes:(bool)arg1;
- (void)setCameraDevice:(long long)arg1;
- (void)setCameraMode:(long long)arg1 device:(long long)arg2;
- (void)setCameraMode:(long long)arg1;
- (void)setControlsAreVisible:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFlashMode:(long long)arg1;
- (void)setGridVisible:(bool)arg1;
- (void)setImagePickerWantsVolumeButtonEvents:(bool)arg1;
- (void)setLastSelectedHDRMode:(int)arg1;
- (void)setLastSelectedPhotoFlashMode:(long long)arg1;
- (void)setPreviewViewAspectMode:(int)arg1;
- (void)setPreviewViewTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setRotationStyle:(int)arg1;
- (void)setSelectedModeIndex:(long long)arg1;
- (void)setTimerDuration:(long long)arg1;
- (void)setUserChangedHDRAfterFlash:(bool)arg1;
- (void)setUserInteractionLoggingEnabled:(bool)arg1;
- (void)setVideoFlashMode:(long long)arg1;
- (void)set_desiredNumberOfAvalancheCaptures:(long long)arg1;
- (void)showZoomSlider;
- (id)spec;
- (void)startPreview:(id)arg1;
- (void)startPreview;
- (bool)startVideoCapture;
- (void)stopPreview;
- (void)stopPreviewAnimated:(bool)arg1;
- (void)stopVideoCapture;
- (void)swipedToNextCameraMode;
- (void)swipedToPreviousCameraMode;
- (void)takePicture;
- (double)timeIntervalForDuration:(long long)arg1;
- (void)timerButtonDidChangeDuration:(id)arg1;
- (long long)timerDuration;
- (bool)topBarShouldHideElapsedTimeView:(id)arg1;
- (bool)topBarShouldHideFlashButton:(id)arg1;
- (bool)topBarShouldHideFlipButton:(id)arg1;
- (bool)topBarShouldHideHDRButton:(id)arg1;
- (bool)topBarShouldHideTimerButton:(id)arg1;
- (void)transitionToSize:(struct CGSize { double x1; double x2; })arg1 withCoordinator:(id)arg2;
- (void)updateConstraints;
- (void)updateImageWellImage:(id)arg1 uuid:(id)arg2 animated:(bool)arg3;
- (bool)userChangedHDRAfterFlash;
- (void)verifyViewOrdering;
- (long long)videoFlashMode;
- (id)videoPreviewView;
- (void)viewDidAppear;
- (void)viewWillBeDisplayed;
- (void)viewWillBeRemoved;
- (void)zoomSliderDidBeginAutozooming:(id)arg1;
- (void)zoomSliderDidEndAutozooming:(id)arg1;

@end
