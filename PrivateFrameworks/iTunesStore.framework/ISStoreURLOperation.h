/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
 */

@class <ISStoreURLOperationDelegate>, NSNumber;

@interface ISStoreURLOperation : ISURLOperation {
    NSNumber *_authenticatedDSID;
    bool_canSendGUIDParameter;
    bool_ignorePreexistingSecureToken;
    bool_needsAuthentication;
    bool_needsURLBag;
    bool_performsMachineDataActions;
    bool_shouldSendXTokenHeader;
    bool_urlKnownToBeTrusted;
    bool_useUserSpecificURLBag;
}

@property(retain) NSNumber * authenticatedDSID;
@property bool canSendGUIDParameter;
@property <ISStoreURLOperationDelegate> * delegate;
@property bool ignorePreexistingSecureToken;
@property bool needsAuthentication;
@property bool needsURLBag;
@property bool performsMachineDataActions;
@property bool shouldSendXTokenHeader;
@property bool urlKnownToBeTrusted;
@property bool useUserSpecificURLBag;

+ (void)_addITunesStoreHeadersToRequest:(id)arg1 withURLBag:(id)arg2 account:(id)arg3;
+ (void)_addITunesStoreHeadersToRequest:(id)arg1 withURLBag:(id)arg2 accountIdentifier:(id)arg3;
+ (id)_restrictionsHeaderValue;
+ (void)addITunesStoreHeadersToRequest:(id)arg1 withAccountIdentifier:(id)arg2;
+ (void)handleITunesStoreResponseHeaders:(id)arg1 withAccountIdentifier:(id)arg2;
+ (id)itemPingOperationWithIdentifier:(unsigned long long)arg1 urlBagKey:(id)arg2;
+ (id)pingOperationWithUrl:(id)arg1;
+ (id)propertyListOperationWithURLBagKey:(id)arg1;

- (id)_account;
- (void)_addStandardQueryParametersForURL:(id)arg1;
- (bool)_authenticateWithContext:(id)arg1 error:(id*)arg2;
- (bool)_canSendTokenToURL:(id)arg1;
- (id)_copyAuthenticationContext;
- (id)_copyAuthenticationContextForAttemptNumber:(long long)arg1;
- (id)_copyURLBagContext;
- (bool)_isErrorTokenError:(id)arg1;
- (id)_resolvedURLInBagContext:(id)arg1 URLBag:(id*)arg2;
- (void)_runURLOperation;
- (void)_setStoreFrontIdentifier:(id)arg1 isTransient:(bool)arg2;
- (id)_urlBagForContext:(id)arg1;
- (id)authenticatedAccountDSID;
- (id)authenticatedDSID;
- (bool)canSendGUIDParameter;
- (void)dealloc;
- (bool)handleRedirectFromDataProvider:(id)arg1 error:(id*)arg2;
- (void)handleResponse:(id)arg1;
- (bool)ignorePreexistingSecureToken;
- (id)init;
- (bool)needsAuthentication;
- (bool)needsURLBag;
- (id)newRequestWithURL:(id)arg1;
- (bool)performsMachineDataActions;
- (void)run;
- (void)setAuthenticatedDSID:(id)arg1;
- (void)setCanSendGUIDParameter:(bool)arg1;
- (void)setIgnorePreexistingSecureToken:(bool)arg1;
- (void)setNeedsAuthentication:(bool)arg1;
- (void)setNeedsURLBag:(bool)arg1;
- (void)setPerformsMachineDataActions:(bool)arg1;
- (void)setShouldSendXTokenHeader:(bool)arg1;
- (void)setUrlKnownToBeTrusted:(bool)arg1;
- (void)setUseUserSpecificURLBag:(bool)arg1;
- (bool)shouldFollowRedirectWithRequest:(id)arg1 returningError:(id*)arg2;
- (bool)shouldSendXTokenHeader;
- (bool)urlKnownToBeTrusted;
- (bool)useUserSpecificURLBag;

@end
